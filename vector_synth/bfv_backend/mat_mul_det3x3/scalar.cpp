
# include "../scalar.hpp"
int ScalarProgram::num_registers()
{
    return 122;
}

std::vector<std::string> ScalarProgram::vars_used()
{
    return {"a:2,0", "a:1,1", "b:2,2", "b:1,1", "a:2,1", "b:2,0", "b:2,1", "b:0,0", "a:0,2", "a:1,2", "a:0,0", "a:0,1", "b:0,2", "b:1,2", "a:2,2", "a:1,0", "b:0,1", "b:1,0"};
}

std::vector<ctxt> ScalarProgram::computation(std::map<std::string, ctxt> locs, RuntimeContext &info)
{
    seal::RelinKeys rk = info.keys->rk;
    ctxt regs[num_registers()];
    regs[0] = locs["a:0,0"];
    regs[1] = locs["b:0,0"];
    info.eval->multiply(regs[0], regs[1], regs[2]);
    info.eval->relinearize_inplace(regs[2], rk);
    regs[3] = locs["a:0,1"];
    regs[4] = locs["b:1,0"];
    info.eval->multiply(regs[3], regs[4], regs[5]);
    info.eval->relinearize_inplace(regs[5], rk);
    info.eval->add(regs[2], regs[5], regs[6]);
    regs[7] = locs["a:0,2"];
    info.eval->multiply(regs[7], locs["b:2,0"], regs[8]);
    info.eval->relinearize_inplace(regs[8], rk);
    info.eval->add(regs[6], regs[8], regs[9]);
    regs[10] = locs["a:1,0"];
    regs[11] = locs["b:0,1"];
    info.eval->multiply(regs[10], regs[11], regs[12]);
    info.eval->relinearize_inplace(regs[12], rk);
    regs[13] = locs["a:1,1"];
    regs[14] = locs["b:1,1"];
    info.eval->multiply(regs[13], regs[14], regs[15]);
    info.eval->relinearize_inplace(regs[15], rk);
    info.eval->add(regs[12], regs[15], regs[16]);
    regs[17] = locs["a:1,2"];
    info.eval->multiply(regs[17], locs["b:2,1"], regs[18]);
    info.eval->relinearize_inplace(regs[18], rk);
    info.eval->add(regs[16], regs[18], regs[19]);
    regs[20] = locs["b:0,2"];
    info.eval->multiply(locs["a:2,0"], regs[20], regs[21]);
    info.eval->relinearize_inplace(regs[21], rk);
    regs[22] = locs["b:1,2"];
    info.eval->multiply(locs["a:2,1"], regs[22], regs[23]);
    info.eval->relinearize_inplace(regs[23], rk);
    info.eval->add(regs[21], regs[23], regs[24]);
    info.eval->multiply(locs["a:2,2"], locs["b:2,2"], regs[25]);
    info.eval->relinearize_inplace(regs[25], rk);
    info.eval->add(regs[24], regs[25], regs[26]);
    info.eval->multiply(regs[19], regs[26], regs[27]);
    info.eval->relinearize_inplace(regs[27], rk);
    info.eval->multiply(locs["a:2,0"], regs[11], regs[28]);
    info.eval->relinearize_inplace(regs[28], rk);
    info.eval->multiply(locs["a:2,1"], regs[14], regs[29]);
    info.eval->relinearize_inplace(regs[29], rk);
    info.eval->add(regs[28], regs[29], regs[30]);
    info.eval->multiply(locs["a:2,2"], locs["b:2,1"], regs[31]);
    info.eval->relinearize_inplace(regs[31], rk);
    info.eval->add(regs[30], regs[31], regs[32]);
    regs[33] = locs["a:1,0"];
    info.eval->multiply(regs[33], regs[20], regs[34]);
    info.eval->relinearize_inplace(regs[34], rk);
    regs[35] = locs["a:1,1"];
    info.eval->multiply(regs[35], regs[22], regs[36]);
    info.eval->relinearize_inplace(regs[36], rk);
    info.eval->add(regs[34], regs[36], regs[37]);
    regs[38] = locs["a:1,2"];
    info.eval->multiply(regs[38], locs["b:2,2"], regs[39]);
    info.eval->relinearize_inplace(regs[39], rk);
    info.eval->add(regs[37], regs[39], regs[40]);
    info.eval->multiply(regs[32], regs[40], regs[41]);
    info.eval->relinearize_inplace(regs[41], rk);
    info.eval->add(regs[27], regs[41], regs[42]);
    info.eval->multiply(regs[9], regs[42], regs[43]);
    info.eval->relinearize_inplace(regs[43], rk);
    regs[44] = locs["a:0,0"];
    info.eval->multiply(regs[44], regs[11], regs[45]);
    info.eval->relinearize_inplace(regs[45], rk);
    regs[46] = locs["a:0,1"];
    info.eval->multiply(regs[46], regs[14], regs[47]);
    info.eval->relinearize_inplace(regs[47], rk);
    info.eval->add(regs[45], regs[47], regs[48]);
    regs[49] = locs["a:0,2"];
    info.eval->multiply(regs[49], locs["b:2,1"], regs[50]);
    info.eval->relinearize_inplace(regs[50], rk);
    info.eval->add(regs[48], regs[50], regs[51]);
    regs[52] = locs["a:1,0"];
    info.eval->multiply(regs[52], regs[1], regs[53]);
    info.eval->relinearize_inplace(regs[53], rk);
    regs[54] = locs["a:1,1"];
    info.eval->multiply(regs[54], regs[4], regs[55]);
    info.eval->relinearize_inplace(regs[55], rk);
    info.eval->add(regs[53], regs[55], regs[56]);
    regs[57] = locs["a:1,2"];
    info.eval->multiply(regs[57], locs["b:2,0"], regs[58]);
    info.eval->relinearize_inplace(regs[58], rk);
    info.eval->add(regs[56], regs[58], regs[59]);
    info.eval->multiply(locs["a:2,0"], regs[20], regs[60]);
    info.eval->relinearize_inplace(regs[60], rk);
    info.eval->multiply(locs["a:2,1"], regs[22], regs[61]);
    info.eval->relinearize_inplace(regs[61], rk);
    info.eval->add(regs[60], regs[61], regs[62]);
    info.eval->multiply(locs["a:2,2"], locs["b:2,2"], regs[63]);
    info.eval->relinearize_inplace(regs[63], rk);
    info.eval->add(regs[62], regs[63], regs[64]);
    info.eval->multiply(regs[59], regs[64], regs[65]);
    info.eval->relinearize_inplace(regs[65], rk);
    info.eval->multiply(locs["a:2,0"], regs[1], regs[66]);
    info.eval->relinearize_inplace(regs[66], rk);
    info.eval->multiply(locs["a:2,1"], regs[4], regs[67]);
    info.eval->relinearize_inplace(regs[67], rk);
    info.eval->add(regs[66], regs[67], regs[68]);
    info.eval->multiply(locs["a:2,2"], locs["b:2,0"], regs[69]);
    info.eval->relinearize_inplace(regs[69], rk);
    info.eval->add(regs[68], regs[69], regs[70]);
    regs[71] = locs["a:1,0"];
    info.eval->multiply(regs[71], regs[20], regs[72]);
    info.eval->relinearize_inplace(regs[72], rk);
    regs[73] = locs["a:1,1"];
    info.eval->multiply(regs[73], regs[22], regs[74]);
    info.eval->relinearize_inplace(regs[74], rk);
    info.eval->add(regs[72], regs[74], regs[75]);
    regs[76] = locs["a:1,2"];
    info.eval->multiply(regs[76], locs["b:2,2"], regs[77]);
    info.eval->relinearize_inplace(regs[77], rk);
    info.eval->add(regs[75], regs[77], regs[78]);
    info.eval->multiply(regs[70], regs[78], regs[79]);
    info.eval->relinearize_inplace(regs[79], rk);
    info.eval->add(regs[65], regs[79], regs[80]);
    info.eval->multiply(regs[51], regs[80], regs[81]);
    info.eval->relinearize_inplace(regs[81], rk);
    info.eval->sub(regs[43], regs[81], regs[82]);
    regs[83] = locs["a:0,0"];
    info.eval->multiply(regs[83], regs[20], regs[84]);
    info.eval->relinearize_inplace(regs[84], rk);
    regs[85] = locs["a:0,1"];
    info.eval->multiply(regs[85], regs[22], regs[86]);
    info.eval->relinearize_inplace(regs[86], rk);
    info.eval->add(regs[84], regs[86], regs[87]);
    regs[88] = locs["a:0,2"];
    info.eval->multiply(regs[88], locs["b:2,2"], regs[89]);
    info.eval->relinearize_inplace(regs[89], rk);
    info.eval->add(regs[87], regs[89], regs[90]);
    regs[91] = locs["a:1,0"];
    info.eval->multiply(regs[91], regs[1], regs[92]);
    info.eval->relinearize_inplace(regs[92], rk);
    regs[93] = locs["a:1,1"];
    info.eval->multiply(regs[93], regs[4], regs[94]);
    info.eval->relinearize_inplace(regs[94], rk);
    info.eval->add(regs[92], regs[94], regs[95]);
    regs[96] = locs["a:1,2"];
    info.eval->multiply(regs[96], locs["b:2,0"], regs[97]);
    info.eval->relinearize_inplace(regs[97], rk);
    info.eval->add(regs[95], regs[97], regs[98]);
    info.eval->multiply(locs["a:2,0"], regs[11], regs[99]);
    info.eval->relinearize_inplace(regs[99], rk);
    info.eval->multiply(locs["a:2,1"], regs[14], regs[100]);
    info.eval->relinearize_inplace(regs[100], rk);
    info.eval->add(regs[99], regs[100], regs[101]);
    info.eval->multiply(locs["a:2,2"], locs["b:2,1"], regs[102]);
    info.eval->relinearize_inplace(regs[102], rk);
    info.eval->add(regs[101], regs[102], regs[103]);
    info.eval->multiply(regs[98], regs[103], regs[104]);
    info.eval->relinearize_inplace(regs[104], rk);
    info.eval->multiply(locs["a:2,0"], regs[1], regs[105]);
    info.eval->relinearize_inplace(regs[105], rk);
    info.eval->multiply(locs["a:2,1"], regs[4], regs[106]);
    info.eval->relinearize_inplace(regs[106], rk);
    info.eval->add(regs[105], regs[106], regs[107]);
    info.eval->multiply(locs["a:2,2"], locs["b:2,0"], regs[108]);
    info.eval->relinearize_inplace(regs[108], rk);
    info.eval->add(regs[107], regs[108], regs[109]);
    regs[110] = locs["a:1,0"];
    info.eval->multiply(regs[110], regs[11], regs[111]);
    info.eval->relinearize_inplace(regs[111], rk);
    regs[112] = locs["a:1,1"];
    info.eval->multiply(regs[112], regs[14], regs[113]);
    info.eval->relinearize_inplace(regs[113], rk);
    info.eval->add(regs[111], regs[113], regs[114]);
    regs[115] = locs["a:1,2"];
    info.eval->multiply(regs[115], locs["b:2,1"], regs[116]);
    info.eval->relinearize_inplace(regs[116], rk);
    info.eval->add(regs[114], regs[116], regs[117]);
    info.eval->multiply(regs[109], regs[117], regs[118]);
    info.eval->relinearize_inplace(regs[118], rk);
    info.eval->add(regs[104], regs[118], regs[119]);
    info.eval->multiply(regs[90], regs[119], regs[120]);
    info.eval->relinearize_inplace(regs[120], rk);
    info.eval->add(regs[82], regs[120], regs[121]);
    std::vector<ctxt> answer;
    answer.push_back(regs[121]);
    return answer;
}
    