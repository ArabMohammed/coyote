
# include "../scalar.hpp"
int ScalarProgram::num_registers()
{
    return 179;
}

std::vector<std::string> ScalarProgram::vars_used()
{
    return {"b:1,0", "a:0,1", "b:2,2", "a:0,2", "b:1,2", "a:1,0", "a:1,2", "b:0,1", "b:1,1", "a:1,1", "a:0,0", "b:2,1", "b:0,0", "a:2,1", "a:2,0", "b:2,0", "a:2,2", "b:0,2"};
}

std::vector<ctxt> ScalarProgram::computation(std::map<std::string, ctxt> locs, RuntimeContext &info)
{
    seal::RelinKeys rk = info.keys->rk;
    ctxt regs[num_registers()];
    regs[0] = locs["a:0,0"];
    regs[1] = locs["b:0,0"];
    info.eval->multiply(regs[0], regs[1], regs[2]);
    info.eval->relinearize_inplace(regs[2], rk);
    regs[3] = locs["a:0,1"];
    regs[4] = locs["b:1,0"];
    info.eval->multiply(regs[3], regs[4], regs[5]);
    info.eval->relinearize_inplace(regs[5], rk);
    info.eval->add(regs[2], regs[5], regs[6]);
    regs[7] = locs["a:0,2"];
    regs[8] = locs["b:2,0"];
    info.eval->multiply(regs[7], regs[8], regs[9]);
    info.eval->relinearize_inplace(regs[9], rk);
    info.eval->add(regs[6], regs[9], regs[10]);
    regs[11] = locs["a:1,0"];
    regs[12] = locs["b:0,1"];
    info.eval->multiply(regs[11], regs[12], regs[13]);
    info.eval->relinearize_inplace(regs[13], rk);
    regs[14] = locs["a:1,1"];
    regs[15] = locs["b:1,1"];
    info.eval->multiply(regs[14], regs[15], regs[16]);
    info.eval->relinearize_inplace(regs[16], rk);
    info.eval->add(regs[13], regs[16], regs[17]);
    regs[18] = locs["a:1,2"];
    regs[19] = locs["b:2,1"];
    info.eval->multiply(regs[18], regs[19], regs[20]);
    info.eval->relinearize_inplace(regs[20], rk);
    info.eval->add(regs[17], regs[20], regs[21]);
    regs[22] = locs["a:2,0"];
    regs[23] = locs["b:0,2"];
    info.eval->multiply(regs[22], regs[23], regs[24]);
    info.eval->relinearize_inplace(regs[24], rk);
    regs[25] = locs["a:2,1"];
    regs[26] = locs["b:1,2"];
    info.eval->multiply(regs[25], regs[26], regs[27]);
    info.eval->relinearize_inplace(regs[27], rk);
    info.eval->add(regs[24], regs[27], regs[28]);
    regs[29] = locs["a:2,2"];
    regs[30] = locs["b:2,2"];
    info.eval->multiply(regs[29], regs[30], regs[31]);
    info.eval->relinearize_inplace(regs[31], rk);
    info.eval->add(regs[28], regs[31], regs[32]);
    info.eval->multiply(regs[21], regs[32], regs[33]);
    info.eval->relinearize_inplace(regs[33], rk);
    regs[34] = locs["a:2,0"];
    regs[35] = locs["b:0,1"];
    info.eval->multiply(regs[34], regs[35], regs[36]);
    info.eval->relinearize_inplace(regs[36], rk);
    regs[37] = locs["a:2,1"];
    regs[38] = locs["b:1,1"];
    info.eval->multiply(regs[37], regs[38], regs[39]);
    info.eval->relinearize_inplace(regs[39], rk);
    info.eval->add(regs[36], regs[39], regs[40]);
    regs[41] = locs["a:2,2"];
    regs[42] = locs["b:2,1"];
    info.eval->multiply(regs[41], regs[42], regs[43]);
    info.eval->relinearize_inplace(regs[43], rk);
    info.eval->add(regs[40], regs[43], regs[44]);
    regs[45] = locs["a:1,0"];
    regs[46] = locs["b:0,2"];
    info.eval->multiply(regs[45], regs[46], regs[47]);
    info.eval->relinearize_inplace(regs[47], rk);
    regs[48] = locs["a:1,1"];
    regs[49] = locs["b:1,2"];
    info.eval->multiply(regs[48], regs[49], regs[50]);
    info.eval->relinearize_inplace(regs[50], rk);
    info.eval->add(regs[47], regs[50], regs[51]);
    regs[52] = locs["a:1,2"];
    regs[53] = locs["b:2,2"];
    info.eval->multiply(regs[52], regs[53], regs[54]);
    info.eval->relinearize_inplace(regs[54], rk);
    info.eval->add(regs[51], regs[54], regs[55]);
    info.eval->multiply(regs[44], regs[55], regs[56]);
    info.eval->relinearize_inplace(regs[56], rk);
    info.eval->add(regs[33], regs[56], regs[57]);
    info.eval->multiply(regs[10], regs[57], regs[58]);
    info.eval->relinearize_inplace(regs[58], rk);
    regs[59] = locs["a:0,0"];
    regs[60] = locs["b:0,1"];
    info.eval->multiply(regs[59], regs[60], regs[61]);
    info.eval->relinearize_inplace(regs[61], rk);
    regs[62] = locs["a:0,1"];
    regs[63] = locs["b:1,1"];
    info.eval->multiply(regs[62], regs[63], regs[64]);
    info.eval->relinearize_inplace(regs[64], rk);
    info.eval->add(regs[61], regs[64], regs[65]);
    regs[66] = locs["a:0,2"];
    regs[67] = locs["b:2,1"];
    info.eval->multiply(regs[66], regs[67], regs[68]);
    info.eval->relinearize_inplace(regs[68], rk);
    info.eval->add(regs[65], regs[68], regs[69]);
    regs[70] = locs["a:1,0"];
    regs[71] = locs["b:0,0"];
    info.eval->multiply(regs[70], regs[71], regs[72]);
    info.eval->relinearize_inplace(regs[72], rk);
    regs[73] = locs["a:1,1"];
    regs[74] = locs["b:1,0"];
    info.eval->multiply(regs[73], regs[74], regs[75]);
    info.eval->relinearize_inplace(regs[75], rk);
    info.eval->add(regs[72], regs[75], regs[76]);
    regs[77] = locs["a:1,2"];
    regs[78] = locs["b:2,0"];
    info.eval->multiply(regs[77], regs[78], regs[79]);
    info.eval->relinearize_inplace(regs[79], rk);
    info.eval->add(regs[76], regs[79], regs[80]);
    regs[81] = locs["a:2,0"];
    regs[82] = locs["b:0,2"];
    info.eval->multiply(regs[81], regs[82], regs[83]);
    info.eval->relinearize_inplace(regs[83], rk);
    regs[84] = locs["a:2,1"];
    regs[85] = locs["b:1,2"];
    info.eval->multiply(regs[84], regs[85], regs[86]);
    info.eval->relinearize_inplace(regs[86], rk);
    info.eval->add(regs[83], regs[86], regs[87]);
    regs[88] = locs["a:2,2"];
    regs[89] = locs["b:2,2"];
    info.eval->multiply(regs[88], regs[89], regs[90]);
    info.eval->relinearize_inplace(regs[90], rk);
    info.eval->add(regs[87], regs[90], regs[91]);
    info.eval->multiply(regs[80], regs[91], regs[92]);
    info.eval->relinearize_inplace(regs[92], rk);
    regs[93] = locs["a:2,0"];
    regs[94] = locs["b:0,0"];
    info.eval->multiply(regs[93], regs[94], regs[95]);
    info.eval->relinearize_inplace(regs[95], rk);
    regs[96] = locs["a:2,1"];
    regs[97] = locs["b:1,0"];
    info.eval->multiply(regs[96], regs[97], regs[98]);
    info.eval->relinearize_inplace(regs[98], rk);
    info.eval->add(regs[95], regs[98], regs[99]);
    regs[100] = locs["a:2,2"];
    regs[101] = locs["b:2,0"];
    info.eval->multiply(regs[100], regs[101], regs[102]);
    info.eval->relinearize_inplace(regs[102], rk);
    info.eval->add(regs[99], regs[102], regs[103]);
    regs[104] = locs["a:1,0"];
    regs[105] = locs["b:0,2"];
    info.eval->multiply(regs[104], regs[105], regs[106]);
    info.eval->relinearize_inplace(regs[106], rk);
    regs[107] = locs["a:1,1"];
    regs[108] = locs["b:1,2"];
    info.eval->multiply(regs[107], regs[108], regs[109]);
    info.eval->relinearize_inplace(regs[109], rk);
    info.eval->add(regs[106], regs[109], regs[110]);
    regs[111] = locs["a:1,2"];
    regs[112] = locs["b:2,2"];
    info.eval->multiply(regs[111], regs[112], regs[113]);
    info.eval->relinearize_inplace(regs[113], rk);
    info.eval->add(regs[110], regs[113], regs[114]);
    info.eval->multiply(regs[103], regs[114], regs[115]);
    info.eval->relinearize_inplace(regs[115], rk);
    info.eval->add(regs[92], regs[115], regs[116]);
    info.eval->multiply(regs[69], regs[116], regs[117]);
    info.eval->relinearize_inplace(regs[117], rk);
    info.eval->sub(regs[58], regs[117], regs[118]);
    regs[119] = locs["a:0,0"];
    regs[120] = locs["b:0,2"];
    info.eval->multiply(regs[119], regs[120], regs[121]);
    info.eval->relinearize_inplace(regs[121], rk);
    regs[122] = locs["a:0,1"];
    regs[123] = locs["b:1,2"];
    info.eval->multiply(regs[122], regs[123], regs[124]);
    info.eval->relinearize_inplace(regs[124], rk);
    info.eval->add(regs[121], regs[124], regs[125]);
    regs[126] = locs["a:0,2"];
    regs[127] = locs["b:2,2"];
    info.eval->multiply(regs[126], regs[127], regs[128]);
    info.eval->relinearize_inplace(regs[128], rk);
    info.eval->add(regs[125], regs[128], regs[129]);
    regs[130] = locs["a:1,0"];
    regs[131] = locs["b:0,0"];
    info.eval->multiply(regs[130], regs[131], regs[132]);
    info.eval->relinearize_inplace(regs[132], rk);
    regs[133] = locs["a:1,1"];
    regs[134] = locs["b:1,0"];
    info.eval->multiply(regs[133], regs[134], regs[135]);
    info.eval->relinearize_inplace(regs[135], rk);
    info.eval->add(regs[132], regs[135], regs[136]);
    regs[137] = locs["a:1,2"];
    regs[138] = locs["b:2,0"];
    info.eval->multiply(regs[137], regs[138], regs[139]);
    info.eval->relinearize_inplace(regs[139], rk);
    info.eval->add(regs[136], regs[139], regs[140]);
    regs[141] = locs["a:2,0"];
    regs[142] = locs["b:0,1"];
    info.eval->multiply(regs[141], regs[142], regs[143]);
    info.eval->relinearize_inplace(regs[143], rk);
    regs[144] = locs["a:2,1"];
    regs[145] = locs["b:1,1"];
    info.eval->multiply(regs[144], regs[145], regs[146]);
    info.eval->relinearize_inplace(regs[146], rk);
    info.eval->add(regs[143], regs[146], regs[147]);
    regs[148] = locs["a:2,2"];
    regs[149] = locs["b:2,1"];
    info.eval->multiply(regs[148], regs[149], regs[150]);
    info.eval->relinearize_inplace(regs[150], rk);
    info.eval->add(regs[147], regs[150], regs[151]);
    info.eval->multiply(regs[140], regs[151], regs[152]);
    info.eval->relinearize_inplace(regs[152], rk);
    regs[153] = locs["a:2,0"];
    regs[154] = locs["b:0,0"];
    info.eval->multiply(regs[153], regs[154], regs[155]);
    info.eval->relinearize_inplace(regs[155], rk);
    regs[156] = locs["a:2,1"];
    regs[157] = locs["b:1,0"];
    info.eval->multiply(regs[156], regs[157], regs[158]);
    info.eval->relinearize_inplace(regs[158], rk);
    info.eval->add(regs[155], regs[158], regs[159]);
    regs[160] = locs["a:2,2"];
    regs[161] = locs["b:2,0"];
    info.eval->multiply(regs[160], regs[161], regs[162]);
    info.eval->relinearize_inplace(regs[162], rk);
    info.eval->add(regs[159], regs[162], regs[163]);
    regs[164] = locs["a:1,0"];
    regs[165] = locs["b:0,1"];
    info.eval->multiply(regs[164], regs[165], regs[166]);
    info.eval->relinearize_inplace(regs[166], rk);
    regs[167] = locs["a:1,1"];
    regs[168] = locs["b:1,1"];
    info.eval->multiply(regs[167], regs[168], regs[169]);
    info.eval->relinearize_inplace(regs[169], rk);
    info.eval->add(regs[166], regs[169], regs[170]);
    regs[171] = locs["a:1,2"];
    regs[172] = locs["b:2,1"];
    info.eval->multiply(regs[171], regs[172], regs[173]);
    info.eval->relinearize_inplace(regs[173], rk);
    info.eval->add(regs[170], regs[173], regs[174]);
    info.eval->multiply(regs[163], regs[174], regs[175]);
    info.eval->relinearize_inplace(regs[175], rk);
    info.eval->add(regs[152], regs[175], regs[176]);
    info.eval->multiply(regs[129], regs[176], regs[177]);
    info.eval->relinearize_inplace(regs[177], rk);
    info.eval->add(regs[118], regs[177], regs[178]);
    std::vector<ctxt> answer;
    answer.push_back(regs[178]);
    return answer;
}
    