
# include <vector.hpp>

std::map<std::string, ptxt> VectorProgram::make_bits(RuntimeContext &info)
{
    std::map<std::string, ptxt> bits;
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000010", info);
    add_bitstring(bits, "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000010000000000000000000000000010000000000000000001000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000010000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000", info);
    add_bitstring(bits, "00000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000100", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", info);
    add_bitstring(bits, "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100100000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00010000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00010000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000100000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000001000001000000000000000000000000000000001000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000100000000000000000000000000000000000000100", info);
    add_bitstring(bits, "00000100010000001000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00010000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000100000000000000000000000000000000010000000000000000100000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000100000000000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "01000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000010001", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000010000000000000010000000000000000000001000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000010100000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000010000000000000000000000000000001000100000000001000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000001100000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000010000", info);
    add_bitstring(bits, "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000", info);
    add_bitstring(bits, "00000000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00001001000000000000000000000000000000000000000000001000000000001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "10000000000000000000000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000010000000000000000000000000000000001000000000000000000000000000010000001000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000010000000000000000000000000000000000000000000000010000000000000000000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000010000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "10000001000000000000000000000000000000000001000000000000010100000000000000000000000000000000000100001000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000010000000001", info);
    add_bitstring(bits, "00000100000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000001000000000000000000000010000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100000000000000000000000000000100100000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000100000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000100000100010000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000001000000000000000000000000000000000000000000000001000000000000000000000000000100010000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000100000000000000000000000000000000000010000010000000000000000001000000000000000000000000000100000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000010000000000", info);
    add_bitstring(bits, "00000000000000000000000000100000000000000000001000000000000001001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000100000000000000100000000100000000000000000000000100000000000000000000000000000000001000001000001", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "01000000000000100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001010000010100000000000100", info);
    add_bitstring(bits, "00000000000000000000000000000000010101000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00001000000000000000000000000000000000000000001000000000000010100000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000010000000000000000000000000001000000000000001000000000000010000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000010000000000000000000001001000000000000000", info);
    add_bitstring(bits, "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000010100000000100100000000000000000000000000000000000000001000000000100000000000000000000000100000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000001000000000000001000000001000000000000000000000000000000000000000010000000001000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000100000000000000000000001000000010000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000010", info);
    add_bitstring(bits, "00000000000000000000000000000000010000000000000000000000000000000000001000000000000100000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000010", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "10000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00010000000000000000001000000100000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000010000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000101000000000000000000000100000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000001000000000000000000000000000000010", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000001100000010000010000010", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000001000010000000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000000000000000000000000100000000", info);
    add_bitstring(bits, "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000000000000100", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000", info);
    add_bitstring(bits, "00000000000100000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000001000000001000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000100000000000000000000", info);
    add_bitstring(bits, "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000010100000000000000000000001000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000001000000000001000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000001000", info);
    add_bitstring(bits, "00000000000000000001000100100010000000000000000000000000000000000000000000000000000000000000000000000110000000000001001000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000100010000000000000000000000000000000000000010000000000000000010000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000100000000000001000000000000100000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000", info);
    add_bitstring(bits, "00000000000010000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000010000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000100000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000100000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000101000010000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "10000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000100000000", info);
    add_bitstring(bits, "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000001000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000010000000000000000000000010000000000101000000010000000000000000000000000000000000001000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000100000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000100000000100000001000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "01000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000100000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000001000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000100000000001000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000010000000000000000000000000010000000", info);
    add_bitstring(bits, "00000000100000000100000001000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000010000001000000000000000010000000000000010010000100000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000001100100000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000001000000000000000000000000000000001000000000000000010000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000001000000000000001000000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000100100001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000", info);
    add_bitstring(bits, "00100000000000000000000000000000000000000000000100000110000000000000000000000001000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000110000000000000000000000010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000010000000000000000000000000000000010000000000100000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000", info);
    add_bitstring(bits, "10000000000000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000001000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000010000000010000000000000000000010000000000000000001000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000010000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000010000000100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010010000000000000000000000000000", info);
    add_bitstring(bits, "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000001000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000001000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000", info);
    add_bitstring(bits, "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000010000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000010000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000010000000000100000000000000000000000000000000000000000000000000000000", info);
    return bits;
}

std::vector<ctxt> VectorProgram::initialize_temps(RuntimeContext &info)
{
    std::vector<ctxt> ts(9);
    ts[0] = encrypt_inputinfo);
    ts[1] = encrypt_input("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    ts[2] = encrypt_input("00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    return ts;
}

ctxt VectorProgram::computation(std::vector<ctxt> ts, std::map<std::string, ptxt> bits, RuntimeContext &info)
{
    seal::RelinKeys rk = info.keys->rk;
    seal::GaloisKeys gk = info.keys->gk;

    ctxt vs[4];
    ctxt ss[130];

    vs[0] = ts[0];
    info.eval->rotate_rows(vs[0], -64, gk, ss[0]); // __s0 = __v0 >> 64
    info.eval->rotate_rows(vs[0], -121, gk, ss[1]); // __s1 = __v0 >> 121
    info.eval->rotate_rows(vs[0], -4, gk, ss[2]); // __s2 = __v0 >> 4
    info.eval->rotate_rows(vs[0], -6, gk, ss[3]); // __s3 = __v0 >> 6
    info.eval->rotate_rows(vs[0], -127, gk, ss[4]); // __s4 = __v0 >> 127
    info.eval->rotate_rows(vs[0], -80, gk, ss[5]); // __s5 = __v0 >> 80
    info.eval->rotate_rows(vs[0], -25, gk, ss[6]); // __s6 = __v0 >> 25
    info.eval->rotate_rows(vs[0], -36, gk, ss[7]); // __s7 = __v0 >> 36
    info.eval->rotate_rows(vs[0], -117, gk, ss[8]); // __s8 = __v0 >> 117
    info.eval->rotate_rows(vs[0], -113, gk, ss[9]); // __s9 = __v0 >> 113
    info.eval->rotate_rows(vs[0], -28, gk, ss[10]); // __s10 = __v0 >> 28
    info.eval->rotate_rows(vs[0], -9, gk, ss[11]); // __s11 = __v0 >> 9
    info.eval->rotate_rows(vs[0], -32, gk, ss[12]); // __s12 = __v0 >> 32
    info.eval->rotate_rows(vs[0], -107, gk, ss[13]); // __s13 = __v0 >> 107
    info.eval->rotate_rows(vs[0], -19, gk, ss[14]); // __s14 = __v0 >> 19
    info.eval->rotate_rows(vs[0], -51, gk, ss[15]); // __s15 = __v0 >> 51
    info.eval->rotate_rows(vs[0], -119, gk, ss[16]); // __s16 = __v0 >> 119
    info.eval->rotate_rows(vs[0], -35, gk, ss[17]); // __s17 = __v0 >> 35
    info.eval->rotate_rows(vs[0], -30, gk, ss[18]); // __s18 = __v0 >> 30
    info.eval->rotate_rows(vs[0], -126, gk, ss[19]); // __s19 = __v0 >> 126
    info.eval->rotate_rows(vs[0], -23, gk, ss[20]); // __s20 = __v0 >> 23
    info.eval->rotate_rows(vs[0], -96, gk, ss[21]); // __s21 = __v0 >> 96
    info.eval->rotate_rows(vs[0], -5, gk, ss[22]); // __s22 = __v0 >> 5
    info.eval->rotate_rows(vs[0], -124, gk, ss[23]); // __s23 = __v0 >> 124
    info.eval->rotate_rows(vs[0], -125, gk, ss[24]); // __s24 = __v0 >> 125
    info.eval->rotate_rows(vs[0], -93, gk, ss[25]); // __s25 = __v0 >> 93
    info.eval->rotate_rows(vs[0], -3, gk, ss[26]); // __s26 = __v0 >> 3
    info.eval->rotate_rows(vs[0], -7, gk, ss[27]); // __s27 = __v0 >> 7
    info.eval->rotate_rows(vs[0], -13, gk, ss[28]); // __s28 = __v0 >> 13
    info.eval->rotate_rows(vs[0], -109, gk, ss[29]); // __s29 = __v0 >> 109
    info.eval->rotate_rows(vs[0], -2, gk, ss[30]); // __s30 = __v0 >> 2
    info.eval->rotate_rows(vs[0], -100, gk, ss[31]); // __s31 = __v0 >> 100
    info.eval->rotate_rows(vs[0], -87, gk, ss[32]); // __s32 = __v0 >> 87
    info.eval->rotate_rows(vs[0], -103, gk, ss[33]); // __s33 = __v0 >> 103
    info.eval->rotate_rows(vs[0], -114, gk, ss[34]); // __s34 = __v0 >> 114
    info.eval->rotate_rows(vs[0], -111, gk, ss[35]); // __s35 = __v0 >> 111
    info.eval->rotate_rows(vs[0], -120, gk, ss[36]); // __s36 = __v0 >> 120
    info.eval->rotate_rows(vs[0], -11, gk, ss[37]); // __s37 = __v0 >> 11
    info.eval->rotate_rows(vs[0], -39, gk, ss[38]); // __s38 = __v0 >> 39
    info.eval->rotate_rows(vs[0], -18, gk, ss[39]); // __s39 = __v0 >> 18
    info.eval->rotate_rows(vs[0], -115, gk, ss[40]); // __s40 = __v0 >> 115
    info.eval->rotate_rows(vs[0], -79, gk, ss[41]); // __s41 = __v0 >> 79
    info.eval->rotate_rows(vs[0], -88, gk, ss[42]); // __s42 = __v0 >> 88
    info.eval->rotate_rows(vs[0], -65, gk, ss[43]); // __s43 = __v0 >> 65
    info.eval->rotate_rows(vs[0], -66, gk, ss[44]); // __s44 = __v0 >> 66
    info.eval->rotate_rows(vs[0], -108, gk, ss[45]); // __s45 = __v0 >> 108
    info.eval->rotate_rows(vs[0], -110, gk, ss[46]); // __s46 = __v0 >> 110
    info.eval->rotate_rows(vs[0], -69, gk, ss[47]); // __s47 = __v0 >> 69
    info.eval->rotate_rows(vs[0], -98, gk, ss[48]); // __s48 = __v0 >> 98
    info.eval->rotate_rows(vs[0], -24, gk, ss[49]); // __s49 = __v0 >> 24
    info.eval->rotate_rows(vs[0], -52, gk, ss[50]); // __s50 = __v0 >> 52
    info.eval->rotate_rows(vs[0], -31, gk, ss[51]); // __s51 = __v0 >> 31
    info.eval->rotate_rows(vs[0], -34, gk, ss[52]); // __s52 = __v0 >> 34
    info.eval->rotate_rows(vs[0], -63, gk, ss[53]); // __s53 = __v0 >> 63
    info.eval->rotate_rows(vs[0], -44, gk, ss[54]); // __s54 = __v0 >> 44
    info.eval->rotate_rows(vs[0], -53, gk, ss[55]); // __s55 = __v0 >> 53
    info.eval->rotate_rows(vs[0], -42, gk, ss[56]); // __s56 = __v0 >> 42
    info.eval->rotate_rows(vs[0], -45, gk, ss[57]); // __s57 = __v0 >> 45
    info.eval->rotate_rows(vs[0], -8, gk, ss[58]); // __s58 = __v0 >> 8
    info.eval->rotate_rows(vs[0], -38, gk, ss[59]); // __s59 = __v0 >> 38
    
    // __t3 = blend(__s25@10000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000, __s56@01000000000000100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v0@00100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000, __s5@00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000000000000100, __s43@00001001000000000000000000000000000000000000000000001000000000001000000000000000000000000000000000000000000000000000000000000000, __s13@00000100000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000000000000000000, __s2@00000010000000000000000000000000000000000000000000000010000000000000000000000000000000000010000000000000000000000000000000000000, __s9@00000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000, __s55@00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s8@00000000000100000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000, __s4@00000000000010000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000100000000000000000000000, __s57@00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s31@00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s47@00000000000000001000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s1@00000000000000000100000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s53@00000000000000000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s3@00000000000000000001000000000000001000000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000, __s33@00000000000000000000100000000000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000, __s50@00000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s29@00000000000000000000001000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000, __s59@00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s11@00000000000000000000000000000000100000000000000100000000100000000000000000000000100000000000000000000000000000000001000001000001, __s35@00000000000000000000000000000000010101000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s54@00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s41@00000000000000000000000000000000000000000101000010000000000000000000000000000000000000000000000000000000000000000000000000000000, __s26@00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s30@00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s48@00000000000000000000000000000000000000000000001000000000000000000000010000000000000000000000000000000000000000000000000000000000, __s32@00000000000000000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000000000000000000000000000, __s45@00000000000000000000000000000000000000000000000000010000000000000010000000000000000000001000000000000000000000000000000000000000, __s20@00000000000000000000000000000000000000000000000000000100010000000000000000000000000000000000000010000000000000000010000000000000, __s46@00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s18@00000000000000000000000000000000000000000000000000000000001000000000000000000000000000010000000000000000000001001000000000000000, __s7@00000000000000000000000000000000000000000000000000000000000010000000000100000000000000000000000000000000000000000000000000000000, __s27@00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000, __s37@00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000001000000000000000000000000000000010, __s40@00000000000000000000000000000000000000000000000000000000000000000100000000000001000000000000100000000000000000000000000000000000, __s28@00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000, __s23@00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000010000, __s39@00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000010000000000000000000000000010000000, __s15@00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000, __s19@00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000010000000000000000000, __s12@00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000000000000000000000000000000, __s14@00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100000000000000000000000000000100100000, __s17@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000, __s36@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000, __s16@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000, __s6@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000, __s49@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000, __s22@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000, __s51@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000, __s10@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000, __s38@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000, __t1@00000000010000000000000010000001000000000000000000100000000000000001100000000000000000000000000000000000000100100000000000000000)
    {
    ctxt t3_1, t3_2, t3_3, t3_4, t3_5, t3_6, t3_7, t3_8, t3_9, t3_10, t3_11, t3_12, t3_13, t3_14, t3_15, t3_16, t3_17, t3_18, t3_19, t3_20, t3_21, t3_22, t3_23, t3_24, t3_25, t3_26, t3_27, t3_28, t3_29, t3_30, t3_31, t3_32, t3_33, t3_34, t3_35, t3_36, t3_37, t3_38, t3_39, t3_40, t3_41, t3_42, t3_43, t3_44, t3_45, t3_46, t3_47, t3_48, t3_49, t3_50, t3_51, t3_52, t3_53;
    info.eval->multiply_plain(ss[25], bits["10000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000"], t3_1);
    info.eval->multiply_plain(ss[56], bits["01000000000000100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_2);
    info.eval->multiply_plain(vs[0], bits["00100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000"], t3_3);
    info.eval->multiply_plain(ss[5], bits["00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000000000000100"], t3_4);
    info.eval->multiply_plain(ss[43], bits["00001001000000000000000000000000000000000000000000001000000000001000000000000000000000000000000000000000000000000000000000000000"], t3_5);
    info.eval->multiply_plain(ss[13], bits["00000100000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000000000000000000"], t3_6);
    info.eval->multiply_plain(ss[2], bits["00000010000000000000000000000000000000000000000000000010000000000000000000000000000000000010000000000000000000000000000000000000"], t3_7);
    info.eval->multiply_plain(ss[9], bits["00000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"], t3_8);
    info.eval->multiply_plain(ss[55], bits["00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_9);
    info.eval->multiply_plain(ss[8], bits["00000000000100000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000"], t3_10);
    info.eval->multiply_plain(ss[4], bits["00000000000010000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000100000000000000000000000"], t3_11);
    info.eval->multiply_plain(ss[57], bits["00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_12);
    info.eval->multiply_plain(ss[31], bits["00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_13);
    info.eval->multiply_plain(ss[47], bits["00000000000000001000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_14);
    info.eval->multiply_plain(ss[1], bits["00000000000000000100000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_15);
    info.eval->multiply_plain(ss[53], bits["00000000000000000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_16);
    info.eval->multiply_plain(ss[3], bits["00000000000000000001000000000000001000000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000"], t3_17);
    info.eval->multiply_plain(ss[33], bits["00000000000000000000100000000000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000"], t3_18);
    info.eval->multiply_plain(ss[50], bits["00000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_19);
    info.eval->multiply_plain(ss[29], bits["00000000000000000000001000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"], t3_20);
    info.eval->multiply_plain(ss[59], bits["00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_21);
    info.eval->multiply_plain(ss[11], bits["00000000000000000000000000000000100000000000000100000000100000000000000000000000100000000000000000000000000000000001000001000001"], t3_22);
    info.eval->multiply_plain(ss[35], bits["00000000000000000000000000000000010101000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_23);
    info.eval->multiply_plain(ss[54], bits["00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_24);
    info.eval->multiply_plain(ss[41], bits["00000000000000000000000000000000000000000101000010000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_25);
    info.eval->multiply_plain(ss[26], bits["00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_26);
    info.eval->multiply_plain(ss[30], bits["00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_27);
    info.eval->multiply_plain(ss[48], bits["00000000000000000000000000000000000000000000001000000000000000000000010000000000000000000000000000000000000000000000000000000000"], t3_28);
    info.eval->multiply_plain(ss[32], bits["00000000000000000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000000000000000000000000000"], t3_29);
    info.eval->multiply_plain(ss[45], bits["00000000000000000000000000000000000000000000000000010000000000000010000000000000000000001000000000000000000000000000000000000000"], t3_30);
    info.eval->multiply_plain(ss[20], bits["00000000000000000000000000000000000000000000000000000100010000000000000000000000000000000000000010000000000000000010000000000000"], t3_31);
    info.eval->multiply_plain(ss[46], bits["00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t3_32);
    info.eval->multiply_plain(ss[18], bits["00000000000000000000000000000000000000000000000000000000001000000000000000000000000000010000000000000000000001001000000000000000"], t3_33);
    info.eval->multiply_plain(ss[7], bits["00000000000000000000000000000000000000000000000000000000000010000000000100000000000000000000000000000000000000000000000000000000"], t3_34);
    info.eval->multiply_plain(ss[27], bits["00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000"], t3_35);
    info.eval->multiply_plain(ss[37], bits["00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000001000000000000000000000000000000010"], t3_36);
    info.eval->multiply_plain(ss[40], bits["00000000000000000000000000000000000000000000000000000000000000000100000000000001000000000000100000000000000000000000000000000000"], t3_37);
    info.eval->multiply_plain(ss[28], bits["00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"], t3_38);
    info.eval->multiply_plain(ss[23], bits["00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000010000"], t3_39);
    info.eval->multiply_plain(ss[39], bits["00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000010000000000000000000000000010000000"], t3_40);
    info.eval->multiply_plain(ss[15], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000"], t3_41);
    info.eval->multiply_plain(ss[19], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000010000000000000000000"], t3_42);
    info.eval->multiply_plain(ss[12], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000000000000000000000000000000"], t3_43);
    info.eval->multiply_plain(ss[14], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100000000000000000000000000000100100000"], t3_44);
    info.eval->multiply_plain(ss[17], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000"], t3_45);
    info.eval->multiply_plain(ss[36], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000"], t3_46);
    info.eval->multiply_plain(ss[16], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000"], t3_47);
    info.eval->multiply_plain(ss[6], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000"], t3_48);
    info.eval->multiply_plain(ss[49], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000"], t3_49);
    info.eval->multiply_plain(ss[22], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t3_50);
    info.eval->multiply_plain(ss[51], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000"], t3_51);
    info.eval->multiply_plain(ss[10], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000"], t3_52);
    info.eval->multiply_plain(ss[38], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000"], t3_53);
    info.eval->add_many({t3_1, t3_2, t3_3, t3_4, t3_5, t3_6, t3_7, t3_8, t3_9, t3_10, t3_11, t3_12, t3_13, t3_14, t3_15, t3_16, t3_17, t3_18, t3_19, t3_20, t3_21, t3_22, t3_23, t3_24, t3_25, t3_26, t3_27, t3_28, t3_29, t3_30, t3_31, t3_32, t3_33, t3_34, t3_35, t3_36, t3_37, t3_38, t3_39, t3_40, t3_41, t3_42, t3_43, t3_44, t3_45, t3_46, t3_47, t3_48, t3_49, t3_50, t3_51, t3_52, t3_53, ts[1]}, ts[3]);
    }
    
    
    // __t4 = blend(__s54@10000000000000000000000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s21@00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s13@00010000000000000000001000000100000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000, __s32@00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s44@00000100010000001000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000, __s50@00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s41@00000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s25@00000000001000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v0@00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000000000000, __s16@00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s57@00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s55@00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s42@00000000000000000000010000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000000000000000000, __s5@00000000000000000000000100000000000000000000000000000000010000000000000000100000000000000000000000000000000000000000000000000000, __s33@00000000000000000000000000010000000000000000000000000000000001000000000000000000000000000010000001000000000000000000000000000000, __s19@00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s35@00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s23@00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000, __s24@00000000000000000000000000000000100100001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000, __s34@00000000000000000000000000000000010000000000000000000000000000000000001000000000000100000000000000000000000000000000000000000000, __s59@00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s22@00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000, __s47@00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s36@00000000000000000000000000000000000000000010000000000000000000000000000001000100000000001000000000000000000000000000000000000000, __s2@00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000, __s40@00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s14@00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s27@00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000001100000000000000000000, __s6@00000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000010000000000000000, __s43@00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000, __s45@00000000000000000000000000000000000000000000000000100000000100000001000000000000000000000000000000000000000000000000000000000000, __s10@00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000000000, __s48@00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000, __s30@00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000, __s28@00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001000000, __s9@00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s12@00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000, __s7@00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000010, __s4@00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000100000000001000000000000000000000000000, __s8@00000000000000000000000000000000000000000000000000000000000000100000100010000000000000000000000000000000000000000000000000000000, __s17@00000000000000000000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000000000000000000, __s0@00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000101000000000000000000000100000000000, __s31@00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000, __s46@00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000, __s18@00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000, __s29@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010010000000000000000000000000000, __s38@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000, __s3@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000, __s58@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100100000000000000, __s52@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000, __s11@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000, __s39@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000, __s1@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000, __t2@01000001000111100000100011000000000000000000000000000000000000000000000100010000111000000000000000100010010001000001001010000101)
    {
    ctxt t4_1, t4_2, t4_3, t4_4, t4_5, t4_6, t4_7, t4_8, t4_9, t4_10, t4_11, t4_12, t4_13, t4_14, t4_15, t4_16, t4_17, t4_18, t4_19, t4_20, t4_21, t4_22, t4_23, t4_24, t4_25, t4_26, t4_27, t4_28, t4_29, t4_30, t4_31, t4_32, t4_33, t4_34, t4_35, t4_36, t4_37, t4_38, t4_39, t4_40, t4_41, t4_42, t4_43, t4_44, t4_45, t4_46, t4_47, t4_48, t4_49, t4_50, t4_51, t4_52, t4_53;
    info.eval->multiply_plain(ss[54], bits["10000000000000000000000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_1);
    info.eval->multiply_plain(ss[21], bits["00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_2);
    info.eval->multiply_plain(ss[13], bits["00010000000000000000001000000100000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"], t4_3);
    info.eval->multiply_plain(ss[32], bits["00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_4);
    info.eval->multiply_plain(ss[44], bits["00000100010000001000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"], t4_5);
    info.eval->multiply_plain(ss[50], bits["00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_6);
    info.eval->multiply_plain(ss[41], bits["00000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_7);
    info.eval->multiply_plain(ss[25], bits["00000000001000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_8);
    info.eval->multiply_plain(vs[0], bits["00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000000000000"], t4_9);
    info.eval->multiply_plain(ss[16], bits["00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_10);
    info.eval->multiply_plain(ss[57], bits["00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_11);
    info.eval->multiply_plain(ss[55], bits["00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_12);
    info.eval->multiply_plain(ss[42], bits["00000000000000000000010000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000000000000000000"], t4_13);
    info.eval->multiply_plain(ss[5], bits["00000000000000000000000100000000000000000000000000000000010000000000000000100000000000000000000000000000000000000000000000000000"], t4_14);
    info.eval->multiply_plain(ss[33], bits["00000000000000000000000000010000000000000000000000000000000001000000000000000000000000000010000001000000000000000000000000000000"], t4_15);
    info.eval->multiply_plain(ss[19], bits["00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_16);
    info.eval->multiply_plain(ss[35], bits["00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_17);
    info.eval->multiply_plain(ss[23], bits["00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"], t4_18);
    info.eval->multiply_plain(ss[24], bits["00000000000000000000000000000000100100001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"], t4_19);
    info.eval->multiply_plain(ss[34], bits["00000000000000000000000000000000010000000000000000000000000000000000001000000000000100000000000000000000000000000000000000000000"], t4_20);
    info.eval->multiply_plain(ss[59], bits["00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_21);
    info.eval->multiply_plain(ss[22], bits["00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000"], t4_22);
    info.eval->multiply_plain(ss[47], bits["00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_23);
    info.eval->multiply_plain(ss[36], bits["00000000000000000000000000000000000000000010000000000000000000000000000001000100000000001000000000000000000000000000000000000000"], t4_24);
    info.eval->multiply_plain(ss[2], bits["00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000"], t4_25);
    info.eval->multiply_plain(ss[40], bits["00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_26);
    info.eval->multiply_plain(ss[14], bits["00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_27);
    info.eval->multiply_plain(ss[27], bits["00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000001100000000000000000000"], t4_28);
    info.eval->multiply_plain(ss[6], bits["00000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000010000000000000000"], t4_29);
    info.eval->multiply_plain(ss[43], bits["00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_30);
    info.eval->multiply_plain(ss[45], bits["00000000000000000000000000000000000000000000000000100000000100000001000000000000000000000000000000000000000000000000000000000000"], t4_31);
    info.eval->multiply_plain(ss[10], bits["00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000000000"], t4_32);
    info.eval->multiply_plain(ss[48], bits["00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_33);
    info.eval->multiply_plain(ss[30], bits["00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000"], t4_34);
    info.eval->multiply_plain(ss[28], bits["00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001000000"], t4_35);
    info.eval->multiply_plain(ss[9], bits["00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t4_36);
    info.eval->multiply_plain(ss[12], bits["00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000"], t4_37);
    info.eval->multiply_plain(ss[7], bits["00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000010"], t4_38);
    info.eval->multiply_plain(ss[4], bits["00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000100000000001000000000000000000000000000"], t4_39);
    info.eval->multiply_plain(ss[8], bits["00000000000000000000000000000000000000000000000000000000000000100000100010000000000000000000000000000000000000000000000000000000"], t4_40);
    info.eval->multiply_plain(ss[17], bits["00000000000000000000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000000000000000000"], t4_41);
    info.eval->multiply_plain(ss[0], bits["00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000101000000000000000000000100000000000"], t4_42);
    info.eval->multiply_plain(ss[31], bits["00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000"], t4_43);
    info.eval->multiply_plain(ss[46], bits["00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"], t4_44);
    info.eval->multiply_plain(ss[18], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000"], t4_45);
    info.eval->multiply_plain(ss[29], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010010000000000000000000000000000"], t4_46);
    info.eval->multiply_plain(ss[38], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000"], t4_47);
    info.eval->multiply_plain(ss[3], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000"], t4_48);
    info.eval->multiply_plain(ss[58], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100100000000000000"], t4_49);
    info.eval->multiply_plain(ss[52], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000"], t4_50);
    info.eval->multiply_plain(ss[11], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000"], t4_51);
    info.eval->multiply_plain(ss[39], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000"], t4_52);
    info.eval->multiply_plain(ss[1], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000"], t4_53);
    info.eval->add_many({t4_1, t4_2, t4_3, t4_4, t4_5, t4_6, t4_7, t4_8, t4_9, t4_10, t4_11, t4_12, t4_13, t4_14, t4_15, t4_16, t4_17, t4_18, t4_19, t4_20, t4_21, t4_22, t4_23, t4_24, t4_25, t4_26, t4_27, t4_28, t4_29, t4_30, t4_31, t4_32, t4_33, t4_34, t4_35, t4_36, t4_37, t4_38, t4_39, t4_40, t4_41, t4_42, t4_43, t4_44, t4_45, t4_46, t4_47, t4_48, t4_49, t4_50, t4_51, t4_52, t4_53, ts[2]}, ts[4]);
    }
    
    info.eval->add(ts[3], ts[4], vs[1]); // __v1 = __t3 + __t4
    info.eval->rotate_rows(vs[1], -6, gk, ss[60]); // __s60 = __v1 >> 6
    info.eval->rotate_rows(vs[1], -25, gk, ss[61]); // __s61 = __v1 >> 25
    info.eval->rotate_rows(vs[1], -82, gk, ss[62]); // __s62 = __v1 >> 82
    info.eval->rotate_rows(vs[1], -105, gk, ss[63]); // __s63 = __v1 >> 105
    info.eval->rotate_rows(vs[1], -26, gk, ss[64]); // __s64 = __v1 >> 26
    info.eval->rotate_rows(vs[1], -80, gk, ss[65]); // __s65 = __v1 >> 80
    info.eval->rotate_rows(vs[1], -127, gk, ss[66]); // __s66 = __v1 >> 127
    info.eval->rotate_rows(vs[1], -28, gk, ss[67]); // __s67 = __v1 >> 28
    info.eval->rotate_rows(vs[1], -92, gk, ss[68]); // __s68 = __v1 >> 92
    info.eval->rotate_rows(vs[1], -66, gk, ss[69]); // __s69 = __v1 >> 66
    info.eval->rotate_rows(vs[1], -115, gk, ss[70]); // __s70 = __v1 >> 115
    info.eval->rotate_rows(vs[1], -119, gk, ss[71]); // __s71 = __v1 >> 119
    info.eval->rotate_rows(vs[1], -106, gk, ss[72]); // __s72 = __v1 >> 106
    info.eval->rotate_rows(vs[1], -108, gk, ss[73]); // __s73 = __v1 >> 108
    info.eval->rotate_rows(vs[1], -7, gk, ss[74]); // __s74 = __v1 >> 7
    info.eval->rotate_rows(vs[1], -9, gk, ss[75]); // __s75 = __v1 >> 9
    info.eval->rotate_rows(vs[1], -53, gk, ss[76]); // __s76 = __v1 >> 53
    info.eval->rotate_rows(vs[1], -97, gk, ss[77]); // __s77 = __v1 >> 97
    info.eval->rotate_rows(vs[1], -52, gk, ss[78]); // __s78 = __v1 >> 52
    info.eval->rotate_rows(vs[1], -102, gk, ss[79]); // __s79 = __v1 >> 102
    info.eval->rotate_rows(vs[1], -90, gk, ss[80]); // __s80 = __v1 >> 90
    info.eval->rotate_rows(vs[1], -78, gk, ss[81]); // __s81 = __v1 >> 78
    info.eval->rotate_rows(vs[1], -122, gk, ss[82]); // __s82 = __v1 >> 122
    info.eval->rotate_rows(vs[1], -38, gk, ss[83]); // __s83 = __v1 >> 38
    info.eval->rotate_rows(vs[1], -83, gk, ss[84]); // __s84 = __v1 >> 83
    info.eval->rotate_rows(vs[1], -68, gk, ss[85]); // __s85 = __v1 >> 68
    info.eval->rotate_rows(vs[1], -120, gk, ss[86]); // __s86 = __v1 >> 120
    info.eval->rotate_rows(vs[1], -48, gk, ss[87]); // __s87 = __v1 >> 48
    info.eval->rotate_rows(vs[1], -100, gk, ss[88]); // __s88 = __v1 >> 100
    info.eval->rotate_rows(vs[1], -96, gk, ss[89]); // __s89 = __v1 >> 96
    info.eval->rotate_rows(vs[1], -117, gk, ss[90]); // __s90 = __v1 >> 117
    info.eval->rotate_rows(vs[1], -32, gk, ss[91]); // __s91 = __v1 >> 32
    info.eval->rotate_rows(vs[1], -85, gk, ss[92]); // __s92 = __v1 >> 85
    
    // __t5 = blend(__s72@10000001000000000000000000000000000000000001000000000000010100000000000000000000000000000000000100001000000000000000000000000000, __v1@01000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000010001, __s77@00100000000000000000000000000000000000000000000100000110000000000000000000000001000000000000000000000000000000000000000000000000, __s73@00010000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000100000000000000000000000000000, __s70@00001000000000000000000000000000000000000000001000000000000010100000000000000000000000000000000000000000000000000000000000000000, __s81@00000100000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000, __s60@00000010000000100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000, __s66@00000000100000000100000001000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000, __s80@00000000010000001000000000000000010000000000000010010000100000000000000000000000000000000000000000000000000000000000000000000000, __s85@00000000001000000000001000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s71@00000000000110000000000000000000000010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s79@00000000000001000000000000000000000000000000000000000000000001000000000000000000000000000100010000000000000000000000000000000000, __s91@00000000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s87@00000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s83@00000000000000000001000100100010000000000000000000000000000000000000000000000000000000000000000000000110000000000001001000000000, __s84@00000000000000000000000010000000000000000000000000001000000000000001000000000000010000000000000000000000000000000000000000000000, __s61@00000000000000000000000000010100000000100100000000000000000000000000000000000000001000000000100000000000000000000000100000000000, __s64@00000000000000000000000000000000100000000000000000000000000000000000010000010000000000000000001000000000000000000000000000100000, __s74@00000000000000000000000000000000001000000000000001000000001000000000000000000000000000000000000000010000000001000000000000000000, __s75@00000000000000000000000000000000000001000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000, __s67@00000000000000000000000000000000000000010000000000000000000000010000000000101000000010000000000000000000000000000000000001000000, __s82@00000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000000000000000000000000100000000, __s86@00000000000000000000000000000000000000000000000000000000000000000010100000000000000000000001000000000000000000000000000000000000, __s89@00000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000, __s88@00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000, __s92@00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000, __s69@00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000, __s76@00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001010000010100000000000100, __s62@00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000001100000010000010000010, __s78@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000, __s65@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000010000000000, __s90@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000, __s68@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000, __s63@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000)
    {
    ctxt t5_1, t5_2, t5_3, t5_4, t5_5, t5_6, t5_7, t5_8, t5_9, t5_10, t5_11, t5_12, t5_13, t5_14, t5_15, t5_16, t5_17, t5_18, t5_19, t5_20, t5_21, t5_22, t5_23, t5_24, t5_25, t5_26, t5_27, t5_28, t5_29, t5_30, t5_31, t5_32, t5_33, t5_34;
    info.eval->multiply_plain(ss[72], bits["10000001000000000000000000000000000000000001000000000000010100000000000000000000000000000000000100001000000000000000000000000000"], t5_1);
    info.eval->multiply_plain(vs[1], bits["01000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000010001"], t5_2);
    info.eval->multiply_plain(ss[77], bits["00100000000000000000000000000000000000000000000100000110000000000000000000000001000000000000000000000000000000000000000000000000"], t5_3);
    info.eval->multiply_plain(ss[73], bits["00010000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000100000000000000000000000000000"], t5_4);
    info.eval->multiply_plain(ss[70], bits["00001000000000000000000000000000000000000000001000000000000010100000000000000000000000000000000000000000000000000000000000000000"], t5_5);
    info.eval->multiply_plain(ss[81], bits["00000100000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"], t5_6);
    info.eval->multiply_plain(ss[60], bits["00000010000000100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000"], t5_7);
    info.eval->multiply_plain(ss[66], bits["00000000100000000100000001000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"], t5_8);
    info.eval->multiply_plain(ss[80], bits["00000000010000001000000000000000010000000000000010010000100000000000000000000000000000000000000000000000000000000000000000000000"], t5_9);
    info.eval->multiply_plain(ss[85], bits["00000000001000000000001000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_10);
    info.eval->multiply_plain(ss[71], bits["00000000000110000000000000000000000010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_11);
    info.eval->multiply_plain(ss[79], bits["00000000000001000000000000000000000000000000000000000000000001000000000000000000000000000100010000000000000000000000000000000000"], t5_12);
    info.eval->multiply_plain(ss[91], bits["00000000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_13);
    info.eval->multiply_plain(ss[87], bits["00000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_14);
    info.eval->multiply_plain(ss[83], bits["00000000000000000001000100100010000000000000000000000000000000000000000000000000000000000000000000000110000000000001001000000000"], t5_15);
    info.eval->multiply_plain(ss[84], bits["00000000000000000000000010000000000000000000000000001000000000000001000000000000010000000000000000000000000000000000000000000000"], t5_16);
    info.eval->multiply_plain(ss[61], bits["00000000000000000000000000010100000000100100000000000000000000000000000000000000001000000000100000000000000000000000100000000000"], t5_17);
    info.eval->multiply_plain(ss[64], bits["00000000000000000000000000000000100000000000000000000000000000000000010000010000000000000000001000000000000000000000000000100000"], t5_18);
    info.eval->multiply_plain(ss[74], bits["00000000000000000000000000000000001000000000000001000000001000000000000000000000000000000000000000010000000001000000000000000000"], t5_19);
    info.eval->multiply_plain(ss[75], bits["00000000000000000000000000000000000001000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000"], t5_20);
    info.eval->multiply_plain(ss[67], bits["00000000000000000000000000000000000000010000000000000000000000010000000000101000000010000000000000000000000000000000000001000000"], t5_21);
    info.eval->multiply_plain(ss[82], bits["00000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000000000000000000000000100000000"], t5_22);
    info.eval->multiply_plain(ss[86], bits["00000000000000000000000000000000000000000000000000000000000000000010100000000000000000000001000000000000000000000000000000000000"], t5_23);
    info.eval->multiply_plain(ss[89], bits["00000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000"], t5_24);
    info.eval->multiply_plain(ss[88], bits["00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"], t5_25);
    info.eval->multiply_plain(ss[92], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"], t5_26);
    info.eval->multiply_plain(ss[69], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"], t5_27);
    info.eval->multiply_plain(ss[76], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001010000010100000000000100"], t5_28);
    info.eval->multiply_plain(ss[62], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000001100000010000010000010"], t5_29);
    info.eval->multiply_plain(ss[78], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000"], t5_30);
    info.eval->multiply_plain(ss[65], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000010000000000"], t5_31);
    info.eval->multiply_plain(ss[90], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"], t5_32);
    info.eval->multiply_plain(ss[68], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"], t5_33);
    info.eval->multiply_plain(ss[63], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000"], t5_34);
    info.eval->add_many({t5_1, t5_2, t5_3, t5_4, t5_5, t5_6, t5_7, t5_8, t5_9, t5_10, t5_11, t5_12, t5_13, t5_14, t5_15, t5_16, t5_17, t5_18, t5_19, t5_20, t5_21, t5_22, t5_23, t5_24, t5_25, t5_26, t5_27, t5_28, t5_29, t5_30, t5_31, t5_32, t5_33, t5_34}, ts[5]);
    }
    
    
    // __t6 = blend(__s72@10000001000000000000000000000000000000000001000000000000010100000000000000000000000000000000000100001000000000000000000000000000, __v1@01000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000010001, __s77@00100000000000000000000000000000000000000000000100000110000000000000000000000001000000000000000000000000000000000000000000000000, __s73@00010000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000100000000000000000000000000000, __s70@00001000000000000000000000000000000000000000001000000000000010100000000000000000000000000000000000000000000000000000000000000000, __s81@00000100000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000, __s60@00000010000000100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000, __s66@00000000100000000100000001000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000, __s80@00000000010000001000000000000000010000000000000010010000100000000000000000000000000000000000000000000000000000000000000000000000, __s85@00000000001000000000001000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s71@00000000000110000000000000000000000010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s79@00000000000001000000000000000000000000000000000000000000000001000000000000000000000000000100010000000000000000000000000000000000, __s91@00000000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s87@00000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s83@00000000000000000001000100100010000000000000000000000000000000000000000000000000000000000000000000000110000000000001001000000000, __s84@00000000000000000000000010000000000000000000000000001000000000000001000000000000010000000000000000000000000000000000000000000000, __s61@00000000000000000000000000010100000000100100000000000000000000000000000000000000001000000000100000000000000000000000100000000000, __s64@00000000000000000000000000000000100000000000000000000000000000000000010000010000000000000000001000000000000000000000000000100000, __s74@00000000000000000000000000000000001000000000000001000000001000000000000000000000000000000000000000010000000001000000000000000000, __s75@00000000000000000000000000000000000001000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000, __s67@00000000000000000000000000000000000000010000000000000000000000010000000000101000000010000000000000000000000000000000000001000000, __s82@00000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000000000000000000000000100000000, __s86@00000000000000000000000000000000000000000000000000000000000000000010100000000000000000000001000000000000000000000000000000000000, __s89@00000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000, __s88@00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000, __s92@00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000, __s69@00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000, __s76@00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001010000010100000000000100, __s62@00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000001100000010000010000010, __s78@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000, __s65@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000010000000000, __s90@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000, __s68@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000, __s63@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000)
    {
    ctxt t6_1, t6_2, t6_3, t6_4, t6_5, t6_6, t6_7, t6_8, t6_9, t6_10, t6_11, t6_12, t6_13, t6_14, t6_15, t6_16, t6_17, t6_18, t6_19, t6_20, t6_21, t6_22, t6_23, t6_24, t6_25, t6_26, t6_27, t6_28, t6_29, t6_30, t6_31, t6_32, t6_33, t6_34;
    info.eval->multiply_plain(ss[72], bits["10000001000000000000000000000000000000000001000000000000010100000000000000000000000000000000000100001000000000000000000000000000"], t6_1);
    info.eval->multiply_plain(vs[1], bits["01000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000000000000000010000000000000010001"], t6_2);
    info.eval->multiply_plain(ss[77], bits["00100000000000000000000000000000000000000000000100000110000000000000000000000001000000000000000000000000000000000000000000000000"], t6_3);
    info.eval->multiply_plain(ss[73], bits["00010000000000000000000000000000000000000010000000000000000000000000001000000000000000000000000000100000000000000000000000000000"], t6_4);
    info.eval->multiply_plain(ss[70], bits["00001000000000000000000000000000000000000000001000000000000010100000000000000000000000000000000000000000000000000000000000000000"], t6_5);
    info.eval->multiply_plain(ss[81], bits["00000100000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"], t6_6);
    info.eval->multiply_plain(ss[60], bits["00000010000000100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000"], t6_7);
    info.eval->multiply_plain(ss[66], bits["00000000100000000100000001000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"], t6_8);
    info.eval->multiply_plain(ss[80], bits["00000000010000001000000000000000010000000000000010010000100000000000000000000000000000000000000000000000000000000000000000000000"], t6_9);
    info.eval->multiply_plain(ss[85], bits["00000000001000000000001000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_10);
    info.eval->multiply_plain(ss[71], bits["00000000000110000000000000000000000010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_11);
    info.eval->multiply_plain(ss[79], bits["00000000000001000000000000000000000000000000000000000000000001000000000000000000000000000100010000000000000000000000000000000000"], t6_12);
    info.eval->multiply_plain(ss[91], bits["00000000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_13);
    info.eval->multiply_plain(ss[87], bits["00000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_14);
    info.eval->multiply_plain(ss[83], bits["00000000000000000001000100100010000000000000000000000000000000000000000000000000000000000000000000000110000000000001001000000000"], t6_15);
    info.eval->multiply_plain(ss[84], bits["00000000000000000000000010000000000000000000000000001000000000000001000000000000010000000000000000000000000000000000000000000000"], t6_16);
    info.eval->multiply_plain(ss[61], bits["00000000000000000000000000010100000000100100000000000000000000000000000000000000001000000000100000000000000000000000100000000000"], t6_17);
    info.eval->multiply_plain(ss[64], bits["00000000000000000000000000000000100000000000000000000000000000000000010000010000000000000000001000000000000000000000000000100000"], t6_18);
    info.eval->multiply_plain(ss[74], bits["00000000000000000000000000000000001000000000000001000000001000000000000000000000000000000000000000010000000001000000000000000000"], t6_19);
    info.eval->multiply_plain(ss[75], bits["00000000000000000000000000000000000001000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000"], t6_20);
    info.eval->multiply_plain(ss[67], bits["00000000000000000000000000000000000000010000000000000000000000010000000000101000000010000000000000000000000000000000000001000000"], t6_21);
    info.eval->multiply_plain(ss[82], bits["00000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000000000000000000000000100000000"], t6_22);
    info.eval->multiply_plain(ss[86], bits["00000000000000000000000000000000000000000000000000000000000000000010100000000000000000000001000000000000000000000000000000000000"], t6_23);
    info.eval->multiply_plain(ss[89], bits["00000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000"], t6_24);
    info.eval->multiply_plain(ss[88], bits["00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"], t6_25);
    info.eval->multiply_plain(ss[92], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"], t6_26);
    info.eval->multiply_plain(ss[69], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"], t6_27);
    info.eval->multiply_plain(ss[76], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001010000010100000000000100"], t6_28);
    info.eval->multiply_plain(ss[62], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000001100000010000010000010"], t6_29);
    info.eval->multiply_plain(ss[78], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000"], t6_30);
    info.eval->multiply_plain(ss[65], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000010000000000"], t6_31);
    info.eval->multiply_plain(ss[90], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"], t6_32);
    info.eval->multiply_plain(ss[68], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"], t6_33);
    info.eval->multiply_plain(ss[63], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000"], t6_34);
    info.eval->add_many({t6_1, t6_2, t6_3, t6_4, t6_5, t6_6, t6_7, t6_8, t6_9, t6_10, t6_11, t6_12, t6_13, t6_14, t6_15, t6_16, t6_17, t6_18, t6_19, t6_20, t6_21, t6_22, t6_23, t6_24, t6_25, t6_26, t6_27, t6_28, t6_29, t6_30, t6_31, t6_32, t6_33, t6_34}, ts[6]);
    }
    
    info.eval->multiply(ts[5], ts[6], vs[2]); // __v2 = __t5 * __t6
    info.eval->relinearize_inplace(vs[2], rk);
    info.eval->rotate_rows(vs[2], -41, gk, ss[93]); // __s93 = __v2 >> 41
    info.eval->rotate_rows(vs[2], -58, gk, ss[94]); // __s94 = __v2 >> 58
    info.eval->rotate_rows(vs[2], -86, gk, ss[95]); // __s95 = __v2 >> 86
    info.eval->rotate_rows(vs[2], -52, gk, ss[96]); // __s96 = __v2 >> 52
    info.eval->rotate_rows(vs[2], -123, gk, ss[97]); // __s97 = __v2 >> 123
    info.eval->rotate_rows(vs[2], -10, gk, ss[98]); // __s98 = __v2 >> 10
    info.eval->rotate_rows(vs[2], -37, gk, ss[99]); // __s99 = __v2 >> 37
    info.eval->rotate_rows(vs[2], -3, gk, ss[100]); // __s100 = __v2 >> 3
    info.eval->rotate_rows(vs[2], -6, gk, ss[101]); // __s101 = __v2 >> 6
    info.eval->rotate_rows(vs[2], -28, gk, ss[102]); // __s102 = __v2 >> 28
    info.eval->rotate_rows(vs[2], -59, gk, ss[103]); // __s103 = __v2 >> 59
    info.eval->rotate_rows(vs[2], -30, gk, ss[104]); // __s104 = __v2 >> 30
    info.eval->rotate_rows(vs[2], -4, gk, ss[105]); // __s105 = __v2 >> 4
    info.eval->rotate_rows(vs[2], -8, gk, ss[106]); // __s106 = __v2 >> 8
    info.eval->rotate_rows(vs[2], -73, gk, ss[107]); // __s107 = __v2 >> 73
    info.eval->rotate_rows(vs[2], -117, gk, ss[108]); // __s108 = __v2 >> 117
    info.eval->rotate_rows(vs[2], -40, gk, ss[109]); // __s109 = __v2 >> 40
    info.eval->rotate_rows(vs[2], -115, gk, ss[110]); // __s110 = __v2 >> 115
    info.eval->rotate_rows(vs[2], -90, gk, ss[111]); // __s111 = __v2 >> 90
    info.eval->rotate_rows(vs[2], -36, gk, ss[112]); // __s112 = __v2 >> 36
    info.eval->rotate_rows(vs[2], -50, gk, ss[113]); // __s113 = __v2 >> 50
    info.eval->rotate_rows(vs[2], -38, gk, ss[114]); // __s114 = __v2 >> 38
    info.eval->rotate_rows(vs[2], -74, gk, ss[115]); // __s115 = __v2 >> 74
    info.eval->rotate_rows(vs[2], -51, gk, ss[116]); // __s116 = __v2 >> 51
    info.eval->rotate_rows(vs[2], -96, gk, ss[117]); // __s117 = __v2 >> 96
    info.eval->rotate_rows(vs[2], -80, gk, ss[118]); // __s118 = __v2 >> 80
    info.eval->rotate_rows(vs[2], -89, gk, ss[119]); // __s119 = __v2 >> 89
    info.eval->rotate_rows(vs[2], -62, gk, ss[120]); // __s120 = __v2 >> 62
    info.eval->rotate_rows(vs[2], -71, gk, ss[121]); // __s121 = __v2 >> 71
    info.eval->rotate_rows(vs[2], -124, gk, ss[122]); // __s122 = __v2 >> 124
    info.eval->rotate_rows(vs[2], -69, gk, ss[123]); // __s123 = __v2 >> 69
    info.eval->rotate_rows(vs[2], -16, gk, ss[124]); // __s124 = __v2 >> 16
    info.eval->rotate_rows(vs[2], -22, gk, ss[125]); // __s125 = __v2 >> 22
    info.eval->rotate_rows(vs[2], -76, gk, ss[126]); // __s126 = __v2 >> 76
    info.eval->rotate_rows(vs[2], -13, gk, ss[127]); // __s127 = __v2 >> 13
    info.eval->rotate_rows(vs[2], -21, gk, ss[128]); // __s128 = __v2 >> 21
    info.eval->rotate_rows(vs[2], -91, gk, ss[129]); // __s129 = __v2 >> 91
    
    // __t7 = blend(__v2@10000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s128@01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s120@00010000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000, __s100@00000000000010000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s108@00000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000, __s101@00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s98@00000000000000000100000000000000000000001000000010000000000000000000000000000000000000000000000000000000000000000000000000000000, __s110@00000000000000000001100100000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000, __s105@00000000000000000000010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000, __s119@00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s115@00000000000000000000000000100000000000000000001000000000000001001000000000000000000000000000000000000000000000000000000000000000, __s121@00000000000000000000000000010000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000, __s123@00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s93@00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s104@00000000000000000000000000000000000000000001000001000000000000000000000000000000001000000000000000000000000000000000000000000000, __s95@00000000000000000000000000000000000000000000010000000000000000000000000000000010000000000100000000000000000000000000000000000000, __s96@00000000000000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000100000000000000000000, __s94@00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000, __s102@00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000010100000000000000000000000000000, __s109@00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000010, __s122@00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000001000000001000000000000000000, __s126@00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000, __s112@00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000, __s99@00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000, __s129@00000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000000, __s106@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000001000, __s107@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000010000000000, __s124@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000, __s103@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000, __s114@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000, __s127@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000100, __s125@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000, __s116@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)
    {
    ctxt t7_1, t7_2, t7_3, t7_4, t7_5, t7_6, t7_7, t7_8, t7_9, t7_10, t7_11, t7_12, t7_13, t7_14, t7_15, t7_16, t7_17, t7_18, t7_19, t7_20, t7_21, t7_22, t7_23, t7_24, t7_25, t7_26, t7_27, t7_28, t7_29, t7_30, t7_31, t7_32, t7_33;
    info.eval->multiply_plain(vs[2], bits["10000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_1);
    info.eval->multiply_plain(ss[128], bits["01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_2);
    info.eval->multiply_plain(ss[120], bits["00010000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000"], t7_3);
    info.eval->multiply_plain(ss[100], bits["00000000000010000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_4);
    info.eval->multiply_plain(ss[108], bits["00000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000"], t7_5);
    info.eval->multiply_plain(ss[101], bits["00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_6);
    info.eval->multiply_plain(ss[98], bits["00000000000000000100000000000000000000001000000010000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_7);
    info.eval->multiply_plain(ss[110], bits["00000000000000000001100100000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t7_8);
    info.eval->multiply_plain(ss[105], bits["00000000000000000000010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"], t7_9);
    info.eval->multiply_plain(ss[119], bits["00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_10);
    info.eval->multiply_plain(ss[115], bits["00000000000000000000000000100000000000000000001000000000000001001000000000000000000000000000000000000000000000000000000000000000"], t7_11);
    info.eval->multiply_plain(ss[121], bits["00000000000000000000000000010000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"], t7_12);
    info.eval->multiply_plain(ss[123], bits["00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_13);
    info.eval->multiply_plain(ss[93], bits["00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_14);
    info.eval->multiply_plain(ss[104], bits["00000000000000000000000000000000000000000001000001000000000000000000000000000000001000000000000000000000000000000000000000000000"], t7_15);
    info.eval->multiply_plain(ss[95], bits["00000000000000000000000000000000000000000000010000000000000000000000000000000010000000000100000000000000000000000000000000000000"], t7_16);
    info.eval->multiply_plain(ss[96], bits["00000000000000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000100000000000000000000"], t7_17);
    info.eval->multiply_plain(ss[94], bits["00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000"], t7_18);
    info.eval->multiply_plain(ss[102], bits["00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000010100000000000000000000000000000"], t7_19);
    info.eval->multiply_plain(ss[109], bits["00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000010"], t7_20);
    info.eval->multiply_plain(ss[122], bits["00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000001000000001000000000000000000"], t7_21);
    info.eval->multiply_plain(ss[126], bits["00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000"], t7_22);
    info.eval->multiply_plain(ss[112], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000"], t7_23);
    info.eval->multiply_plain(ss[99], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"], t7_24);
    info.eval->multiply_plain(ss[129], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000000"], t7_25);
    info.eval->multiply_plain(ss[106], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000001000"], t7_26);
    info.eval->multiply_plain(ss[107], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000010000000000"], t7_27);
    info.eval->multiply_plain(ss[124], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"], t7_28);
    info.eval->multiply_plain(ss[103], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"], t7_29);
    info.eval->multiply_plain(ss[114], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000"], t7_30);
    info.eval->multiply_plain(ss[127], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000100"], t7_31);
    info.eval->multiply_plain(ss[125], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000"], t7_32);
    info.eval->multiply_plain(ss[116], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"], t7_33);
    info.eval->add_many({t7_1, t7_2, t7_3, t7_4, t7_5, t7_6, t7_7, t7_8, t7_9, t7_10, t7_11, t7_12, t7_13, t7_14, t7_15, t7_16, t7_17, t7_18, t7_19, t7_20, t7_21, t7_22, t7_23, t7_24, t7_25, t7_26, t7_27, t7_28, t7_29, t7_30, t7_31, t7_32, t7_33}, ts[7]);
    }
    
    
    // __t8 = blend(__s115@10000000000000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000, __s97@01000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000, __s111@00010000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000, __s118@00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v2@00000000000000100000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000, __s121@00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s120@00000000000000000001000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s123@00000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000, __s101@00000000000000000000010000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000, __s108@00000000000000000000000100000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000, __s119@00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s117@00000000000000000000000001000010000000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000, __s106@00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000, __s102@00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s126@00000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000000000000000000000000000000000000000, __s100@00000000000000000000000000000000000000000001000000000000000000000000000000000000000000100000000000000000000000000000000000000100, __s99@00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s104@00000000000000000000000000000000000000000000001000000000000000000000000000000001000000000000000010000000000000000000000000000000, __s98@00000000000000000000000000000000000000000000000000000000010000000000000000000000000010000000000000000001000000000000000000000000, __s95@00000000000000000000000000000000000000000000000000000000000010000000010000000000000000000010000000000000000001000000000000000000, __s96@00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000010000000001, __s103@00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000, __s122@00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000, __s94@00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000100000000, __s110@00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000, __s93@00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000, __s114@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000, __s112@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000010, __s107@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000, __s113@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000, __s116@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000, __s125@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000, __s105@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000)
    {
    ctxt t8_1, t8_2, t8_3, t8_4, t8_5, t8_6, t8_7, t8_8, t8_9, t8_10, t8_11, t8_12, t8_13, t8_14, t8_15, t8_16, t8_17, t8_18, t8_19, t8_20, t8_21, t8_22, t8_23, t8_24, t8_25, t8_26, t8_27, t8_28, t8_29, t8_30, t8_31, t8_32, t8_33;
    info.eval->multiply_plain(ss[115], bits["10000000000000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_1);
    info.eval->multiply_plain(ss[97], bits["01000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"], t8_2);
    info.eval->multiply_plain(ss[111], bits["00010000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000"], t8_3);
    info.eval->multiply_plain(ss[118], bits["00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_4);
    info.eval->multiply_plain(vs[2], bits["00000000000000100000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000"], t8_5);
    info.eval->multiply_plain(ss[121], bits["00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_6);
    info.eval->multiply_plain(ss[120], bits["00000000000000000001000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_7);
    info.eval->multiply_plain(ss[123], bits["00000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_8);
    info.eval->multiply_plain(ss[101], bits["00000000000000000000010000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000"], t8_9);
    info.eval->multiply_plain(ss[108], bits["00000000000000000000000100000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"], t8_10);
    info.eval->multiply_plain(ss[119], bits["00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_11);
    info.eval->multiply_plain(ss[117], bits["00000000000000000000000001000010000000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000"], t8_12);
    info.eval->multiply_plain(ss[106], bits["00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000"], t8_13);
    info.eval->multiply_plain(ss[102], bits["00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_14);
    info.eval->multiply_plain(ss[126], bits["00000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000000000000000000000000000000000000000"], t8_15);
    info.eval->multiply_plain(ss[100], bits["00000000000000000000000000000000000000000001000000000000000000000000000000000000000000100000000000000000000000000000000000000100"], t8_16);
    info.eval->multiply_plain(ss[99], bits["00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_17);
    info.eval->multiply_plain(ss[104], bits["00000000000000000000000000000000000000000000001000000000000000000000000000000001000000000000000010000000000000000000000000000000"], t8_18);
    info.eval->multiply_plain(ss[98], bits["00000000000000000000000000000000000000000000000000000000010000000000000000000000000010000000000000000001000000000000000000000000"], t8_19);
    info.eval->multiply_plain(ss[95], bits["00000000000000000000000000000000000000000000000000000000000010000000010000000000000000000010000000000000000001000000000000000000"], t8_20);
    info.eval->multiply_plain(ss[96], bits["00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000010000000001"], t8_21);
    info.eval->multiply_plain(ss[103], bits["00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"], t8_22);
    info.eval->multiply_plain(ss[122], bits["00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000"], t8_23);
    info.eval->multiply_plain(ss[94], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000100000000"], t8_24);
    info.eval->multiply_plain(ss[110], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000"], t8_25);
    info.eval->multiply_plain(ss[93], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000"], t8_26);
    info.eval->multiply_plain(ss[114], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000"], t8_27);
    info.eval->multiply_plain(ss[112], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000010"], t8_28);
    info.eval->multiply_plain(ss[107], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"], t8_29);
    info.eval->multiply_plain(ss[113], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000"], t8_30);
    info.eval->multiply_plain(ss[116], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000"], t8_31);
    info.eval->multiply_plain(ss[125], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000"], t8_32);
    info.eval->multiply_plain(ss[105], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000"], t8_33);
    info.eval->add_many({t8_1, t8_2, t8_3, t8_4, t8_5, t8_6, t8_7, t8_8, t8_9, t8_10, t8_11, t8_12, t8_13, t8_14, t8_15, t8_16, t8_17, t8_18, t8_19, t8_20, t8_21, t8_22, t8_23, t8_24, t8_25, t8_26, t8_27, t8_28, t8_29, t8_30, t8_31, t8_32, t8_33}, ts[8]);
    }
    
    info.eval->add(ts[7], ts[8], vs[3]); // __v3 = __t7 + __t8
    return vs[3];
}
    