
# include <vector.hpp>

std::map<std::string, ptxt> VectorProgram::make_bits(RuntimeContext &info)
{
    std::map<std::string, ptxt> bits;
    add_bitstring(bits, "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "010000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100001000000000000010000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000100000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000100000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100000100000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000000000000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000001000000000000000", info);
    add_bitstring(bits, "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000", info);
    add_bitstring(bits, "000000000000000000000000000000010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000001000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001000000000000000000", info);
    add_bitstring(bits, "000000000000010000000000000000000000000000100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000010000000000000000010010000000000000000000000000000100000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000010000000000000000000000000000000010000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000010000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000100000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000001000000000000100100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000100000000000000000000000000000000000000000000000010000000000000000100000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000001000000000000000000100000000000000001000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000010000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010010000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000001000000000000000000000", info);
    add_bitstring(bits, "000000000010000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000010000000100000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000100", info);
    add_bitstring(bits, "000000000000000000000010000000000000000010000000000000000000000100000000010000000000000000000000000000000000000000000000000001000010000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000001000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000010000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000001000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000001001000000000000100000000000000000000000000000000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000", info);
    add_bitstring(bits, "000000000000000000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "001000000000000000001000000000000010000010000100000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000001000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000010000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000100000000000000000000000000000000000000", info);
    add_bitstring(bits, "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "001000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001000000000000000000000000000000000100000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000010000000000010000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000001000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000001000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000010000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000100100000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000", info);
    add_bitstring(bits, "000100000000000100000000000000000000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000001000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000010000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000011000000000001000000000000000000000000101000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000100000000000000000000000000000000100000000000000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000010000000000", info);
    add_bitstring(bits, "000000000000000000000010000000000000010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000001000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000001001000000000000000001000000000000000000000000000010000000000000000000000000000000000000000000000001000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000100000000000010000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000001000000000000000000000001000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000100000000000000000", info);
    add_bitstring(bits, "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000010000000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000010000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000010000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000010000000000000000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000100000100000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000010000000000000000000000000000000000000000000000000000000000010000000000000000000000000000001000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000100000000010000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000001000000000000000000000000000", info);
    add_bitstring(bits, "000000001000000000000000000000000100000000000000000000000000000010000000000000000000000000000000000100000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000010000000000", info);
    add_bitstring(bits, "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    return bits;
}

std::vector<ctxt> VectorProgram::initialize_temps(RuntimeContext &info)
{
    std::vector<ctxt> ts(11);
    ts[0] = encrypt_inputinfo);
    ts[1] = encrypt_input("0010000000010000000011010100011011011111001111010000001110101100011011110101000001000011101101100000010010011000111000010111100100000110110011001111100001001100000001011100011", info);
    ts[2] = encrypt_input("11101111111111101111111111110110101111101101100011001101111111110011010111101100101101111111011111110011011001111111011101111011110011111110100111101111111100110110110001111110111011111111110110011110", info);
    return ts;
}

ctxt VectorProgram::computation(std::vector<ctxt> ts, std::map<std::string, ptxt> bits, RuntimeContext &info)
{
    seal::RelinKeys rk = info.keys->rk;
    seal::GaloisKeys gk = info.keys->gk;

    ctxt vs[6];
    ctxt ss[109];

    vs[0] = ts[0];
    info.eval->rotate_rows(vs[0], -17, gk, ss[0]); // __s0 = __v0 >> 17
    info.eval->rotate_rows(vs[0], -42, gk, ss[1]); // __s1 = __v0 >> 42
    info.eval->rotate_rows(vs[0], -119, gk, ss[2]); // __s2 = __v0 >> 119
    info.eval->rotate_rows(vs[0], -133, gk, ss[3]); // __s3 = __v0 >> 133
    info.eval->rotate_rows(vs[0], -114, gk, ss[4]); // __s4 = __v0 >> 114
    info.eval->rotate_rows(vs[0], -18, gk, ss[5]); // __s5 = __v0 >> 18
    info.eval->rotate_rows(vs[0], -60, gk, ss[6]); // __s6 = __v0 >> 60
    info.eval->rotate_rows(vs[0], -125, gk, ss[7]); // __s7 = __v0 >> 125
    info.eval->rotate_rows(vs[0], -129, gk, ss[8]); // __s8 = __v0 >> 129
    info.eval->rotate_rows(vs[0], -1, gk, ss[9]); // __s9 = __v0 >> 1
    info.eval->rotate_rows(vs[0], -40, gk, ss[10]); // __s10 = __v0 >> 40
    info.eval->rotate_rows(vs[0], -108, gk, ss[11]); // __s11 = __v0 >> 108
    info.eval->rotate_rows(vs[0], -61, gk, ss[12]); // __s12 = __v0 >> 61
    info.eval->rotate_rows(vs[0], -64, gk, ss[13]); // __s13 = __v0 >> 64
    info.eval->rotate_rows(vs[0], -43, gk, ss[14]); // __s14 = __v0 >> 43
    info.eval->rotate_rows(vs[0], -142, gk, ss[15]); // __s15 = __v0 >> 142
    info.eval->rotate_rows(vs[0], -117, gk, ss[16]); // __s16 = __v0 >> 117
    info.eval->rotate_rows(vs[0], -44, gk, ss[17]); // __s17 = __v0 >> 44
    info.eval->rotate_rows(vs[0], -46, gk, ss[18]); // __s18 = __v0 >> 46
    info.eval->rotate_rows(vs[0], -127, gk, ss[19]); // __s19 = __v0 >> 127
    info.eval->rotate_rows(vs[0], -120, gk, ss[20]); // __s20 = __v0 >> 120
    info.eval->rotate_rows(vs[0], -7, gk, ss[21]); // __s21 = __v0 >> 7
    info.eval->rotate_rows(vs[0], -87, gk, ss[22]); // __s22 = __v0 >> 87
    info.eval->rotate_rows(vs[0], -105, gk, ss[23]); // __s23 = __v0 >> 105
    info.eval->rotate_rows(vs[0], -97, gk, ss[24]); // __s24 = __v0 >> 97
    info.eval->rotate_rows(vs[0], -9, gk, ss[25]); // __s25 = __v0 >> 9
    info.eval->rotate_rows(vs[0], -106, gk, ss[26]); // __s26 = __v0 >> 106
    info.eval->rotate_rows(vs[0], -91, gk, ss[27]); // __s27 = __v0 >> 91
    info.eval->rotate_rows(vs[0], -25, gk, ss[28]); // __s28 = __v0 >> 25
    info.eval->rotate_rows(vs[0], -81, gk, ss[29]); // __s29 = __v0 >> 81
    info.eval->rotate_rows(vs[0], -15, gk, ss[30]); // __s30 = __v0 >> 15
    info.eval->rotate_rows(vs[0], -145, gk, ss[31]); // __s31 = __v0 >> 145
    
    // __t3 = blend(__s2@100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000, __s22@010000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s4@000100000000000100000000000000000000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000000000000000000000000000, __s11@000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s27@000000000000010000000000000000000000000000100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s7@000000000000001000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000000000000, __s24@000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s16@000000000000000000000100000000010000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s8@000000000000000000000001000000000000100100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000, __s23@000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s29@000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s3@000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v0@000000000000000000000000000000000000000000001000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s9@000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000, __s15@000000000000000000000000000000000000000000000010000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000, __s19@000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s5@000000000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000, __s0@000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000100000000000000000000000000000000000000, __s21@000000000000000000000000000000000000000000000000000000000000000000000011000000000001000000000000000000000000101000000000000000000000000000000000000000, __s1@000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000, __s20@000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000, __s25@000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000000000000, __s26@000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000000000000000000000000000000000000000000000000000000000, __s10@000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001000000000000000000000000000000000100000000000, __s31@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000, __s6@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000001000000000000000000000000000, __s17@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000, __s28@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100000100000000000000000000, __s13@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000, __s14@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000100, __s18@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000, __t1@001011111011000011101010110110101111011010000001101110111011110100110100001101011000000100101110011010110110010011111110110011110011111011010110110011)
    {
    ctxt t3_1, t3_2, t3_3, t3_4, t3_5, t3_6, t3_7, t3_8, t3_9, t3_10, t3_11, t3_12, t3_13, t3_14, t3_15, t3_16, t3_17, t3_18, t3_19, t3_20, t3_21, t3_22, t3_23, t3_24, t3_25, t3_26, t3_27, t3_28, t3_29, t3_30, t3_31;
    info.eval->multiply_plain(ss[2], bits["100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"], t3_1);
    info.eval->multiply_plain(ss[22], bits["010000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_2);
    info.eval->multiply_plain(ss[4], bits["000100000000000100000000000000000000000000000000000000000000000001000000000000000000000000010000000000000000000000000000000000000000000000000000000000"], t3_3);
    info.eval->multiply_plain(ss[11], bits["000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_4);
    info.eval->multiply_plain(ss[27], bits["000000000000010000000000000000000000000000100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_5);
    info.eval->multiply_plain(ss[7], bits["000000000000001000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000000000000"], t3_6);
    info.eval->multiply_plain(ss[24], bits["000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_7);
    info.eval->multiply_plain(ss[16], bits["000000000000000000000100000000010000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_8);
    info.eval->multiply_plain(ss[8], bits["000000000000000000000001000000000000100100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"], t3_9);
    info.eval->multiply_plain(ss[23], bits["000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_10);
    info.eval->multiply_plain(ss[29], bits["000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_11);
    info.eval->multiply_plain(ss[3], bits["000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_12);
    info.eval->multiply_plain(vs[0], bits["000000000000000000000000000000000000000000001000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_13);
    info.eval->multiply_plain(ss[9], bits["000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t3_14);
    info.eval->multiply_plain(ss[15], bits["000000000000000000000000000000000000000000000010000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000"], t3_15);
    info.eval->multiply_plain(ss[19], bits["000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_16);
    info.eval->multiply_plain(ss[5], bits["000000000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_17);
    info.eval->multiply_plain(ss[0], bits["000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000100000000000000000000000000000000000000"], t3_18);
    info.eval->multiply_plain(ss[21], bits["000000000000000000000000000000000000000000000000000000000000000000000011000000000001000000000000000000000000101000000000000000000000000000000000000000"], t3_19);
    info.eval->multiply_plain(ss[1], bits["000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000"], t3_20);
    info.eval->multiply_plain(ss[20], bits["000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000"], t3_21);
    info.eval->multiply_plain(ss[25], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000000000000"], t3_22);
    info.eval->multiply_plain(ss[26], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000000000000000000000000000000000000000000000000000000000"], t3_23);
    info.eval->multiply_plain(ss[10], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001000000000000000000000000000000000100000000000"], t3_24);
    info.eval->multiply_plain(ss[31], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000"], t3_25);
    info.eval->multiply_plain(ss[6], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000001000000000000000000000000000"], t3_26);
    info.eval->multiply_plain(ss[17], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000"], t3_27);
    info.eval->multiply_plain(ss[28], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100000100000000000000000000"], t3_28);
    info.eval->multiply_plain(ss[13], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000"], t3_29);
    info.eval->multiply_plain(ss[14], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000100"], t3_30);
    info.eval->multiply_plain(ss[18], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000"], t3_31);
    info.eval->add_many({t3_1, t3_2, t3_3, t3_4, t3_5, t3_6, t3_7, t3_8, t3_9, t3_10, t3_11, t3_12, t3_13, t3_14, t3_15, t3_16, t3_17, t3_18, t3_19, t3_20, t3_21, t3_22, t3_23, t3_24, t3_25, t3_26, t3_27, t3_28, t3_29, t3_30, t3_31, ts[1]}, ts[3]);
    }
    
    
    // __t4 = blend(__s11@001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s3@000000000000000000000010000000000000010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000, __s26@000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s16@000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000, __s20@000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s2@000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s19@000000000000000000000000000000000010000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000, __s4@000000000000000000000000000000000000000010000000000000000010010000000000000000000000000000100000000000000000000000000000000000000000000000000000000000, __s27@000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s0@000000000000000000000000000000000000000000000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s8@000000000000000000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000000000000, __s23@000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s21@000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000001000000000000000, __s14@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000, __s9@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000, __s18@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000, __s12@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001000000000000000000000000, __s13@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000, __s30@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010010000000000000000000000000000, __s5@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100001000000000000010000, __t2@110111111111111111111101111101010001101101111110010111110100101011111011111010101111111011011011100111101001101111100101101110011110110111111111001111)
    {
    ctxt t4_1, t4_2, t4_3, t4_4, t4_5, t4_6, t4_7, t4_8, t4_9, t4_10, t4_11, t4_12, t4_13, t4_14, t4_15, t4_16, t4_17, t4_18, t4_19, t4_20;
    info.eval->multiply_plain(ss[11], bits["001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_1);
    info.eval->multiply_plain(ss[3], bits["000000000000000000000010000000000000010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"], t4_2);
    info.eval->multiply_plain(ss[26], bits["000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_3);
    info.eval->multiply_plain(ss[16], bits["000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"], t4_4);
    info.eval->multiply_plain(ss[20], bits["000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_5);
    info.eval->multiply_plain(ss[2], bits["000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_6);
    info.eval->multiply_plain(ss[19], bits["000000000000000000000000000000000010000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000"], t4_7);
    info.eval->multiply_plain(ss[4], bits["000000000000000000000000000000000000000010000000000000000010010000000000000000000000000000100000000000000000000000000000000000000000000000000000000000"], t4_8);
    info.eval->multiply_plain(ss[27], bits["000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_9);
    info.eval->multiply_plain(ss[0], bits["000000000000000000000000000000000000000000000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_10);
    info.eval->multiply_plain(ss[8], bits["000000000000000000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000000000000"], t4_11);
    info.eval->multiply_plain(ss[23], bits["000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_12);
    info.eval->multiply_plain(ss[21], bits["000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000001000000000000000"], t4_13);
    info.eval->multiply_plain(ss[14], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000"], t4_14);
    info.eval->multiply_plain(ss[9], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"], t4_15);
    info.eval->multiply_plain(ss[18], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000"], t4_16);
    info.eval->multiply_plain(ss[12], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001000000000000000000000000"], t4_17);
    info.eval->multiply_plain(ss[13], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000"], t4_18);
    info.eval->multiply_plain(ss[30], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010010000000000000000000000000000"], t4_19);
    info.eval->multiply_plain(ss[5], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100001000000000000010000"], t4_20);
    info.eval->add_many({t4_1, t4_2, t4_3, t4_4, t4_5, t4_6, t4_7, t4_8, t4_9, t4_10, t4_11, t4_12, t4_13, t4_14, t4_15, t4_16, t4_17, t4_18, t4_19, t4_20, ts[2]}, ts[4]);
    }
    
    info.eval->multiply(ts[3], ts[4], vs[1]); // __v1 = __t3 * __t4
    info.eval->relinearize_inplace(vs[1], rk);
    info.eval->rotate_rows(vs[1], -23, gk, ss[32]); // __s32 = __v1 >> 23
    info.eval->rotate_rows(vs[1], -19, gk, ss[33]); // __s33 = __v1 >> 19
    info.eval->rotate_rows(vs[1], -63, gk, ss[34]); // __s34 = __v1 >> 63
    info.eval->rotate_rows(vs[1], -149, gk, ss[35]); // __s35 = __v1 >> 149
    info.eval->rotate_rows(vs[1], -24, gk, ss[36]); // __s36 = __v1 >> 24
    info.eval->rotate_rows(vs[1], -44, gk, ss[37]); // __s37 = __v1 >> 44
    info.eval->rotate_rows(vs[1], -46, gk, ss[38]); // __s38 = __v1 >> 46
    info.eval->rotate_rows(vs[1], -43, gk, ss[39]); // __s39 = __v1 >> 43
    info.eval->rotate_rows(vs[1], -69, gk, ss[40]); // __s40 = __v1 >> 69
    info.eval->rotate_rows(vs[1], -20, gk, ss[41]); // __s41 = __v1 >> 20
    info.eval->rotate_rows(vs[1], -99, gk, ss[42]); // __s42 = __v1 >> 99
    info.eval->rotate_rows(vs[1], -50, gk, ss[43]); // __s43 = __v1 >> 50
    info.eval->rotate_rows(vs[1], -53, gk, ss[44]); // __s44 = __v1 >> 53
    info.eval->rotate_rows(vs[1], -65, gk, ss[45]); // __s45 = __v1 >> 65
    info.eval->rotate_rows(vs[1], -142, gk, ss[46]); // __s46 = __v1 >> 142
    info.eval->rotate_rows(vs[1], -49, gk, ss[47]); // __s47 = __v1 >> 49
    info.eval->rotate_rows(vs[1], -141, gk, ss[48]); // __s48 = __v1 >> 141
    info.eval->rotate_rows(vs[1], -18, gk, ss[49]); // __s49 = __v1 >> 18
    info.eval->rotate_rows(vs[1], -126, gk, ss[50]); // __s50 = __v1 >> 126
    info.eval->rotate_rows(vs[1], -10, gk, ss[51]); // __s51 = __v1 >> 10
    info.eval->rotate_rows(vs[1], -127, gk, ss[52]); // __s52 = __v1 >> 127
    info.eval->rotate_rows(vs[1], -13, gk, ss[53]); // __s53 = __v1 >> 13
    info.eval->rotate_rows(vs[1], -115, gk, ss[54]); // __s54 = __v1 >> 115
    info.eval->rotate_rows(vs[1], -114, gk, ss[55]); // __s55 = __v1 >> 114
    info.eval->rotate_rows(vs[1], -106, gk, ss[56]); // __s56 = __v1 >> 106
    info.eval->rotate_rows(vs[1], -118, gk, ss[57]); // __s57 = __v1 >> 118
    info.eval->rotate_rows(vs[1], -137, gk, ss[58]); // __s58 = __v1 >> 137
    info.eval->rotate_rows(vs[1], -90, gk, ss[59]); // __s59 = __v1 >> 90
    info.eval->rotate_rows(vs[1], -5, gk, ss[60]); // __s60 = __v1 >> 5
    info.eval->rotate_rows(vs[1], -87, gk, ss[61]); // __s61 = __v1 >> 87
    info.eval->rotate_rows(vs[1], -101, gk, ss[62]); // __s62 = __v1 >> 101
    info.eval->rotate_rows(vs[1], -133, gk, ss[63]); // __s63 = __v1 >> 133
    info.eval->rotate_rows(vs[1], -123, gk, ss[64]); // __s64 = __v1 >> 123
    info.eval->rotate_rows(vs[1], -71, gk, ss[65]); // __s65 = __v1 >> 71
    info.eval->rotate_rows(vs[1], -81, gk, ss[66]); // __s66 = __v1 >> 81
    info.eval->rotate_rows(vs[1], -85, gk, ss[67]); // __s67 = __v1 >> 85
    info.eval->rotate_rows(vs[1], -108, gk, ss[68]); // __s68 = __v1 >> 108
    info.eval->rotate_rows(vs[1], -96, gk, ss[69]); // __s69 = __v1 >> 96
    info.eval->rotate_rows(vs[1], -12, gk, ss[70]); // __s70 = __v1 >> 12
    
    // __t5 = blend(__s34@001000000000000000001000000000000010000010000100000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000, __s59@000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000, __s50@000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000001000000000000000000000000, __s61@000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s70@000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s54@000000000010000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000, __s48@000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s45@000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s52@000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000, __s66@000000000000000000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s32@000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s36@000000000000000000000000000010000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000, __s35@000000000000000000000000000000010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s62@000000000000000000000000000000001000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s56@000000000000000000000000000000000100000000000000000000000000000000000000000000000010000000000000000100000000000000000000000000000000000000000000000000, __s49@000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000, __s41@000000000000000000000000000000000000000000000001001000000000000100000000000000000000000000000000000000000000000010000000000000000000000000000000000000, __s58@000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s64@000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s53@000000000000000000000000000000000000000000000000000010000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s63@000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000, __s39@000000000000000000000000000000000000000000000000000000000000100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000, __s55@000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000100000000000000000000000000000000000000000000000000000000, __s65@000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s47@000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000, __v1@000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000001000000000000000000000001000000000000000, __s60@000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000010000000000000000000, __s33@000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000000000000000000000000000000000000000000000, __s40@000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000010000000000000000000000000000000010000000000000000000000, __s57@000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000, __s44@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000, __s38@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000, __s37@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000000000000000000000000000000000000, __s43@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000000000000, __s46@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000001000000000000000000000, __s42@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000, __s51@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000)
    {
    ctxt t5_1, t5_2, t5_3, t5_4, t5_5, t5_6, t5_7, t5_8, t5_9, t5_10, t5_11, t5_12, t5_13, t5_14, t5_15, t5_16, t5_17, t5_18, t5_19, t5_20, t5_21, t5_22, t5_23, t5_24, t5_25, t5_26, t5_27, t5_28, t5_29, t5_30, t5_31, t5_32, t5_33, t5_34, t5_35, t5_36, t5_37;
    info.eval->multiply_plain(ss[34], bits["001000000000000000001000000000000010000010000100000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_1);
    info.eval->multiply_plain(ss[59], bits["000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000"], t5_2);
    info.eval->multiply_plain(ss[50], bits["000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000001000000000000000000000000"], t5_3);
    info.eval->multiply_plain(ss[61], bits["000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_4);
    info.eval->multiply_plain(ss[70], bits["000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_5);
    info.eval->multiply_plain(ss[54], bits["000000000010000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_6);
    info.eval->multiply_plain(ss[48], bits["000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_7);
    info.eval->multiply_plain(ss[45], bits["000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_8);
    info.eval->multiply_plain(ss[52], bits["000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000"], t5_9);
    info.eval->multiply_plain(ss[66], bits["000000000000000000000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_10);
    info.eval->multiply_plain(ss[32], bits["000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_11);
    info.eval->multiply_plain(ss[36], bits["000000000000000000000000000010000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000"], t5_12);
    info.eval->multiply_plain(ss[35], bits["000000000000000000000000000000010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_13);
    info.eval->multiply_plain(ss[62], bits["000000000000000000000000000000001000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_14);
    info.eval->multiply_plain(ss[56], bits["000000000000000000000000000000000100000000000000000000000000000000000000000000000010000000000000000100000000000000000000000000000000000000000000000000"], t5_15);
    info.eval->multiply_plain(ss[49], bits["000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"], t5_16);
    info.eval->multiply_plain(ss[41], bits["000000000000000000000000000000000000000000000001001000000000000100000000000000000000000000000000000000000000000010000000000000000000000000000000000000"], t5_17);
    info.eval->multiply_plain(ss[58], bits["000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_18);
    info.eval->multiply_plain(ss[64], bits["000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_19);
    info.eval->multiply_plain(ss[53], bits["000000000000000000000000000000000000000000000000000010000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_20);
    info.eval->multiply_plain(ss[63], bits["000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000"], t5_21);
    info.eval->multiply_plain(ss[39], bits["000000000000000000000000000000000000000000000000000000000000100000000000100000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_22);
    info.eval->multiply_plain(ss[55], bits["000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000100000000000000000000000000000000000000000000000000000000"], t5_23);
    info.eval->multiply_plain(ss[65], bits["000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_24);
    info.eval->multiply_plain(ss[47], bits["000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_25);
    info.eval->multiply_plain(vs[1], bits["000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000001000000000000000000000001000000000000000"], t5_26);
    info.eval->multiply_plain(ss[60], bits["000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000010000000000000000000"], t5_27);
    info.eval->multiply_plain(ss[33], bits["000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000001000000000000000000000000000000000000000000000000000000000"], t5_28);
    info.eval->multiply_plain(ss[40], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000010000000000000000000000000000000010000000000000000000000"], t5_29);
    info.eval->multiply_plain(ss[57], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"], t5_30);
    info.eval->multiply_plain(ss[44], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000"], t5_31);
    info.eval->multiply_plain(ss[38], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"], t5_32);
    info.eval->multiply_plain(ss[37], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000000000000000000000000000000000000"], t5_33);
    info.eval->multiply_plain(ss[43], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000000000000"], t5_34);
    info.eval->multiply_plain(ss[46], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000001000000000000000000000"], t5_35);
    info.eval->multiply_plain(ss[42], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000"], t5_36);
    info.eval->multiply_plain(ss[51], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000"], t5_37);
    info.eval->add_many({t5_1, t5_2, t5_3, t5_4, t5_5, t5_6, t5_7, t5_8, t5_9, t5_10, t5_11, t5_12, t5_13, t5_14, t5_15, t5_16, t5_17, t5_18, t5_19, t5_20, t5_21, t5_22, t5_23, t5_24, t5_25, t5_26, t5_27, t5_28, t5_29, t5_30, t5_31, t5_32, t5_33, t5_34, t5_35, t5_36, t5_37}, ts[5]);
    }
    
    
    // __t6 = blend(__s35@001000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000, __s65@000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s34@000000010000000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000010000000000000000000000000000000000000000000000, __v1@000000001000000000000000000000000100000000000000000000000000000010000000000000000000000000000000000100000000000000000000000000000000000000000000000000, __s56@000000000100000000000000000000000000000000100000000000000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000000000, __s46@000000000010000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000010000000100000000000000000000000000000, __s55@000000000001001000000000000000001000000000000000000000000000010000000000000000000000000000000000000000000000001000000000000000000000000000000000000000, __s48@000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s33@000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s43@000000000000000000000010000000000000000010000000000000000000000100000000010000000000000000000000000000000000000000000000000001000010000000000000000000, __s62@000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000, __s57@000000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000, __s41@000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000000000000, __s66@000000000000000000000000000000000010000000000010000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000, __s50@000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000, __s51@000000000000000000000000000000000000000000000100000100000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000, __s67@000000000000000000000000000000000000000000000001000000000000000000100000000000000001000000000000000000000000000000000000000000000000000000000000000000, __s37@000000000000000000000000000000000000000000000000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000, __s58@000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s39@000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000, __s38@000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000, __s32@000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000, __s49@000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000010000000000000000000000, __s44@000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s63@000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000, __s68@000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000, __s69@000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000, __s59@000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000, __s45@000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000001000000000000000, __s53@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000, __s64@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000, __s60@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000000000000000000)
    {
    ctxt t6_1, t6_2, t6_3, t6_4, t6_5, t6_6, t6_7, t6_8, t6_9, t6_10, t6_11, t6_12, t6_13, t6_14, t6_15, t6_16, t6_17, t6_18, t6_19, t6_20, t6_21, t6_22, t6_23, t6_24, t6_25, t6_26, t6_27, t6_28, t6_29, t6_30, t6_31, t6_32;
    info.eval->multiply_plain(ss[35], bits["001000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"], t6_1);
    info.eval->multiply_plain(ss[65], bits["000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_2);
    info.eval->multiply_plain(ss[34], bits["000000010000000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000010000000000000000000000000000000000000000000000"], t6_3);
    info.eval->multiply_plain(vs[1], bits["000000001000000000000000000000000100000000000000000000000000000010000000000000000000000000000000000100000000000000000000000000000000000000000000000000"], t6_4);
    info.eval->multiply_plain(ss[56], bits["000000000100000000000000000000000000000000100000000000000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000000000"], t6_5);
    info.eval->multiply_plain(ss[46], bits["000000000010000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000010000000100000000000000000000000000000"], t6_6);
    info.eval->multiply_plain(ss[55], bits["000000000001001000000000000000001000000000000000000000000000010000000000000000000000000000000000000000000000001000000000000000000000000000000000000000"], t6_7);
    info.eval->multiply_plain(ss[48], bits["000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_8);
    info.eval->multiply_plain(ss[33], bits["000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_9);
    info.eval->multiply_plain(ss[43], bits["000000000000000000000010000000000000000010000000000000000000000100000000010000000000000000000000000000000000000000000000000001000010000000000000000000"], t6_10);
    info.eval->multiply_plain(ss[62], bits["000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000"], t6_11);
    info.eval->multiply_plain(ss[57], bits["000000000000000000000000000010000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_12);
    info.eval->multiply_plain(ss[41], bits["000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000000000000"], t6_13);
    info.eval->multiply_plain(ss[66], bits["000000000000000000000000000000000010000000000010000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_14);
    info.eval->multiply_plain(ss[50], bits["000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000"], t6_15);
    info.eval->multiply_plain(ss[51], bits["000000000000000000000000000000000000000000000100000100000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"], t6_16);
    info.eval->multiply_plain(ss[67], bits["000000000000000000000000000000000000000000000001000000000000000000100000000000000001000000000000000000000000000000000000000000000000000000000000000000"], t6_17);
    info.eval->multiply_plain(ss[37], bits["000000000000000000000000000000000000000000000000010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_18);
    info.eval->multiply_plain(ss[58], bits["000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_19);
    info.eval->multiply_plain(ss[39], bits["000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000"], t6_20);
    info.eval->multiply_plain(ss[38], bits["000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"], t6_21);
    info.eval->multiply_plain(ss[32], bits["000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000"], t6_22);
    info.eval->multiply_plain(ss[49], bits["000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000010000000000000000000000"], t6_23);
    info.eval->multiply_plain(ss[44], bits["000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_24);
    info.eval->multiply_plain(ss[63], bits["000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_25);
    info.eval->multiply_plain(ss[68], bits["000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_26);
    info.eval->multiply_plain(ss[69], bits["000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000"], t6_27);
    info.eval->multiply_plain(ss[59], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000"], t6_28);
    info.eval->multiply_plain(ss[45], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000001000000000000000"], t6_29);
    info.eval->multiply_plain(ss[53], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"], t6_30);
    info.eval->multiply_plain(ss[64], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000"], t6_31);
    info.eval->multiply_plain(ss[60], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000000000000000000"], t6_32);
    info.eval->add_many({t6_1, t6_2, t6_3, t6_4, t6_5, t6_6, t6_7, t6_8, t6_9, t6_10, t6_11, t6_12, t6_13, t6_14, t6_15, t6_16, t6_17, t6_18, t6_19, t6_20, t6_21, t6_22, t6_23, t6_24, t6_25, t6_26, t6_27, t6_28, t6_29, t6_30, t6_31, t6_32}, ts[6]);
    }
    
    info.eval->add(ts[5], ts[6], vs[2]); // __v2 = __t5 + __t6
    info.eval->rotate_rows(vs[2], -71, gk, ss[71]); // __s71 = __v2 >> 71
    info.eval->rotate_rows(vs[2], -44, gk, ss[72]); // __s72 = __v2 >> 44
    info.eval->rotate_rows(vs[2], -70, gk, ss[73]); // __s73 = __v2 >> 70
    info.eval->rotate_rows(vs[2], -25, gk, ss[74]); // __s74 = __v2 >> 25
    info.eval->rotate_rows(vs[2], -28, gk, ss[75]); // __s75 = __v2 >> 28
    info.eval->rotate_rows(vs[2], -147, gk, ss[76]); // __s76 = __v2 >> 147
    info.eval->rotate_rows(vs[2], -139, gk, ss[77]); // __s77 = __v2 >> 139
    info.eval->rotate_rows(vs[2], -91, gk, ss[78]); // __s78 = __v2 >> 91
    info.eval->rotate_rows(vs[2], -36, gk, ss[79]); // __s79 = __v2 >> 36
    info.eval->rotate_rows(vs[2], -21, gk, ss[80]); // __s80 = __v2 >> 21
    info.eval->rotate_rows(vs[2], -122, gk, ss[81]); // __s81 = __v2 >> 122
    info.eval->rotate_rows(vs[2], -126, gk, ss[82]); // __s82 = __v2 >> 126
    info.eval->rotate_rows(vs[2], -34, gk, ss[83]); // __s83 = __v2 >> 34
    info.eval->rotate_rows(vs[2], -12, gk, ss[84]); // __s84 = __v2 >> 12
    info.eval->rotate_rows(vs[2], -8, gk, ss[85]); // __s85 = __v2 >> 8
    info.eval->rotate_rows(vs[2], -1, gk, ss[86]); // __s86 = __v2 >> 1
    info.eval->rotate_rows(vs[2], -116, gk, ss[87]); // __s87 = __v2 >> 116
    info.eval->rotate_rows(vs[2], -144, gk, ss[88]); // __s88 = __v2 >> 144
    info.eval->rotate_rows(vs[2], -146, gk, ss[89]); // __s89 = __v2 >> 146
    info.eval->rotate_rows(vs[2], -35, gk, ss[90]); // __s90 = __v2 >> 35
    info.eval->rotate_rows(vs[2], -110, gk, ss[91]); // __s91 = __v2 >> 110
    info.eval->rotate_rows(vs[2], -96, gk, ss[92]); // __s92 = __v2 >> 96
    info.eval->rotate_rows(vs[2], -99, gk, ss[93]); // __s93 = __v2 >> 99
    info.eval->rotate_rows(vs[2], -5, gk, ss[94]); // __s94 = __v2 >> 5
    info.eval->rotate_rows(vs[2], -31, gk, ss[95]); // __s95 = __v2 >> 31
    info.eval->rotate_rows(vs[2], -9, gk, ss[96]); // __s96 = __v2 >> 9
    
    // __t7 = blend(__s81@100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s76@000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s82@000000000000000000000000000100000000000010000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s93@000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s80@000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000, __s86@000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v2@000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000010000000000000000000000001000000000000000000000000000000, __s89@000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000, __s85@000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s73@000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000, __s84@000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000, __s88@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000, __s90@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000, __s71@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000, __s75@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000001000000000000, __s32@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000)
    {
    ctxt t7_1, t7_2, t7_3, t7_4, t7_5, t7_6, t7_7, t7_8, t7_9, t7_10, t7_11, t7_12, t7_13, t7_14, t7_15, t7_16;
    info.eval->multiply_plain(ss[81], bits["100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_1);
    info.eval->multiply_plain(ss[76], bits["000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_2);
    info.eval->multiply_plain(ss[82], bits["000000000000000000000000000100000000000010000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_3);
    info.eval->multiply_plain(ss[93], bits["000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_4);
    info.eval->multiply_plain(ss[80], bits["000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000"], t7_5);
    info.eval->multiply_plain(ss[86], bits["000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_6);
    info.eval->multiply_plain(vs[2], bits["000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000010000000000000000000000001000000000000000000000000000000"], t7_7);
    info.eval->multiply_plain(ss[89], bits["000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000"], t7_8);
    info.eval->multiply_plain(ss[85], bits["000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_9);
    info.eval->multiply_plain(ss[73], bits["000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000"], t7_10);
    info.eval->multiply_plain(ss[84], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000"], t7_11);
    info.eval->multiply_plain(ss[88], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"], t7_12);
    info.eval->multiply_plain(ss[90], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"], t7_13);
    info.eval->multiply_plain(ss[71], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"], t7_14);
    info.eval->multiply_plain(ss[75], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000001000000000000"], t7_15);
    info.eval->multiply_plain(ss[32], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000"], t7_16);
    info.eval->add_many({t7_1, t7_2, t7_3, t7_4, t7_5, t7_6, t7_7, t7_8, t7_9, t7_10, t7_11, t7_12, t7_13, t7_14, t7_15, t7_16}, ts[7]);
    }
    
    
    // __t8 = blend(__s77@100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000, __s82@000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000, __s87@000000000000000000000000000100000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s75@000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000, __s88@000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s85@000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s84@000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010001000000000000000000000000000000000000000000000000000, __s86@000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s91@000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s83@000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s76@000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s71@000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000001000000000000, __v2@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000, __s43@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000, __s94@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000, __s96@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000)
    {
    ctxt t8_1, t8_2, t8_3, t8_4, t8_5, t8_6, t8_7, t8_8, t8_9, t8_10, t8_11, t8_12, t8_13, t8_14, t8_15, t8_16;
    info.eval->multiply_plain(ss[77], bits["100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000"], t8_1);
    info.eval->multiply_plain(ss[82], bits["000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000"], t8_2);
    info.eval->multiply_plain(ss[87], bits["000000000000000000000000000100000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_3);
    info.eval->multiply_plain(ss[75], bits["000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"], t8_4);
    info.eval->multiply_plain(ss[88], bits["000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_5);
    info.eval->multiply_plain(ss[85], bits["000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_6);
    info.eval->multiply_plain(ss[84], bits["000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010001000000000000000000000000000000000000000000000000000"], t8_7);
    info.eval->multiply_plain(ss[86], bits["000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_8);
    info.eval->multiply_plain(ss[91], bits["000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_9);
    info.eval->multiply_plain(ss[83], bits["000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_10);
    info.eval->multiply_plain(ss[76], bits["000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t8_11);
    info.eval->multiply_plain(ss[71], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000001000000000000"], t8_12);
    info.eval->multiply_plain(vs[2], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"], t8_13);
    info.eval->multiply_plain(ss[43], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000"], t8_14);
    info.eval->multiply_plain(ss[94], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000"], t8_15);
    info.eval->multiply_plain(ss[96], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000"], t8_16);
    info.eval->add_many({t8_1, t8_2, t8_3, t8_4, t8_5, t8_6, t8_7, t8_8, t8_9, t8_10, t8_11, t8_12, t8_13, t8_14, t8_15, t8_16}, ts[8]);
    }
    
    info.eval->add(ts[7], ts[8], vs[3]); // __v3 = __t7 + __t8
    info.eval->rotate_rows(vs[3], -9, gk, ss[97]); // __s97 = __v3 >> 9
    info.eval->rotate_rows(vs[3], -6, gk, ss[98]); // __s98 = __v3 >> 6
    info.eval->rotate_rows(vs[3], -92, gk, ss[99]); // __s99 = __v3 >> 92
    info.eval->rotate_rows(vs[3], -145, gk, ss[100]); // __s100 = __v3 >> 145
    info.eval->rotate_rows(vs[3], -65, gk, ss[101]); // __s101 = __v3 >> 65
    info.eval->rotate_rows(vs[3], -140, gk, ss[102]); // __s102 = __v3 >> 140
    info.eval->rotate_rows(vs[3], -130, gk, ss[103]); // __s103 = __v3 >> 130
    info.eval->rotate_rows(vs[3], -115, gk, ss[104]); // __s104 = __v3 >> 115
    info.eval->rotate_rows(vs[3], -2, gk, ss[105]); // __s105 = __v3 >> 2
    info.eval->rotate_rows(vs[3], -30, gk, ss[106]); // __s106 = __v3 >> 30
    info.eval->rotate_rows(vs[3], -84, gk, ss[107]); // __s107 = __v3 >> 84
    info.eval->add(ss[83], vs[3], vs[4]); // __v4 = __s83 + __v3
    info.eval->rotate_rows(vs[4], -17, gk, ss[108]); // __s108 = __v4 >> 17
    
    // __t9 = blend(__s97@000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000, __s98@000000000000010000000000000000000000000000000000000000000000000000000000010000000000000000000000000000001000000000000000000000000000000000000000000000, __s103@000000000000000000000000000000000100100000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000, __s102@000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s107@000000000000000000000000000000000000001000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s100@000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000, __v3@000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s104@000000000000000000000000000000000000000000000000010000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000, __s105@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000010000000000, __s101@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000, __s99@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000100000000000000000, __s106@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000, __s108@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000)
    {
    ctxt t9_1, t9_2, t9_3, t9_4, t9_5, t9_6, t9_7, t9_8, t9_9, t9_10, t9_11, t9_12, t9_13;
    info.eval->multiply_plain(ss[97], bits["000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"], t9_1);
    info.eval->multiply_plain(ss[98], bits["000000000000010000000000000000000000000000000000000000000000000000000000010000000000000000000000000000001000000000000000000000000000000000000000000000"], t9_2);
    info.eval->multiply_plain(ss[103], bits["000000000000000000000000000000000100100000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"], t9_3);
    info.eval->multiply_plain(ss[102], bits["000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_4);
    info.eval->multiply_plain(ss[107], bits["000000000000000000000000000000000000001000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t9_5);
    info.eval->multiply_plain(ss[100], bits["000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"], t9_6);
    info.eval->multiply_plain(vs[3], bits["000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_7);
    info.eval->multiply_plain(ss[104], bits["000000000000000000000000000000000000000000000000010000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000"], t9_8);
    info.eval->multiply_plain(ss[105], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000010000000000"], t9_9);
    info.eval->multiply_plain(ss[101], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000"], t9_10);
    info.eval->multiply_plain(ss[99], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000100000000000000000"], t9_11);
    info.eval->multiply_plain(ss[106], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000"], t9_12);
    info.eval->multiply_plain(ss[108], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000"], t9_13);
    info.eval->add_many({t9_1, t9_2, t9_3, t9_4, t9_5, t9_6, t9_7, t9_8, t9_9, t9_10, t9_11, t9_12, t9_13}, ts[9]);
    }
    
    
    // __t10 = blend(__s95@000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s87@000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s74@000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s92@000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s75@000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000, __s77@000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000, __s91@000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v2@000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000, __s72@000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000000000000000000001000000000000000000000000000000, __s79@000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000, __s71@000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000010000000000, __s89@000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s86@000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000, __s84@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000100000000000000000, __s88@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000, __s78@000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001000000000000000000)
    {
    ctxt t10_1, t10_2, t10_3, t10_4, t10_5, t10_6, t10_7, t10_8, t10_9, t10_10, t10_11, t10_12, t10_13, t10_14, t10_15, t10_16;
    info.eval->multiply_plain(ss[95], bits["000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_1);
    info.eval->multiply_plain(ss[87], bits["000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_2);
    info.eval->multiply_plain(ss[74], bits["000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_3);
    info.eval->multiply_plain(ss[92], bits["000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_4);
    info.eval->multiply_plain(ss[75], bits["000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"], t10_5);
    info.eval->multiply_plain(ss[77], bits["000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"], t10_6);
    info.eval->multiply_plain(ss[91], bits["000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_7);
    info.eval->multiply_plain(vs[2], bits["000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"], t10_8);
    info.eval->multiply_plain(ss[72], bits["000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000000000000000000001000000000000000000000000000000"], t10_9);
    info.eval->multiply_plain(ss[79], bits["000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000"], t10_10);
    info.eval->multiply_plain(ss[71], bits["000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000010000000000"], t10_11);
    info.eval->multiply_plain(ss[89], bits["000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t10_12);
    info.eval->multiply_plain(ss[86], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000"], t10_13);
    info.eval->multiply_plain(ss[84], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000100000000000000000"], t10_14);
    info.eval->multiply_plain(ss[88], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000"], t10_15);
    info.eval->multiply_plain(ss[78], bits["000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000001000000000000000000"], t10_16);
    info.eval->add_many({t10_1, t10_2, t10_3, t10_4, t10_5, t10_6, t10_7, t10_8, t10_9, t10_10, t10_11, t10_12, t10_13, t10_14, t10_15, t10_16}, ts[10]);
    }
    
    info.eval->add(ts[9], ts[10], vs[5]); // __v5 = __t9 + __t10
    return vs[5];
}
    