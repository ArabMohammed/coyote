
# include <vector.hpp>

std::map<std::string, ptxt> VectorProgram::make_bits(RuntimeContext &info)
{
    std::map<std::string, ptxt> bits;
    add_bitstring(bits, "00000001000000000001000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000010000000000000000000000000000000000000000000000000000010000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000010000000000000000000000000000000000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000001000000000000000000000000000000000100000000", info);
    add_bitstring(bits, "00000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000100000000100000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000001000000000000000000000001000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000001000000000000000000000000000010000000000000000100000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000100000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000000000000000000000000000000000000000000100000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000000010000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000100000000000000000001000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000001000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000010000000000000000000000000", info);
    add_bitstring(bits, "00001000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000001000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000010000000000000", info);
    add_bitstring(bits, "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000100000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000010000000000000000000000000000000010000000000000000000000000000000000000000000100000100000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000010000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000100000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000001000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000", info);
    add_bitstring(bits, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000100000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000001000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000001000000000000000000010000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010000001000000000000000000000000000100000000010010000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000010000000010000000000000000100000000000100000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000010000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000010000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000010000000000000000000000", info);
    add_bitstring(bits, "00000000010000000000000000000000000000000000000001000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000001000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000010000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000010000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00001000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000001000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000001000000000000000000000001000000000000000000000000000001000000000", info);
    add_bitstring(bits, "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000001000000000000000010010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000000000000000000000000000000000100000001000000000000000000000000", info);
    add_bitstring(bits, "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000100000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000010000000000000000110000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000010000000000000000000000000000000000000010000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000001000000000000000100000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000010000000000000000000000100000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000010000000000000000000001000000000100001000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010000000001000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000001000000000000000000000000000000000000000000010000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000100000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000010000000000000000000000010000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000010000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000001001000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000100010000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000010000000000000000000001000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000100010000000001000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000001000010000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000010000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000010000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000100000000000001000000000000000010000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000001000000000000000000000000000000000000000000000000000010000000000000000000000000000010000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000010000000000000000000000001010000000000000000000000000000000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000010000000100000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000001000000000000000000000000000100000000000000010000000000000000000000000000000000000100000000000000000000000000000000000000000000100000000000000000000000000000000000000001000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000100000000000000000000000100000000000000100000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000010000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000010000000000000000000000010000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000010000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000001000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "00000000000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000", info);
    return bits;
}

std::vector<ctxt> VectorProgram::initialize_temps(RuntimeContext &info)
{
    std::vector<ctxt> ts(15);
    ts[0] = encrypt_inputinfo);
    ts[1] = encrypt_inputinfo);
    ts[2] = encrypt_inputinfo);
    ts[3] = encrypt_inputinfo);
    ts[4] = encrypt_input("00000011111111111111111000111111111111111111000011111111111111111111111111111111110000011111111111111111100000000011111111111111111100011111111111111111100111111111111111110111111111111111111000011111111111111111111111111111111111000011111111111111111000000011111111111111111111111111111111111011111111111111111101111111111111111100000000000000000000011111111111111111000011111111111111111000111111111111111110011111111111111111101111111111111111110000000111111111111111111000111111111111111111000011111111111111111011111111111111111000001111111111111111111111111111111111110011111111111111111100000000111111111111111110000000000000000111111111111111111000000000000000000111111111111111111000000011111111111111111100000000000", info);
    return ts;
}

ctxt VectorProgram::computation(std::vector<ctxt> ts, std::map<std::string, ptxt> bits, RuntimeContext &info)
{
    seal::RelinKeys rk = info.keys->rk;
    seal::GaloisKeys gk = info.keys->gk;

    ctxt vs[10];
    ctxt ss[131];

    vs[0] = ts[0];
    info.eval->rotate_rows(vs[0], -31, gk, ss[0]); // __s0 = __v0 >> 31
    info.eval->rotate_rows(vs[0], -13, gk, ss[1]); // __s1 = __v0 >> 13
    info.eval->rotate_rows(vs[0], -32, gk, ss[2]); // __s2 = __v0 >> 32
    info.eval->rotate_rows(vs[0], -23, gk, ss[3]); // __s3 = __v0 >> 23
    info.eval->rotate_rows(vs[0], -36, gk, ss[4]); // __s4 = __v0 >> 36
    info.eval->rotate_rows(vs[0], -66, gk, ss[5]); // __s5 = __v0 >> 66
    info.eval->rotate_rows(vs[0], -125, gk, ss[6]); // __s6 = __v0 >> 125
    info.eval->rotate_rows(vs[0], -1, gk, ss[7]); // __s7 = __v0 >> 1
    info.eval->rotate_rows(vs[0], -109, gk, ss[8]); // __s8 = __v0 >> 109
    info.eval->rotate_rows(vs[0], -34, gk, ss[9]); // __s9 = __v0 >> 34
    info.eval->rotate_rows(vs[0], -69, gk, ss[10]); // __s10 = __v0 >> 69
    info.eval->rotate_rows(vs[0], -18, gk, ss[11]); // __s11 = __v0 >> 18
    info.eval->rotate_rows(vs[0], -186, gk, ss[12]); // __s12 = __v0 >> 186
    info.eval->rotate_rows(vs[0], -155, gk, ss[13]); // __s13 = __v0 >> 155
    info.eval->rotate_rows(vs[0], -161, gk, ss[14]); // __s14 = __v0 >> 161
    info.eval->rotate_rows(vs[0], -184, gk, ss[15]); // __s15 = __v0 >> 184
    info.eval->rotate_rows(vs[0], -175, gk, ss[16]); // __s16 = __v0 >> 175
    info.eval->rotate_rows(vs[0], -180, gk, ss[17]); // __s17 = __v0 >> 180
    info.eval->rotate_rows(vs[0], -126, gk, ss[18]); // __s18 = __v0 >> 126
    info.eval->rotate_rows(vs[0], -160, gk, ss[19]); // __s19 = __v0 >> 160
    info.eval->rotate_rows(vs[0], -123, gk, ss[20]); // __s20 = __v0 >> 123
    info.eval->rotate_rows(vs[0], -16, gk, ss[21]); // __s21 = __v0 >> 16
    info.eval->rotate_rows(vs[0], -20, gk, ss[22]); // __s22 = __v0 >> 20
    info.eval->rotate_rows(vs[0], -166, gk, ss[23]); // __s23 = __v0 >> 166
    info.eval->rotate_rows(vs[0], -112, gk, ss[24]); // __s24 = __v0 >> 112
    vs[1] = ts[1];
    info.eval->rotate_rows(vs[1], -2, gk, ss[25]); // __s25 = __v1 >> 2
    info.eval->rotate_rows(vs[1], -62, gk, ss[26]); // __s26 = __v1 >> 62
    info.eval->rotate_rows(vs[1], -180, gk, ss[27]); // __s27 = __v1 >> 180
    info.eval->rotate_rows(vs[1], -152, gk, ss[28]); // __s28 = __v1 >> 152
    info.eval->rotate_rows(vs[1], -123, gk, ss[29]); // __s29 = __v1 >> 123
    info.eval->rotate_rows(vs[1], -107, gk, ss[30]); // __s30 = __v1 >> 107
    info.eval->rotate_rows(vs[1], -76, gk, ss[31]); // __s31 = __v1 >> 76
    info.eval->rotate_rows(vs[1], -99, gk, ss[32]); // __s32 = __v1 >> 99
    info.eval->rotate_rows(vs[1], -139, gk, ss[33]); // __s33 = __v1 >> 139
    info.eval->rotate_rows(vs[1], -117, gk, ss[34]); // __s34 = __v1 >> 117
    vs[2] = ts[2];
    info.eval->rotate_rows(vs[2], -21, gk, ss[35]); // __s35 = __v2 >> 21
    info.eval->rotate_rows(vs[2], -34, gk, ss[36]); // __s36 = __v2 >> 34
    info.eval->rotate_rows(vs[2], -93, gk, ss[37]); // __s37 = __v2 >> 93
    info.eval->rotate_rows(vs[2], -91, gk, ss[38]); // __s38 = __v2 >> 91
    info.eval->rotate_rows(vs[2], -39, gk, ss[39]); // __s39 = __v2 >> 39
    info.eval->rotate_rows(vs[2], -37, gk, ss[40]); // __s40 = __v2 >> 37
    info.eval->rotate_rows(vs[2], -14, gk, ss[41]); // __s41 = __v2 >> 14
    info.eval->rotate_rows(vs[2], -50, gk, ss[42]); // __s42 = __v2 >> 50
    info.eval->rotate_rows(vs[2], -38, gk, ss[43]); // __s43 = __v2 >> 38
    info.eval->rotate_rows(vs[2], -161, gk, ss[44]); // __s44 = __v2 >> 161
    info.eval->rotate_rows(vs[2], -12, gk, ss[45]); // __s45 = __v2 >> 12
    vs[3] = ts[3];
    info.eval->rotate_rows(vs[3], -19, gk, ss[46]); // __s46 = __v3 >> 19
    info.eval->rotate_rows(vs[3], -20, gk, ss[47]); // __s47 = __v3 >> 20
    info.eval->rotate_rows(vs[3], -48, gk, ss[48]); // __s48 = __v3 >> 48
    info.eval->rotate_rows(vs[3], -10, gk, ss[49]); // __s49 = __v3 >> 10
    info.eval->rotate_rows(vs[3], -25, gk, ss[50]); // __s50 = __v3 >> 25
    info.eval->rotate_rows(vs[3], -62, gk, ss[51]); // __s51 = __v3 >> 62
    info.eval->rotate_rows(vs[3], -126, gk, ss[52]); // __s52 = __v3 >> 126
    info.eval->rotate_rows(vs[3], -129, gk, ss[53]); // __s53 = __v3 >> 129
    info.eval->rotate_rows(vs[3], -96, gk, ss[54]); // __s54 = __v3 >> 96
    info.eval->rotate_rows(vs[3], -111, gk, ss[55]); // __s55 = __v3 >> 111
    info.eval->rotate_rows(vs[3], -82, gk, ss[56]); // __s56 = __v3 >> 82
    vs[4] = ts[4];
    info.eval->rotate_rows(vs[4], -63, gk, ss[57]); // __s57 = __v4 >> 63
    info.eval->rotate_rows(vs[4], -45, gk, ss[58]); // __s58 = __v4 >> 45
    info.eval->rotate_rows(vs[4], -64, gk, ss[59]); // __s59 = __v4 >> 64
    info.eval->rotate_rows(vs[4], -29, gk, ss[60]); // __s60 = __v4 >> 29
    info.eval->rotate_rows(vs[4], -115, gk, ss[61]); // __s61 = __v4 >> 115
    info.eval->rotate_rows(vs[4], -19, gk, ss[62]); // __s62 = __v4 >> 19
    info.eval->rotate_rows(vs[4], -178, gk, ss[63]); // __s63 = __v4 >> 178
    info.eval->rotate_rows(vs[4], -159, gk, ss[64]); // __s64 = __v4 >> 159
    info.eval->rotate_rows(vs[4], -18, gk, ss[65]); // __s65 = __v4 >> 18
    info.eval->rotate_rows(vs[4], -98, gk, ss[66]); // __s66 = __v4 >> 98
    info.eval->rotate_rows(vs[4], -73, gk, ss[67]); // __s67 = __v4 >> 73
    
    // __t5 = blend(__s18@00000001000000000001000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000, __s13@00000000010000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s1@00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000100000000000000000000000000, __v0@00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000, __s14@00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000, __s0@00000000000000000000000000000000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000001000000000000000000000, __s12@00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s3@00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000001001000, __s20@00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s16@00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s19@00000000000000000000000000000000000000000000010000000000000000110000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000, __s4@00000000000000000000000000000000000000000000001000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s17@00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000010000000000000000000000000000000010000000000000000000000000000000000000000000100000100000000000000, __s11@00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000, __s9@00000000000000000000000000000000000000000000000000000000000000000100010000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s7@00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000, __s15@00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000, __s23@00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s5@00000000000000000000000000000000000000000000000000000000000000000000000000000100010000000001000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000, __s24@00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s21@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s2@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s10@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000, __s6@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000001000000000000000000000000000000000100000000, __s8@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000010000000000)
    {
    ctxt t5_1, t5_2, t5_3, t5_4, t5_5, t5_6, t5_7, t5_8, t5_9, t5_10, t5_11, t5_12, t5_13, t5_14, t5_15, t5_16, t5_17, t5_18, t5_19, t5_20, t5_21, t5_22, t5_23, t5_24, t5_25;
    info.eval->multiply_plain(ss[18], bits["00000001000000000001000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000"], t5_1);
    info.eval->multiply_plain(ss[13], bits["00000000010000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_2);
    info.eval->multiply_plain(ss[1], bits["00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000100000000000000000000000000"], t5_3);
    info.eval->multiply_plain(vs[0], bits["00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"], t5_4);
    info.eval->multiply_plain(ss[14], bits["00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_5);
    info.eval->multiply_plain(ss[0], bits["00000000000000000000000000000000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000001000000000000000000000000000000000000001000000000000000000000"], t5_6);
    info.eval->multiply_plain(ss[12], bits["00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_7);
    info.eval->multiply_plain(ss[3], bits["00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000001001000"], t5_8);
    info.eval->multiply_plain(ss[20], bits["00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_9);
    info.eval->multiply_plain(ss[16], bits["00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_10);
    info.eval->multiply_plain(ss[19], bits["00000000000000000000000000000000000000000000010000000000000000110000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"], t5_11);
    info.eval->multiply_plain(ss[4], bits["00000000000000000000000000000000000000000000001000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_12);
    info.eval->multiply_plain(ss[17], bits["00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000010000000000000000000000000000000010000000000000000000000000000000000000000000100000100000000000000"], t5_13);
    info.eval->multiply_plain(ss[11], bits["00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"], t5_14);
    info.eval->multiply_plain(ss[9], bits["00000000000000000000000000000000000000000000000000000000000000000100010000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_15);
    info.eval->multiply_plain(ss[7], bits["00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"], t5_16);
    info.eval->multiply_plain(ss[15], bits["00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"], t5_17);
    info.eval->multiply_plain(ss[23], bits["00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_18);
    info.eval->multiply_plain(ss[5], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000100010000000001000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000"], t5_19);
    info.eval->multiply_plain(ss[24], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_20);
    info.eval->multiply_plain(ss[21], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_21);
    info.eval->multiply_plain(ss[2], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_22);
    info.eval->multiply_plain(ss[10], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000"], t5_23);
    info.eval->multiply_plain(ss[6], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000001000000000000000000000000000000000100000000"], t5_24);
    info.eval->multiply_plain(ss[8], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000010000000000"], t5_25);
    info.eval->add_many({t5_1, t5_2, t5_3, t5_4, t5_5, t5_6, t5_7, t5_8, t5_9, t5_10, t5_11, t5_12, t5_13, t5_14, t5_15, t5_16, t5_17, t5_18, t5_19, t5_20, t5_21, t5_22, t5_23, t5_24, t5_25}, ts[5]);
    }
    
    
    // __t6 = blend(__s13@00000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s20@00000000010000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s52@00000000000000001000000000000000000000000000000000000000000000000000010000000000000000000000000000010000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000, __s7@00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000, __s46@00000000000000000001000000000000000000000000000100000000000000010000000000000000000000000000000000000100000000000000000000000000000000000000000000100000000000000000000000000000000000000001000, __s53@00000000000000000000001000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s3@00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000, __s47@00000000000000000000000000000000000010000000000000000000000000000000000000010000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s49@00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000, __s2@00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s15@00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s54@00000000000000000000000000000000000000000000000000000100000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s56@00000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s9@00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000, __s12@00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s48@00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s55@00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s16@00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s50@00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000001000000000000000000000000000010000000000000000100000000000000000000000000000000000000000000000, __s0@00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s19@00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000, __s14@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000, __s23@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s10@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s22@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000, __s8@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000, __s51@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000100000000000000000001000000, __s11@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000, __s1@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000010000000000, __s4@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000, __s5@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000, __v0@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000)
    {
    ctxt t6_1, t6_2, t6_3, t6_4, t6_5, t6_6, t6_7, t6_8, t6_9, t6_10, t6_11, t6_12, t6_13, t6_14, t6_15, t6_16, t6_17, t6_18, t6_19, t6_20, t6_21, t6_22, t6_23, t6_24, t6_25, t6_26, t6_27, t6_28, t6_29, t6_30, t6_31, t6_32;
    info.eval->multiply_plain(ss[13], bits["00000001000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_1);
    info.eval->multiply_plain(ss[20], bits["00000000010000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_2);
    info.eval->multiply_plain(ss[52], bits["00000000000000001000000000000000000000000000000000000000000000000000010000000000000000000000000000010000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000"], t6_3);
    info.eval->multiply_plain(ss[7], bits["00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t6_4);
    info.eval->multiply_plain(ss[46], bits["00000000000000000001000000000000000000000000000100000000000000010000000000000000000000000000000000000100000000000000000000000000000000000000000000100000000000000000000000000000000000000001000"], t6_5);
    info.eval->multiply_plain(ss[53], bits["00000000000000000000001000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_6);
    info.eval->multiply_plain(ss[3], bits["00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000"], t6_7);
    info.eval->multiply_plain(ss[47], bits["00000000000000000000000000000000000010000000000000000000000000000000000000010000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_8);
    info.eval->multiply_plain(ss[49], bits["00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"], t6_9);
    info.eval->multiply_plain(ss[2], bits["00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_10);
    info.eval->multiply_plain(ss[15], bits["00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_11);
    info.eval->multiply_plain(ss[54], bits["00000000000000000000000000000000000000000000000000000100000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_12);
    info.eval->multiply_plain(ss[56], bits["00000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_13);
    info.eval->multiply_plain(ss[9], bits["00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_14);
    info.eval->multiply_plain(ss[12], bits["00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_15);
    info.eval->multiply_plain(ss[48], bits["00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_16);
    info.eval->multiply_plain(ss[55], bits["00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_17);
    info.eval->multiply_plain(ss[16], bits["00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_18);
    info.eval->multiply_plain(ss[50], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000001000000000000000000000000000010000000000000000100000000000000000000000000000000000000000000000"], t6_19);
    info.eval->multiply_plain(ss[0], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_20);
    info.eval->multiply_plain(ss[19], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000"], t6_21);
    info.eval->multiply_plain(ss[14], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"], t6_22);
    info.eval->multiply_plain(ss[23], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_23);
    info.eval->multiply_plain(ss[10], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_24);
    info.eval->multiply_plain(ss[22], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000"], t6_25);
    info.eval->multiply_plain(ss[8], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000"], t6_26);
    info.eval->multiply_plain(ss[51], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000100000000000000000001000000"], t6_27);
    info.eval->multiply_plain(ss[11], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"], t6_28);
    info.eval->multiply_plain(ss[1], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000010000000000"], t6_29);
    info.eval->multiply_plain(ss[4], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"], t6_30);
    info.eval->multiply_plain(ss[5], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000"], t6_31);
    info.eval->multiply_plain(vs[0], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000"], t6_32);
    info.eval->add_many({t6_1, t6_2, t6_3, t6_4, t6_5, t6_6, t6_7, t6_8, t6_9, t6_10, t6_11, t6_12, t6_13, t6_14, t6_15, t6_16, t6_17, t6_18, t6_19, t6_20, t6_21, t6_22, t6_23, t6_24, t6_25, t6_26, t6_27, t6_28, t6_29, t6_30, t6_31, t6_32}, ts[6]);
    }
    
    info.eval->multiply(ts[5], ts[6], vs[5]); // __v5 = __t5 * __t6
    info.eval->relinearize_inplace(vs[5], rk);
    info.eval->rotate_rows(vs[5], -128, gk, ss[68]); // __s68 = __v5 >> 128
    info.eval->rotate_rows(vs[5], -69, gk, ss[69]); // __s69 = __v5 >> 69
    info.eval->rotate_rows(vs[5], -183, gk, ss[70]); // __s70 = __v5 >> 183
    info.eval->rotate_rows(vs[5], -32, gk, ss[71]); // __s71 = __v5 >> 32
    info.eval->rotate_rows(vs[5], -34, gk, ss[72]); // __s72 = __v5 >> 34
    info.eval->rotate_rows(vs[5], -27, gk, ss[73]); // __s73 = __v5 >> 27
    info.eval->rotate_rows(vs[5], -95, gk, ss[74]); // __s74 = __v5 >> 95
    info.eval->rotate_rows(vs[5], -107, gk, ss[75]); // __s75 = __v5 >> 107
    info.eval->rotate_rows(vs[5], -182, gk, ss[76]); // __s76 = __v5 >> 182
    info.eval->rotate_rows(vs[5], -7, gk, ss[77]); // __s77 = __v5 >> 7
    info.eval->rotate_rows(vs[5], -184, gk, ss[78]); // __s78 = __v5 >> 184
    info.eval->rotate_rows(vs[5], -14, gk, ss[79]); // __s79 = __v5 >> 14
    info.eval->rotate_rows(vs[5], -188, gk, ss[80]); // __s80 = __v5 >> 188
    info.eval->rotate_rows(vs[5], -108, gk, ss[81]); // __s81 = __v5 >> 108
    info.eval->rotate_rows(vs[5], -64, gk, ss[82]); // __s82 = __v5 >> 64
    info.eval->rotate_rows(vs[5], -160, gk, ss[83]); // __s83 = __v5 >> 160
    info.eval->rotate_rows(vs[5], -164, gk, ss[84]); // __s84 = __v5 >> 164
    info.eval->rotate_rows(vs[5], -6, gk, ss[85]); // __s85 = __v5 >> 6
    info.eval->rotate_rows(vs[5], -65, gk, ss[86]); // __s86 = __v5 >> 65
    info.eval->rotate_rows(vs[5], -153, gk, ss[87]); // __s87 = __v5 >> 153
    info.eval->rotate_rows(vs[5], -146, gk, ss[88]); // __s88 = __v5 >> 146
    info.eval->rotate_rows(vs[5], -186, gk, ss[89]); // __s89 = __v5 >> 186
    info.eval->rotate_rows(vs[5], -152, gk, ss[90]); // __s90 = __v5 >> 152
    info.eval->rotate_rows(vs[5], -125, gk, ss[91]); // __s91 = __v5 >> 125
    info.eval->rotate_rows(vs[5], -111, gk, ss[92]); // __s92 = __v5 >> 111
    info.eval->rotate_rows(vs[5], -99, gk, ss[93]); // __s93 = __v5 >> 99
    
    // __t7 = blend(__s76@00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000, __s71@00000000000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000, __s77@00000000000000000000000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000010000000000000, __s84@00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000, __s80@00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s87@00000000000000000000000000000000000000000000000000000000000000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s69@00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s92@00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s91@00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v5@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s88@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s90@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000010000000000000000000000000000000000000000000000000, __s73@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s74@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000, __s68@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000, __s85@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000, __s75@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000001000000000000000000, __s72@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000)
    {
    ctxt t7_1, t7_2, t7_3, t7_4, t7_5, t7_6, t7_7, t7_8, t7_9, t7_10, t7_11, t7_12, t7_13, t7_14, t7_15, t7_16, t7_17, t7_18;
    info.eval->multiply_plain(ss[76], bits["00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000"], t7_1);
    info.eval->multiply_plain(ss[71], bits["00000000000000000000000000000000000000000000000001000000000000000000000000000100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000"], t7_2);
    info.eval->multiply_plain(ss[77], bits["00000000000000000000000000000000000000000000000000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000010000000000000"], t7_3);
    info.eval->multiply_plain(ss[84], bits["00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"], t7_4);
    info.eval->multiply_plain(ss[80], bits["00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_5);
    info.eval->multiply_plain(ss[87], bits["00000000000000000000000000000000000000000000000000000000000000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_6);
    info.eval->multiply_plain(ss[69], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_7);
    info.eval->multiply_plain(ss[92], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_8);
    info.eval->multiply_plain(ss[91], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_9);
    info.eval->multiply_plain(vs[5], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_10);
    info.eval->multiply_plain(ss[88], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_11);
    info.eval->multiply_plain(ss[90], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000010000000000000000000000000000000000000000000000000"], t7_12);
    info.eval->multiply_plain(ss[73], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_13);
    info.eval->multiply_plain(ss[74], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"], t7_14);
    info.eval->multiply_plain(ss[68], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"], t7_15);
    info.eval->multiply_plain(ss[85], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"], t7_16);
    info.eval->multiply_plain(ss[75], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000001000000000000000000"], t7_17);
    info.eval->multiply_plain(ss[72], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000"], t7_18);
    info.eval->add_many({t7_1, t7_2, t7_3, t7_4, t7_5, t7_6, t7_7, t7_8, t7_9, t7_10, t7_11, t7_12, t7_13, t7_14, t7_15, t7_16, t7_17, t7_18}, ts[7]);
    }
    
    
    // __t8 = blend(__v4@00000000000000000000000000000010000000000000000000000000000000000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s60@00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000000000000000000000000000000, __s67@00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s58@00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000001000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s66@00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s64@00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000001000000000000000000000000000000000000000000010000000000000000000000000000000000000000000, __s57@00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000100000, __s62@00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010000000001000000000000000000000000000000000000000000000, __s59@00000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s63@00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s65@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000000010000000000000000000000000000000000000000000000000, __s61@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000001000010000000000000)
    {
    ctxt t8_1, t8_2, t8_3, t8_4, t8_5, t8_6, t8_7, t8_8, t8_9, t8_10, t8_11, t8_12;
    info.eval->multiply_plain(vs[4], bits["00000000000000000000000000000010000000000000000000000000000000000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_1);
    info.eval->multiply_plain(ss[60], bits["00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000100000000000000000000000000000000000000000000000"], t8_2);
    info.eval->multiply_plain(ss[67], bits["00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_3);
    info.eval->multiply_plain(ss[58], bits["00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000001000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_4);
    info.eval->multiply_plain(ss[66], bits["00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_5);
    info.eval->multiply_plain(ss[64], bits["00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000001000000000000000000000000000000000000000000010000000000000000000000000000000000000000000"], t8_6);
    info.eval->multiply_plain(ss[57], bits["00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000100000"], t8_7);
    info.eval->multiply_plain(ss[62], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010000000001000000000000000000000000000000000000000000000"], t8_8);
    info.eval->multiply_plain(ss[59], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_9);
    info.eval->multiply_plain(ss[63], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_10);
    info.eval->multiply_plain(ss[65], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001000000000000010000000000000000000000000000000000000000000000000"], t8_11);
    info.eval->multiply_plain(ss[61], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000000001000010000000000000"], t8_12);
    info.eval->add_many({t8_1, t8_2, t8_3, t8_4, t8_5, t8_6, t8_7, t8_8, t8_9, t8_10, t8_11, t8_12}, ts[8]);
    }
    
    info.eval->multiply(ts[7], ts[8], vs[6]); // __v6 = __t7 * __t8
    info.eval->relinearize_inplace(vs[6], rk);
    info.eval->rotate_rows(vs[6], -37, gk, ss[94]); // __s94 = __v6 >> 37
    info.eval->rotate_rows(vs[6], -54, gk, ss[95]); // __s95 = __v6 >> 54
    info.eval->rotate_rows(vs[6], -90, gk, ss[96]); // __s96 = __v6 >> 90
    info.eval->rotate_rows(vs[6], -166, gk, ss[97]); // __s97 = __v6 >> 166
    info.eval->rotate_rows(vs[6], -4, gk, ss[98]); // __s98 = __v6 >> 4
    info.eval->rotate_rows(vs[6], -117, gk, ss[99]); // __s99 = __v6 >> 117
    info.eval->rotate_rows(vs[6], -9, gk, ss[100]); // __s100 = __v6 >> 9
    info.eval->rotate_rows(vs[6], -13, gk, ss[101]); // __s101 = __v6 >> 13
    info.eval->rotate_rows(vs[6], -128, gk, ss[102]); // __s102 = __v6 >> 128
    info.eval->rotate_rows(vs[6], -30, gk, ss[103]); // __s103 = __v6 >> 30
    info.eval->rotate_rows(vs[6], -38, gk, ss[104]); // __s104 = __v6 >> 38
    info.eval->rotate_rows(vs[6], -76, gk, ss[105]); // __s105 = __v6 >> 76
    info.eval->rotate_rows(vs[6], -57, gk, ss[106]); // __s106 = __v6 >> 57
    
    // __t9 = blend(__s99@00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s105@00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s102@00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s97@00000000000000000000000000000000000000001000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v6@00000000000000000000000000000000000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000, __s106@00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s94@00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000100000000, __s98@00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000001000000000000000000000001000000000000000000000000000001000000000, __s100@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000001000000000000000000000000000000000000000000000000000000000000, __s101@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000010000000000000000000000100000, __s95@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s103@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000, __s104@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000, __s96@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000010000000000000000000000)
    {
    ctxt t9_1, t9_2, t9_3, t9_4, t9_5, t9_6, t9_7, t9_8, t9_9, t9_10, t9_11, t9_12, t9_13, t9_14;
    info.eval->multiply_plain(ss[99], bits["00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_1);
    info.eval->multiply_plain(ss[105], bits["00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_2);
    info.eval->multiply_plain(ss[102], bits["00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_3);
    info.eval->multiply_plain(ss[97], bits["00000000000000000000000000000000000000001000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_4);
    info.eval->multiply_plain(vs[6], bits["00000000000000000000000000000000000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"], t9_5);
    info.eval->multiply_plain(ss[106], bits["00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_6);
    info.eval->multiply_plain(ss[94], bits["00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000100000000"], t9_7);
    info.eval->multiply_plain(ss[98], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000001000000000000000000000001000000000000000000000000000001000000000"], t9_8);
    info.eval->multiply_plain(ss[100], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000001000000000000000000000000000000000000000000000000000000000000"], t9_9);
    info.eval->multiply_plain(ss[101], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000010000000000000000000000100000"], t9_10);
    info.eval->multiply_plain(ss[95], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_11);
    info.eval->multiply_plain(ss[103], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000"], t9_12);
    info.eval->multiply_plain(ss[104], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000"], t9_13);
    info.eval->multiply_plain(ss[96], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000010000000010000000000000000000000"], t9_14);
    info.eval->add_many({t9_1, t9_2, t9_3, t9_4, t9_5, t9_6, t9_7, t9_8, t9_9, t9_10, t9_11, t9_12, t9_13, t9_14}, ts[9]);
    }
    
    
    // __t10 = blend(__s70@00000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s83@00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s78@00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000, __s73@00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s84@00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s72@00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s80@00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000010000000100000000000000000000000000000000000000000000000, __s79@00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s88@00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s93@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s85@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000000000000000000000000000000000000000000100000000000000000000000000000000000000000, __s77@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s82@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000010000000000000000000000000000000000000000000000, __s89@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000010000000000000000000000000000000, __s74@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000, __s69@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000010000000000000000000000000000, __s86@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000, __s81@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000100000, __s76@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000, __s75@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000)
    {
    ctxt t10_1, t10_2, t10_3, t10_4, t10_5, t10_6, t10_7, t10_8, t10_9, t10_10, t10_11, t10_12, t10_13, t10_14, t10_15, t10_16, t10_17, t10_18, t10_19, t10_20;
    info.eval->multiply_plain(ss[70], bits["00000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_1);
    info.eval->multiply_plain(ss[83], bits["00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_2);
    info.eval->multiply_plain(ss[78], bits["00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000"], t10_3);
    info.eval->multiply_plain(ss[73], bits["00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_4);
    info.eval->multiply_plain(ss[84], bits["00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_5);
    info.eval->multiply_plain(ss[72], bits["00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_6);
    info.eval->multiply_plain(ss[80], bits["00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000010000000100000000000000000000000000000000000000000000000"], t10_7);
    info.eval->multiply_plain(ss[79], bits["00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_8);
    info.eval->multiply_plain(ss[88], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_9);
    info.eval->multiply_plain(ss[93], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_10);
    info.eval->multiply_plain(ss[85], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"], t10_11);
    info.eval->multiply_plain(ss[77], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_12);
    info.eval->multiply_plain(ss[82], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000010000000000000000000000000000000000000000000000"], t10_13);
    info.eval->multiply_plain(ss[89], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000010000000000000000000000000000000"], t10_14);
    info.eval->multiply_plain(ss[74], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000"], t10_15);
    info.eval->multiply_plain(ss[69], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000010000000000000000000000000000"], t10_16);
    info.eval->multiply_plain(ss[86], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000"], t10_17);
    info.eval->multiply_plain(ss[81], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000100000"], t10_18);
    info.eval->multiply_plain(ss[76], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000"], t10_19);
    info.eval->multiply_plain(ss[75], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000"], t10_20);
    info.eval->add_many({t10_1, t10_2, t10_3, t10_4, t10_5, t10_6, t10_7, t10_8, t10_9, t10_10, t10_11, t10_12, t10_13, t10_14, t10_15, t10_16, t10_17, t10_18, t10_19, t10_20}, ts[10]);
    }
    
    info.eval->add(ts[9], ts[10], vs[7]); // __v7 = __t9 + __t10
    info.eval->rotate_rows(vs[7], -104, gk, ss[107]); // __s107 = __v7 >> 104
    info.eval->rotate_rows(vs[7], -20, gk, ss[108]); // __s108 = __v7 >> 20
    info.eval->rotate_rows(vs[7], -151, gk, ss[109]); // __s109 = __v7 >> 151
    info.eval->rotate_rows(vs[7], -92, gk, ss[110]); // __s110 = __v7 >> 92
    info.eval->rotate_rows(vs[7], -76, gk, ss[111]); // __s111 = __v7 >> 76
    info.eval->rotate_rows(vs[7], -34, gk, ss[112]); // __s112 = __v7 >> 34
    info.eval->rotate_rows(vs[7], -169, gk, ss[113]); // __s113 = __v7 >> 169
    info.eval->rotate_rows(vs[7], -160, gk, ss[114]); // __s114 = __v7 >> 160
    info.eval->rotate_rows(vs[7], -181, gk, ss[115]); // __s115 = __v7 >> 181
    info.eval->rotate_rows(vs[7], -158, gk, ss[116]); // __s116 = __v7 >> 158
    info.eval->rotate_rows(vs[7], -178, gk, ss[117]); // __s117 = __v7 >> 178
    info.eval->rotate_rows(vs[7], -175, gk, ss[118]); // __s118 = __v7 >> 175
    info.eval->rotate_rows(vs[7], -32, gk, ss[119]); // __s119 = __v7 >> 32
    
    // __t11 = blend(__s109@10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000, __s119@00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s108@00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000, __s113@00000000000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000, __s114@00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000010000000000000000000001000000000100001000000000000000000000000000000000000000000000000000000000, __s116@00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000, __s112@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000, __s115@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000, __s107@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000001000000000000000100000000000000000000000000000000, __s111@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000010000000000000000000000, __s110@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000010000000000000000000000000000000, __s117@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000010000000000000000000000000, __v7@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000, __s118@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000000000000000000000000)
    {
    ctxt t11_1, t11_2, t11_3, t11_4, t11_5, t11_6, t11_7, t11_8, t11_9, t11_10, t11_11, t11_12, t11_13, t11_14;
    info.eval->multiply_plain(ss[109], bits["10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000"], t11_1);
    info.eval->multiply_plain(ss[119], bits["00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t11_2);
    info.eval->multiply_plain(ss[108], bits["00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000"], t11_3);
    info.eval->multiply_plain(ss[113], bits["00000000000000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000"], t11_4);
    info.eval->multiply_plain(ss[114], bits["00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000010000000000000000000001000000000100001000000000000000000000000000000000000000000000000000000000"], t11_5);
    info.eval->multiply_plain(ss[116], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000"], t11_6);
    info.eval->multiply_plain(ss[112], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"], t11_7);
    info.eval->multiply_plain(ss[115], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000"], t11_8);
    info.eval->multiply_plain(ss[107], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000001000000000000000100000000000000000000000000000000"], t11_9);
    info.eval->multiply_plain(ss[111], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000010000000000000000000000"], t11_10);
    info.eval->multiply_plain(ss[110], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000010000000000000000000000000000000"], t11_11);
    info.eval->multiply_plain(ss[117], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000010000000000000000000000000"], t11_12);
    info.eval->multiply_plain(vs[7], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000"], t11_13);
    info.eval->multiply_plain(ss[118], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001000000000000000000000000"], t11_14);
    info.eval->add_many({t11_1, t11_2, t11_3, t11_4, t11_5, t11_6, t11_7, t11_8, t11_9, t11_10, t11_11, t11_12, t11_13, t11_14}, ts[11]);
    }
    
    
    // __t12 = blend(__s45@10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s35@00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000, __s36@00000000000000000000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000, __s44@00000000000000000000000000000000000000000000000000000000000100000000000000000000000100000000000000100000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000, __s39@00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000100000000000000000000000000000000000000000, __v2@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s41@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s38@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010000001000000000000000000000000000100000000010010000000000000000000000, __s37@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000000000000000000000000000000000100000001000000000000000000000000, __s40@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s43@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000100000000000001000000000000000010000000000000000000000000000000, __s42@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000)
    {
    ctxt t12_1, t12_2, t12_3, t12_4, t12_5, t12_6, t12_7, t12_8, t12_9, t12_10, t12_11, t12_12;
    info.eval->multiply_plain(ss[45], bits["10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t12_1);
    info.eval->multiply_plain(ss[35], bits["00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000"], t12_2);
    info.eval->multiply_plain(ss[36], bits["00000000000000000000000000000000000000000000000010000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"], t12_3);
    info.eval->multiply_plain(ss[44], bits["00000000000000000000000000000000000000000000000000000000000100000000000000000000000100000000000000100000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"], t12_4);
    info.eval->multiply_plain(ss[39], bits["00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000001000100000000000000000000000000000000000000000"], t12_5);
    info.eval->multiply_plain(vs[2], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t12_6);
    info.eval->multiply_plain(ss[41], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t12_7);
    info.eval->multiply_plain(ss[38], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010000001000000000000000000000000000100000000010010000000000000000000000"], t12_8);
    info.eval->multiply_plain(ss[37], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000000000000000000000000000000000100000001000000000000000000000000"], t12_9);
    info.eval->multiply_plain(ss[40], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t12_10);
    info.eval->multiply_plain(ss[43], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000100000000000001000000000000000010000000000000000000000000000000"], t12_11);
    info.eval->multiply_plain(ss[42], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000"], t12_12);
    info.eval->add_many({t12_1, t12_2, t12_3, t12_4, t12_5, t12_6, t12_7, t12_8, t12_9, t12_10, t12_11, t12_12}, ts[12]);
    }
    
    info.eval->add(ts[11], ts[12], vs[8]); // __v8 = __t11 + __t12
    info.eval->rotate_rows(vs[8], -18, gk, ss[120]); // __s120 = __v8 >> 18
    info.eval->rotate_rows(vs[8], -112, gk, ss[121]); // __s121 = __v8 >> 112
    info.eval->rotate_rows(vs[8], -159, gk, ss[122]); // __s122 = __v8 >> 159
    info.eval->rotate_rows(vs[8], -126, gk, ss[123]); // __s123 = __v8 >> 126
    info.eval->rotate_rows(vs[8], -113, gk, ss[124]); // __s124 = __v8 >> 113
    info.eval->rotate_rows(vs[8], -99, gk, ss[125]); // __s125 = __v8 >> 99
    info.eval->rotate_rows(vs[8], -117, gk, ss[126]); // __s126 = __v8 >> 117
    info.eval->rotate_rows(vs[8], -106, gk, ss[127]); // __s127 = __v8 >> 106
    info.eval->rotate_rows(vs[8], -27, gk, ss[128]); // __s128 = __v8 >> 27
    info.eval->rotate_rows(vs[8], -155, gk, ss[129]); // __s129 = __v8 >> 155
    info.eval->rotate_rows(vs[8], -111, gk, ss[130]); // __s130 = __v8 >> 111
    
    // __t13 = blend(__s29@00001000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s31@00000001000000000000000000010000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s30@00000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s25@00000000000000000010000000000000000000000000000000000000000000000000000010000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001000000000000000000000, __s28@00000000000000000000000010000000000000000000000001010000000000000000000000000000000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000, __v1@00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000, __s32@00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s27@00000000000000000000000000000000000000000000000010000000010000000000000000100000000000100000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000, __s34@00000000000000000000000000000000000000000000000000000000000000000000000000010000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s33@00000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s26@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000)
    {
    ctxt t13_1, t13_2, t13_3, t13_4, t13_5, t13_6, t13_7, t13_8, t13_9, t13_10, t13_11;
    info.eval->multiply_plain(ss[29], bits["00001000000000000000000000000000000000001000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t13_1);
    info.eval->multiply_plain(ss[31], bits["00000001000000000000000000010000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t13_2);
    info.eval->multiply_plain(ss[30], bits["00000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t13_3);
    info.eval->multiply_plain(ss[25], bits["00000000000000000010000000000000000000000000000000000000000000000000000010000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t13_4);
    info.eval->multiply_plain(ss[28], bits["00000000000000000000000010000000000000000000000001010000000000000000000000000000000000000000100000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"], t13_5);
    info.eval->multiply_plain(vs[1], bits["00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000"], t13_6);
    info.eval->multiply_plain(ss[32], bits["00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t13_7);
    info.eval->multiply_plain(ss[27], bits["00000000000000000000000000000000000000000000000010000000010000000000000000100000000000100000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000"], t13_8);
    info.eval->multiply_plain(ss[34], bits["00000000000000000000000000000000000000000000000000000000000000000000000000010000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t13_9);
    info.eval->multiply_plain(ss[33], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t13_10);
    info.eval->multiply_plain(ss[26], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"], t13_11);
    info.eval->add_many({t13_1, t13_2, t13_3, t13_4, t13_5, t13_6, t13_7, t13_8, t13_9, t13_10, t13_11}, ts[13]);
    }
    
    
    // __t14 = blend(__s125@00001000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s123@00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s124@00000000010000000000000000000000000000000000000001000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s120@00000000000000000010000000000000000000001000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000, __s126@00000000000000000000000010000000000000000000000010000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s127@00000000000000000000000000100000000100000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s122@00000000000000000000000000010000000000000000000000010000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s130@00000000000000000000000000000000000000000000000000000001000000000000000010010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s129@00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000001000000000000000000000001000000000000000000000000000000000000000000000000000000000000, __s128@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000, __v8@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000, __s121@00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000)
    {
    ctxt t14_1, t14_2, t14_3, t14_4, t14_5, t14_6, t14_7, t14_8, t14_9, t14_10, t14_11, t14_12;
    info.eval->multiply_plain(ss[125], bits["00001000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_1);
    info.eval->multiply_plain(ss[123], bits["00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_2);
    info.eval->multiply_plain(ss[124], bits["00000000010000000000000000000000000000000000000001000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_3);
    info.eval->multiply_plain(ss[120], bits["00000000000000000010000000000000000000001000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t14_4);
    info.eval->multiply_plain(ss[126], bits["00000000000000000000000010000000000000000000000010000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_5);
    info.eval->multiply_plain(ss[127], bits["00000000000000000000000000100000000100000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_6);
    info.eval->multiply_plain(ss[122], bits["00000000000000000000000000010000000000000000000000010000000000000000000000000000000000100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_7);
    info.eval->multiply_plain(ss[130], bits["00000000000000000000000000000000000000000000000000000001000000000000000010010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_8);
    info.eval->multiply_plain(ss[129], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000001000000000000000000000001000000000000000000000000000000000000000000000000000000000000"], t14_9);
    info.eval->multiply_plain(ss[128], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"], t14_10);
    info.eval->multiply_plain(vs[8], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000"], t14_11);
    info.eval->multiply_plain(ss[121], bits["00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"], t14_12);
    info.eval->add_many({t14_1, t14_2, t14_3, t14_4, t14_5, t14_6, t14_7, t14_8, t14_9, t14_10, t14_11, t14_12}, ts[14]);
    }
    
    info.eval->sub(ts[13], ts[14], vs[9]); // __v9 = __t13 - __t14
    return vs[9];
}
    