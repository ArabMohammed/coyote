
# include <vector.hpp>

std::map<std::string, ptxt> VectorProgram::make_bits(RuntimeContext &info)
{
    std::map<std::string, ptxt> bits;
    add_bitstring(bits, "0000000000000000000000000000000000000000000000001000000000000000000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010000000000000000000100000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000010000000000000000000000000000", info);
    add_bitstring(bits, "0000100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000100000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000010000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000100000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000001000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", info);
    add_bitstring(bits, "0000000000000000000000000000000000100000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001000000000", info);
    add_bitstring(bits, "0000000000000000000000000000010000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0100000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000100000000000000000000000000000000000000000000000000000000000000000000000001000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000", info);
    add_bitstring(bits, "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000001", info);
    add_bitstring(bits, "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000010000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000010", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000100001000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000100000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000010", info);
    add_bitstring(bits, "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000", info);
    add_bitstring(bits, "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000100000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000010000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000011000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000100000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000010000000000000000001000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000100000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000000000000000000000000001000000", info);
    add_bitstring(bits, "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000010000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000100000000000000000000000000000000000000000000010000000000000000000000000000000000000010000001000000000000000000000000010000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000001000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010", info);
    add_bitstring(bits, "0000001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000010", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000001000000000000000000", info);
    add_bitstring(bits, "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000100000000000000000000000100000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000100000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000001", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000100000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000001000000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000001010000000000000000000000100000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000100000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000100000100000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000100000000000000000", info);
    add_bitstring(bits, "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000100000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000100000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000010000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000100000000000000000001000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000001000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000010000010000000001000000000000000000000000001000000000000000000", info);
    add_bitstring(bits, "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000100000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000100000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000001000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000", info);
    add_bitstring(bits, "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000", info);
    return bits;
}

std::vector<ctxt> VectorProgram::initialize_temps(RuntimeContext &info)
{
    std::vector<ctxt> ts(19);
    ts[0] = encrypt_inputinfo);
    ts[1] = encrypt_input("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", info);
    return ts;
}

ctxt VectorProgram::computation(std::vector<ctxt> ts, std::map<std::string, ptxt> bits, RuntimeContext &info)
{
    seal::RelinKeys rk = info.keys->rk;
    seal::GaloisKeys gk = info.keys->gk;

    ctxt vs[10];
    ctxt ss[96];

    vs[0] = ts[0];
    info.eval->rotate_rows(vs[0], -4, gk, ss[0]); // __s0 = __v0 >> 4
    info.eval->rotate_rows(vs[0], -86, gk, ss[1]); // __s1 = __v0 >> 86
    info.eval->rotate_rows(vs[0], -2, gk, ss[2]); // __s2 = __v0 >> 2
    info.eval->rotate_rows(vs[0], -38, gk, ss[3]); // __s3 = __v0 >> 38
    info.eval->rotate_rows(vs[0], -22, gk, ss[4]); // __s4 = __v0 >> 22
    info.eval->rotate_rows(vs[0], -167, gk, ss[5]); // __s5 = __v0 >> 167
    info.eval->rotate_rows(vs[0], -83, gk, ss[6]); // __s6 = __v0 >> 83
    info.eval->rotate_rows(vs[0], -156, gk, ss[7]); // __s7 = __v0 >> 156
    info.eval->rotate_rows(vs[0], -54, gk, ss[8]); // __s8 = __v0 >> 54
    info.eval->rotate_rows(vs[0], -7, gk, ss[9]); // __s9 = __v0 >> 7
    info.eval->rotate_rows(vs[0], -20, gk, ss[10]); // __s10 = __v0 >> 20
    info.eval->rotate_rows(vs[0], -30, gk, ss[11]); // __s11 = __v0 >> 30
    info.eval->rotate_rows(vs[0], -25, gk, ss[12]); // __s12 = __v0 >> 25
    info.eval->rotate_rows(vs[0], -24, gk, ss[13]); // __s13 = __v0 >> 24
    info.eval->rotate_rows(vs[0], -160, gk, ss[14]); // __s14 = __v0 >> 160
    info.eval->rotate_rows(vs[0], -29, gk, ss[15]); // __s15 = __v0 >> 29
    info.eval->rotate_rows(vs[0], -164, gk, ss[16]); // __s16 = __v0 >> 164
    info.eval->rotate_rows(vs[0], -154, gk, ss[17]); // __s17 = __v0 >> 154
    info.eval->rotate_rows(vs[0], -107, gk, ss[18]); // __s18 = __v0 >> 107
    info.eval->rotate_rows(vs[0], -138, gk, ss[19]); // __s19 = __v0 >> 138
    info.eval->rotate_rows(vs[0], -162, gk, ss[20]); // __s20 = __v0 >> 162
    info.eval->rotate_rows(vs[0], -65, gk, ss[21]); // __s21 = __v0 >> 65
    info.eval->rotate_rows(vs[0], -13, gk, ss[22]); // __s22 = __v0 >> 13
    info.eval->rotate_rows(vs[0], -117, gk, ss[23]); // __s23 = __v0 >> 117
    info.eval->rotate_rows(vs[0], -3, gk, ss[24]); // __s24 = __v0 >> 3
    info.eval->rotate_rows(vs[0], -78, gk, ss[25]); // __s25 = __v0 >> 78
    info.eval->rotate_rows(vs[0], -116, gk, ss[26]); // __s26 = __v0 >> 116
    info.eval->rotate_rows(vs[0], -145, gk, ss[27]); // __s27 = __v0 >> 145
    info.eval->rotate_rows(vs[0], -103, gk, ss[28]); // __s28 = __v0 >> 103
    info.eval->rotate_rows(vs[0], -37, gk, ss[29]); // __s29 = __v0 >> 37
    info.eval->rotate_rows(vs[0], -23, gk, ss[30]); // __s30 = __v0 >> 23
    info.eval->rotate_rows(vs[0], -112, gk, ss[31]); // __s31 = __v0 >> 112
    info.eval->rotate_rows(vs[0], -35, gk, ss[32]); // __s32 = __v0 >> 35
    info.eval->rotate_rows(vs[0], -98, gk, ss[33]); // __s33 = __v0 >> 98
    info.eval->rotate_rows(vs[0], -91, gk, ss[34]); // __s34 = __v0 >> 91
    
    // __t2 = blend(__s7@0100000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000, __s0@0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100000000000000000000000000000000000000000000000000000, __s28@0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s14@0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000, __s17@0000000000000000000000000000000100000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s10@0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s13@0000000000000000000000000000000000000000000001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s2@0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s4@0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s22@0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000100000000000000000000000000000000000000000000000000000000000000000000, __s15@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000100000000000000000000000000, __s1@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000, __s9@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000, __s20@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000, __s5@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000, __s25@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000)
    {
    ctxt t2_1, t2_2, t2_3, t2_4, t2_5, t2_6, t2_7, t2_8, t2_9, t2_10, t2_11, t2_12, t2_13, t2_14, t2_15, t2_16;
    info.eval->multiply_plain(ss[7], bits["0100000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"], t2_1);
    info.eval->multiply_plain(ss[0], bits["0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000100000000000000000000000000000000000000000000000000000"], t2_2);
    info.eval->multiply_plain(ss[28], bits["0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t2_3);
    info.eval->multiply_plain(ss[14], bits["0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000"], t2_4);
    info.eval->multiply_plain(ss[17], bits["0000000000000000000000000000000100000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t2_5);
    info.eval->multiply_plain(ss[10], bits["0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t2_6);
    info.eval->multiply_plain(ss[13], bits["0000000000000000000000000000000000000000000001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t2_7);
    info.eval->multiply_plain(ss[2], bits["0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t2_8);
    info.eval->multiply_plain(ss[4], bits["0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t2_9);
    info.eval->multiply_plain(ss[22], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000100000000000000000000000000000000000000000000000000000000000000000000"], t2_10);
    info.eval->multiply_plain(ss[15], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000100000000000000000000000000"], t2_11);
    info.eval->multiply_plain(ss[1], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000"], t2_12);
    info.eval->multiply_plain(ss[9], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000"], t2_13);
    info.eval->multiply_plain(ss[20], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000"], t2_14);
    info.eval->multiply_plain(ss[5], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000"], t2_15);
    info.eval->multiply_plain(ss[25], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000"], t2_16);
    info.eval->add_many({t2_1, t2_2, t2_3, t2_4, t2_5, t2_6, t2_7, t2_8, t2_9, t2_10, t2_11, t2_12, t2_13, t2_14, t2_15, t2_16}, ts[2]);
    }
    
    info.eval->add(ts[1], ts[2], vs[1]); // __v1 = __t1 + __t2
    info.eval->rotate_rows(vs[1], -160, gk, ss[35]); // __s35 = __v1 >> 160
    info.eval->rotate_rows(vs[1], -77, gk, ss[36]); // __s36 = __v1 >> 77
    info.eval->rotate_rows(vs[1], -147, gk, ss[37]); // __s37 = __v1 >> 147
    info.eval->rotate_rows(vs[1], -128, gk, ss[38]); // __s38 = __v1 >> 128
    info.eval->rotate_rows(vs[1], -80, gk, ss[39]); // __s39 = __v1 >> 80
    info.eval->rotate_rows(vs[1], -59, gk, ss[40]); // __s40 = __v1 >> 59
    info.eval->rotate_rows(vs[1], -67, gk, ss[41]); // __s41 = __v1 >> 67
    info.eval->rotate_rows(vs[1], -108, gk, ss[42]); // __s42 = __v1 >> 108
    info.eval->rotate_rows(vs[1], -91, gk, ss[43]); // __s43 = __v1 >> 91
    info.eval->rotate_rows(vs[1], -105, gk, ss[44]); // __s44 = __v1 >> 105
    
    // __t3 = blend(__s38@0000100000000000000000000000000000000000000000000000000000000000000000000000001000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000, __v1@0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000100000000000000000, __s37@0000000001000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000000000000000, __s42@0000000000000000000000000000000000000000000000000100001000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000, __s43@0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s44@0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s36@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010000000000000000000100000000000000000000000000000000000000000000000000000, __s40@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000, __s41@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000010, __s39@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000000000000000000000000001000000, __s35@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000)
    {
    ctxt t3_1, t3_2, t3_3, t3_4, t3_5, t3_6, t3_7, t3_8, t3_9, t3_10, t3_11;
    info.eval->multiply_plain(ss[38], bits["0000100000000000000000000000000000000000000000000000000000000000000000000000001000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_1);
    info.eval->multiply_plain(vs[1], bits["0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000100000000000000000"], t3_2);
    info.eval->multiply_plain(ss[37], bits["0000000001000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000000000000000"], t3_3);
    info.eval->multiply_plain(ss[42], bits["0000000000000000000000000000000000000000000000000100001000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_4);
    info.eval->multiply_plain(ss[43], bits["0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_5);
    info.eval->multiply_plain(ss[44], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t3_6);
    info.eval->multiply_plain(ss[36], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000010000000000000000000100000000000000000000000000000000000000000000000000000"], t3_7);
    info.eval->multiply_plain(ss[40], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"], t3_8);
    info.eval->multiply_plain(ss[41], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000010"], t3_9);
    info.eval->multiply_plain(ss[39], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001000000000000000000000000001000000"], t3_10);
    info.eval->multiply_plain(ss[35], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000"], t3_11);
    info.eval->add_many({t3_1, t3_2, t3_3, t3_4, t3_5, t3_6, t3_7, t3_8, t3_9, t3_10, t3_11}, ts[3]);
    }
    
    
    // __t4 = blend(__s19@0000100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s23@0000000100000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s14@0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s16@0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000, __s26@0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s28@0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s4@0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000100000000000000000, __s33@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s34@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000, __s1@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000, __s0@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000, __s24@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000001000000, __s22@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000, __s5@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000000000000000000000000000000000, __s17@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000, __s7@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000, __s30@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000010, __s10@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000)
    {
    ctxt t4_1, t4_2, t4_3, t4_4, t4_5, t4_6, t4_7, t4_8, t4_9, t4_10, t4_11, t4_12, t4_13, t4_14, t4_15, t4_16, t4_17, t4_18;
    info.eval->multiply_plain(ss[19], bits["0000100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_1);
    info.eval->multiply_plain(ss[23], bits["0000000100000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_2);
    info.eval->multiply_plain(ss[14], bits["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_3);
    info.eval->multiply_plain(ss[16], bits["0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"], t4_4);
    info.eval->multiply_plain(ss[26], bits["0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_5);
    info.eval->multiply_plain(ss[28], bits["0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_6);
    info.eval->multiply_plain(ss[4], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000100000000000000000"], t4_7);
    info.eval->multiply_plain(ss[33], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_8);
    info.eval->multiply_plain(ss[34], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_9);
    info.eval->multiply_plain(ss[1], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000"], t4_10);
    info.eval->multiply_plain(ss[0], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000"], t4_11);
    info.eval->multiply_plain(ss[24], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000001000000"], t4_12);
    info.eval->multiply_plain(ss[22], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000"], t4_13);
    info.eval->multiply_plain(ss[5], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000001000000000000000000000000000000000000"], t4_14);
    info.eval->multiply_plain(ss[17], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000"], t4_15);
    info.eval->multiply_plain(ss[7], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000"], t4_16);
    info.eval->multiply_plain(ss[30], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000010"], t4_17);
    info.eval->multiply_plain(ss[10], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000"], t4_18);
    info.eval->add_many({t4_1, t4_2, t4_3, t4_4, t4_5, t4_6, t4_7, t4_8, t4_9, t4_10, t4_11, t4_12, t4_13, t4_14, t4_15, t4_16, t4_17, t4_18}, ts[4]);
    }
    
    info.eval->add(ts[3], ts[4], vs[2]); // __v2 = __t3 + __t4
    info.eval->rotate_rows(vs[2], -20, gk, ss[45]); // __s45 = __v2 >> 20
    info.eval->rotate_rows(vs[2], -28, gk, ss[46]); // __s46 = __v2 >> 28
    info.eval->rotate_rows(vs[2], -166, gk, ss[47]); // __s47 = __v2 >> 166
    info.eval->rotate_rows(vs[2], -139, gk, ss[48]); // __s48 = __v2 >> 139
    info.eval->rotate_rows(vs[2], -34, gk, ss[49]); // __s49 = __v2 >> 34
    info.eval->rotate_rows(vs[2], -150, gk, ss[50]); // __s50 = __v2 >> 150
    info.eval->rotate_rows(vs[2], -158, gk, ss[51]); // __s51 = __v2 >> 158
    info.eval->rotate_rows(vs[2], -123, gk, ss[52]); // __s52 = __v2 >> 123
    info.eval->rotate_rows(vs[2], -131, gk, ss[53]); // __s53 = __v2 >> 131
    info.eval->rotate_rows(vs[2], -168, gk, ss[54]); // __s54 = __v2 >> 168
    info.eval->rotate_rows(vs[2], -100, gk, ss[55]); // __s55 = __v2 >> 100
    
    // __t5 = blend(__s47@0000001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000, __s48@0000000000000100000000000000000000000000000000000000000000010000000000000000000000000000000000000010000001000000000000000000000000010000000000000000000000000000000000000, __s45@0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s52@0000000000000000000000000000000000100000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s46@0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000001, __s50@0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s55@0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s53@0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000100000100000000000000000000000000000000000000000000000000000000000000000000000000, __s51@0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000, __s49@0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s54@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000000000000000000000000000000000000000, __v2@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010)
    {
    ctxt t5_1, t5_2, t5_3, t5_4, t5_5, t5_6, t5_7, t5_8, t5_9, t5_10, t5_11, t5_12;
    info.eval->multiply_plain(ss[47], bits["0000001000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000"], t5_1);
    info.eval->multiply_plain(ss[48], bits["0000000000000100000000000000000000000000000000000000000000010000000000000000000000000000000000000010000001000000000000000000000000010000000000000000000000000000000000000"], t5_2);
    info.eval->multiply_plain(ss[45], bits["0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_3);
    info.eval->multiply_plain(ss[52], bits["0000000000000000000000000000000000100000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_4);
    info.eval->multiply_plain(ss[46], bits["0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000001"], t5_5);
    info.eval->multiply_plain(ss[50], bits["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_6);
    info.eval->multiply_plain(ss[55], bits["0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_7);
    info.eval->multiply_plain(ss[53], bits["0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000100000100000000000000000000000000000000000000000000000000000000000000000000000000"], t5_8);
    info.eval->multiply_plain(ss[51], bits["0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000"], t5_9);
    info.eval->multiply_plain(ss[49], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t5_10);
    info.eval->multiply_plain(ss[54], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000000000000000000000000000000000000000"], t5_11);
    info.eval->multiply_plain(vs[2], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010"], t5_12);
    info.eval->add_many({t5_1, t5_2, t5_3, t5_4, t5_5, t5_6, t5_7, t5_8, t5_9, t5_10, t5_11, t5_12}, ts[5]);
    }
    
    
    // __t6 = blend(__v0@0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s26@0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000, __s9@0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s33@0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s31@0000000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s34@0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000, __s23@0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s4@0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s16@0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s22@0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001000000000, __s0@0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s19@0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000000000000000000000, __s3@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000, __s30@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000, __s21@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000, __s8@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000, __s18@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000, __s12@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010, __s15@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)
    {
    ctxt t6_1, t6_2, t6_3, t6_4, t6_5, t6_6, t6_7, t6_8, t6_9, t6_10, t6_11, t6_12, t6_13, t6_14, t6_15, t6_16, t6_17, t6_18, t6_19;
    info.eval->multiply_plain(vs[0], bits["0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_1);
    info.eval->multiply_plain(ss[26], bits["0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"], t6_2);
    info.eval->multiply_plain(ss[9], bits["0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_3);
    info.eval->multiply_plain(ss[33], bits["0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_4);
    info.eval->multiply_plain(ss[31], bits["0000000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_5);
    info.eval->multiply_plain(ss[34], bits["0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_6);
    info.eval->multiply_plain(ss[23], bits["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_7);
    info.eval->multiply_plain(ss[4], bits["0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_8);
    info.eval->multiply_plain(ss[16], bits["0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_9);
    info.eval->multiply_plain(ss[22], bits["0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001000000000"], t6_10);
    info.eval->multiply_plain(ss[0], bits["0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t6_11);
    info.eval->multiply_plain(ss[19], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000010000000000000000000000000000000000000"], t6_12);
    info.eval->multiply_plain(ss[3], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000"], t6_13);
    info.eval->multiply_plain(ss[30], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"], t6_14);
    info.eval->multiply_plain(ss[21], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"], t6_15);
    info.eval->multiply_plain(ss[8], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"], t6_16);
    info.eval->multiply_plain(ss[18], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000"], t6_17);
    info.eval->multiply_plain(ss[12], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010"], t6_18);
    info.eval->multiply_plain(ss[15], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"], t6_19);
    info.eval->add_many({t6_1, t6_2, t6_3, t6_4, t6_5, t6_6, t6_7, t6_8, t6_9, t6_10, t6_11, t6_12, t6_13, t6_14, t6_15, t6_16, t6_17, t6_18, t6_19}, ts[6]);
    }
    
    info.eval->add(ts[5], ts[6], vs[3]); // __v3 = __t5 + __t6
    info.eval->rotate_rows(vs[3], -8, gk, ss[56]); // __s56 = __v3 >> 8
    info.eval->rotate_rows(vs[3], -168, gk, ss[57]); // __s57 = __v3 >> 168
    info.eval->rotate_rows(vs[3], -86, gk, ss[58]); // __s58 = __v3 >> 86
    info.eval->rotate_rows(vs[3], -139, gk, ss[59]); // __s59 = __v3 >> 139
    info.eval->rotate_rows(vs[3], -92, gk, ss[60]); // __s60 = __v3 >> 92
    info.eval->rotate_rows(vs[3], -56, gk, ss[61]); // __s61 = __v3 >> 56
    info.eval->rotate_rows(vs[3], -35, gk, ss[62]); // __s62 = __v3 >> 35
    info.eval->rotate_rows(vs[3], -145, gk, ss[63]); // __s63 = __v3 >> 145
    
    // __t7 = blend(__s59@0000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000011000000000000000000000000000000, __s57@0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000100000000000000000000000000000000000000000000000000, __s56@0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000, __v3@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000, __s63@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000010000000000000000001000000000000000000000000000000000, __s61@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000010000010000000001000000000000000000000000001000000000000000000, __s58@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000010000000000000000000000000000000000000, __s60@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000100000000000000000, __s62@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000)
    {
    ctxt t7_1, t7_2, t7_3, t7_4, t7_5, t7_6, t7_7, t7_8, t7_9;
    info.eval->multiply_plain(ss[59], bits["0000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000011000000000000000000000000000000"], t7_1);
    info.eval->multiply_plain(ss[57], bits["0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000010000000000000100000000000000000000000000000000000000000000000000"], t7_2);
    info.eval->multiply_plain(ss[56], bits["0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_3);
    info.eval->multiply_plain(vs[3], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000"], t7_4);
    info.eval->multiply_plain(ss[63], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000010000000000000000001000000000000000000000000000000000"], t7_5);
    info.eval->multiply_plain(ss[61], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000010000010000000001000000000000000000000000001000000000000000000"], t7_6);
    info.eval->multiply_plain(ss[58], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000010000000000000000000000000000000000000"], t7_7);
    info.eval->multiply_plain(ss[60], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000100000000000000000"], t7_8);
    info.eval->multiply_plain(ss[62], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t7_9);
    info.eval->add_many({t7_1, t7_2, t7_3, t7_4, t7_5, t7_6, t7_7, t7_8, t7_9}, ts[7]);
    }
    
    
    // __t8 = blend(__s2@0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000010000000000000000000000000000000, __s5@0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000, __s0@0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000100000000000000000000000100000000000000000, __s14@0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s1@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000001000000000000000000, __s7@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000000000000000000000000000000000000000000000, __s28@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000, __s12@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000, __s11@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000, __s21@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000, __s6@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000, __s9@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000, __s3@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000, __s30@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000, __s32@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000, __s17@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000)
    {
    ctxt t8_1, t8_2, t8_3, t8_4, t8_5, t8_6, t8_7, t8_8, t8_9, t8_10, t8_11, t8_12, t8_13, t8_14, t8_15, t8_16;
    info.eval->multiply_plain(ss[2], bits["0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000010000000000000000000000000000000"], t8_1);
    info.eval->multiply_plain(ss[5], bits["0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t8_2);
    info.eval->multiply_plain(ss[0], bits["0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000100000000000000000000000100000000000000000"], t8_3);
    info.eval->multiply_plain(ss[14], bits["0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t8_4);
    info.eval->multiply_plain(ss[1], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000001000000000000000000"], t8_5);
    info.eval->multiply_plain(ss[7], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000000000000000000000000000000000000000000000000000000"], t8_6);
    info.eval->multiply_plain(ss[28], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000"], t8_7);
    info.eval->multiply_plain(ss[12], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000"], t8_8);
    info.eval->multiply_plain(ss[11], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"], t8_9);
    info.eval->multiply_plain(ss[21], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000"], t8_10);
    info.eval->multiply_plain(ss[6], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"], t8_11);
    info.eval->multiply_plain(ss[9], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000"], t8_12);
    info.eval->multiply_plain(ss[3], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000"], t8_13);
    info.eval->multiply_plain(ss[30], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"], t8_14);
    info.eval->multiply_plain(ss[32], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000"], t8_15);
    info.eval->multiply_plain(ss[17], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"], t8_16);
    info.eval->add_many({t8_1, t8_2, t8_3, t8_4, t8_5, t8_6, t8_7, t8_8, t8_9, t8_10, t8_11, t8_12, t8_13, t8_14, t8_15, t8_16}, ts[8]);
    }
    
    info.eval->add(ts[7], ts[8], vs[4]); // __v4 = __t7 + __t8
    info.eval->rotate_rows(vs[4], -39, gk, ss[64]); // __s64 = __v4 >> 39
    info.eval->rotate_rows(vs[4], -163, gk, ss[65]); // __s65 = __v4 >> 163
    info.eval->rotate_rows(vs[4], -22, gk, ss[66]); // __s66 = __v4 >> 22
    info.eval->rotate_rows(vs[4], -160, gk, ss[67]); // __s67 = __v4 >> 160
    info.eval->rotate_rows(vs[4], -105, gk, ss[68]); // __s68 = __v4 >> 105
    info.eval->rotate_rows(vs[4], -126, gk, ss[69]); // __s69 = __v4 >> 126
    info.eval->rotate_rows(vs[4], -37, gk, ss[70]); // __s70 = __v4 >> 37
    info.eval->rotate_rows(vs[4], -106, gk, ss[71]); // __s71 = __v4 >> 106
    
    // __t9 = blend(__s65@0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000000000000000000000000000000000000000000000000, __s67@0000010000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000100000000000000000001000000000000000000000000000000000000000, __s68@0000000000000000000000001010000000000000000000000100000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s66@0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s64@0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s69@0000000000000000000000000000000000000000000000000000001000000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s71@0000000000000000000000000000000000000000000000000000000000000000000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v4@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000, __s70@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000)
    {
    ctxt t9_1, t9_2, t9_3, t9_4, t9_5, t9_6, t9_7, t9_8, t9_9;
    info.eval->multiply_plain(ss[65], bits["0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000000000000000000000000000000000000000000000000"], t9_1);
    info.eval->multiply_plain(ss[67], bits["0000010000000000000000000000000000000000000000000000000000000000000000000000000000100000000001000000000000000100000000000000000001000000000000000000000000000000000000000"], t9_2);
    info.eval->multiply_plain(ss[68], bits["0000000000000000000000001010000000000000000000000100000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_3);
    info.eval->multiply_plain(ss[66], bits["0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_4);
    info.eval->multiply_plain(ss[64], bits["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_5);
    info.eval->multiply_plain(ss[69], bits["0000000000000000000000000000000000000000000000000000001000000000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_6);
    info.eval->multiply_plain(ss[71], bits["0000000000000000000000000000000000000000000000000000000000000000000000000010000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t9_7);
    info.eval->multiply_plain(vs[4], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"], t9_8);
    info.eval->multiply_plain(ss[70], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000"], t9_9);
    info.eval->add_many({t9_1, t9_2, t9_3, t9_4, t9_5, t9_6, t9_7, t9_8, t9_9}, ts[9]);
    }
    
    
    // __t10 = blend(__s0@0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s19@0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s2@0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s7@0000000000000000000000000010000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s20@0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000, __s27@0000000000000000000000000000000000000000000100000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s11@0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s24@0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000, __s14@0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s26@0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s5@0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000010000001000000000000000000000000000000000000000000000000000, __s1@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s33@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000, __s10@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000, __s25@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000)
    {
    ctxt t10_1, t10_2, t10_3, t10_4, t10_5, t10_6, t10_7, t10_8, t10_9, t10_10, t10_11, t10_12, t10_13, t10_14, t10_15;
    info.eval->multiply_plain(ss[0], bits["0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_1);
    info.eval->multiply_plain(ss[19], bits["0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_2);
    info.eval->multiply_plain(ss[2], bits["0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_3);
    info.eval->multiply_plain(ss[7], bits["0000000000000000000000000010000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_4);
    info.eval->multiply_plain(ss[20], bits["0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"], t10_5);
    info.eval->multiply_plain(ss[27], bits["0000000000000000000000000000000000000000000100000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_6);
    info.eval->multiply_plain(ss[11], bits["0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_7);
    info.eval->multiply_plain(ss[24], bits["0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000"], t10_8);
    info.eval->multiply_plain(ss[14], bits["0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_9);
    info.eval->multiply_plain(ss[26], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_10);
    info.eval->multiply_plain(ss[5], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000010000001000000000000000000000000000000000000000000000000000"], t10_11);
    info.eval->multiply_plain(ss[1], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_12);
    info.eval->multiply_plain(ss[33], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000"], t10_13);
    info.eval->multiply_plain(ss[10], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000"], t10_14);
    info.eval->multiply_plain(ss[25], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000"], t10_15);
    info.eval->add_many({t10_1, t10_2, t10_3, t10_4, t10_5, t10_6, t10_7, t10_8, t10_9, t10_10, t10_11, t10_12, t10_13, t10_14, t10_15}, ts[10]);
    }
    
    info.eval->add(ts[9], ts[10], vs[5]); // __v5 = __t9 + __t10
    info.eval->rotate_rows(vs[5], -41, gk, ss[72]); // __s72 = __v5 >> 41
    info.eval->rotate_rows(vs[5], -109, gk, ss[73]); // __s73 = __v5 >> 109
    info.eval->rotate_rows(vs[5], -93, gk, ss[74]); // __s74 = __v5 >> 93
    info.eval->rotate_rows(vs[5], -3, gk, ss[75]); // __s75 = __v5 >> 3
    info.eval->rotate_rows(vs[5], -15, gk, ss[76]); // __s76 = __v5 >> 15
    info.eval->rotate_rows(vs[5], -61, gk, ss[77]); // __s77 = __v5 >> 61
    info.eval->rotate_rows(vs[5], -99, gk, ss[78]); // __s78 = __v5 >> 99
    info.eval->rotate_rows(vs[5], -155, gk, ss[79]); // __s79 = __v5 >> 155
    info.eval->rotate_rows(vs[5], -100, gk, ss[80]); // __s80 = __v5 >> 100
    info.eval->rotate_rows(vs[5], -8, gk, ss[81]); // __s81 = __v5 >> 8
    info.eval->rotate_rows(vs[5], -134, gk, ss[82]); // __s82 = __v5 >> 134
    
    // __t11 = blend(__s78@0000000000000100000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s75@0000000000000000000000000000010000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v5@0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s72@0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000, __s80@0000000000000000000000000000000000000000000000001000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s76@0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s79@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s82@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000, __s73@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000100000, __s74@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000010, __s81@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000, __s77@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000)
    {
    ctxt t11_1, t11_2, t11_3, t11_4, t11_5, t11_6, t11_7, t11_8, t11_9, t11_10, t11_11, t11_12;
    info.eval->multiply_plain(ss[78], bits["0000000000000100000000010000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t11_1);
    info.eval->multiply_plain(ss[75], bits["0000000000000000000000000000010000000100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t11_2);
    info.eval->multiply_plain(vs[5], bits["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t11_3);
    info.eval->multiply_plain(ss[72], bits["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000"], t11_4);
    info.eval->multiply_plain(ss[80], bits["0000000000000000000000000000000000000000000000001000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t11_5);
    info.eval->multiply_plain(ss[76], bits["0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t11_6);
    info.eval->multiply_plain(ss[79], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t11_7);
    info.eval->multiply_plain(ss[82], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"], t11_8);
    info.eval->multiply_plain(ss[73], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000100000"], t11_9);
    info.eval->multiply_plain(ss[74], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000010"], t11_10);
    info.eval->multiply_plain(ss[81], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000"], t11_11);
    info.eval->multiply_plain(ss[77], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000000000"], t11_12);
    info.eval->add_many({t11_1, t11_2, t11_3, t11_4, t11_5, t11_6, t11_7, t11_8, t11_9, t11_10, t11_11, t11_12}, ts[11]);
    }
    
    
    // __t12 = blend(__s7@0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000, __s16@0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s14@0000000000000000000000000000010000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s4@0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000, __v0@0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000, __s12@0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s3@0000000000000000000000000000000000000000000000001000000000000000000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000, __s9@0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s20@0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s6@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s19@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000, __s29@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000, __s17@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000, __s21@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000, __s22@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010)
    {
    ctxt t12_1, t12_2, t12_3, t12_4, t12_5, t12_6, t12_7, t12_8, t12_9, t12_10, t12_11, t12_12, t12_13, t12_14, t12_15;
    info.eval->multiply_plain(ss[7], bits["0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000"], t12_1);
    info.eval->multiply_plain(ss[16], bits["0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t12_2);
    info.eval->multiply_plain(ss[14], bits["0000000000000000000000000000010000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t12_3);
    info.eval->multiply_plain(ss[4], bits["0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000"], t12_4);
    info.eval->multiply_plain(vs[0], bits["0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000"], t12_5);
    info.eval->multiply_plain(ss[12], bits["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t12_6);
    info.eval->multiply_plain(ss[3], bits["0000000000000000000000000000000000000000000000001000000000000000000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"], t12_7);
    info.eval->multiply_plain(ss[9], bits["0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t12_8);
    info.eval->multiply_plain(ss[20], bits["0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t12_9);
    info.eval->multiply_plain(ss[6], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t12_10);
    info.eval->multiply_plain(ss[19], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"], t12_11);
    info.eval->multiply_plain(ss[29], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"], t12_12);
    info.eval->multiply_plain(ss[17], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"], t12_13);
    info.eval->multiply_plain(ss[21], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000"], t12_14);
    info.eval->multiply_plain(ss[22], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010"], t12_15);
    info.eval->add_many({t12_1, t12_2, t12_3, t12_4, t12_5, t12_6, t12_7, t12_8, t12_9, t12_10, t12_11, t12_12, t12_13, t12_14, t12_15}, ts[12]);
    }
    
    info.eval->add(ts[11], ts[12], vs[6]); // __v6 = __t11 + __t12
    info.eval->rotate_rows(vs[6], -118, gk, ss[83]); // __s83 = __v6 >> 118
    info.eval->rotate_rows(vs[6], -142, gk, ss[84]); // __s84 = __v6 >> 142
    info.eval->rotate_rows(vs[6], -40, gk, ss[85]); // __s85 = __v6 >> 40
    info.eval->rotate_rows(vs[6], -57, gk, ss[86]); // __s86 = __v6 >> 57
    
    // __t13 = blend(__s84@0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000010000000000000000000000000000, __s85@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000001, __v6@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000, __s86@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000100000, __s83@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000)
    {
    ctxt t13_1, t13_2, t13_3, t13_4, t13_5;
    info.eval->multiply_plain(ss[84], bits["0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000010000000000000000000000000000"], t13_1);
    info.eval->multiply_plain(ss[85], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000001"], t13_2);
    info.eval->multiply_plain(vs[6], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"], t13_3);
    info.eval->multiply_plain(ss[86], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000100000"], t13_4);
    info.eval->multiply_plain(ss[83], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t13_5);
    info.eval->add_many({t13_1, t13_2, t13_3, t13_4, t13_5}, ts[13]);
    }
    
    
    // __t14 = blend(__s17@0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s3@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s2@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000, __s7@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000, __s4@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000, __v0@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000, __s14@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000, __s16@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000, __s22@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)
    {
    ctxt t14_1, t14_2, t14_3, t14_4, t14_5, t14_6, t14_7, t14_8, t14_9;
    info.eval->multiply_plain(ss[17], bits["0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_1);
    info.eval->multiply_plain(ss[3], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_2);
    info.eval->multiply_plain(ss[2], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000"], t14_3);
    info.eval->multiply_plain(ss[7], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"], t14_4);
    info.eval->multiply_plain(ss[4], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"], t14_5);
    info.eval->multiply_plain(vs[0], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000"], t14_6);
    info.eval->multiply_plain(ss[14], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000"], t14_7);
    info.eval->multiply_plain(ss[16], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000"], t14_8);
    info.eval->multiply_plain(ss[22], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"], t14_9);
    info.eval->add_many({t14_1, t14_2, t14_3, t14_4, t14_5, t14_6, t14_7, t14_8, t14_9}, ts[14]);
    }
    
    info.eval->add(ts[13], ts[14], vs[7]); // __v7 = __t13 + __t14
    info.eval->rotate_rows(vs[7], -29, gk, ss[87]); // __s87 = __v7 >> 29
    info.eval->rotate_rows(vs[7], -11, gk, ss[88]); // __s88 = __v7 >> 11
    info.eval->rotate_rows(vs[7], -110, gk, ss[89]); // __s89 = __v7 >> 110
    info.eval->rotate_rows(vs[7], -164, gk, ss[90]); // __s90 = __v7 >> 164
    info.eval->rotate_rows(vs[7], -151, gk, ss[91]); // __s91 = __v7 >> 151
    info.eval->rotate_rows(vs[7], -71, gk, ss[92]); // __s92 = __v7 >> 71
    
    // __t15 = blend(__s89@0000000000000000000000000000000100000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s87@0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s92@0000000000000000000000000000000000000000000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s88@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s90@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000, __s91@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000)
    {
    ctxt t15_1, t15_2, t15_3, t15_4, t15_5, t15_6;
    info.eval->multiply_plain(ss[89], bits["0000000000000000000000000000000100000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t15_1);
    info.eval->multiply_plain(ss[87], bits["0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t15_2);
    info.eval->multiply_plain(ss[92], bits["0000000000000000000000000000000000000000000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t15_3);
    info.eval->multiply_plain(ss[88], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t15_4);
    info.eval->multiply_plain(ss[90], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000"], t15_5);
    info.eval->multiply_plain(ss[91], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000"], t15_6);
    info.eval->add_many({t15_1, t15_2, t15_3, t15_4, t15_5, t15_6}, ts[15]);
    }
    
    
    // __t16 = blend(__s4@0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000, __s3@0000000000000000000000000000000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s17@0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s5@0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s24@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s2@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000, __s7@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000)
    {
    ctxt t16_1, t16_2, t16_3, t16_4, t16_5, t16_6, t16_7;
    info.eval->multiply_plain(ss[4], bits["0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000"], t16_1);
    info.eval->multiply_plain(ss[3], bits["0000000000000000000000000000000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t16_2);
    info.eval->multiply_plain(ss[17], bits["0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t16_3);
    info.eval->multiply_plain(ss[5], bits["0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t16_4);
    info.eval->multiply_plain(ss[24], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t16_5);
    info.eval->multiply_plain(ss[2], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"], t16_6);
    info.eval->multiply_plain(ss[7], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000"], t16_7);
    info.eval->add_many({t16_1, t16_2, t16_3, t16_4, t16_5, t16_6, t16_7}, ts[16]);
    }
    
    info.eval->add(ts[15], ts[16], vs[8]); // __v8 = __t15 + __t16
    info.eval->rotate_rows(vs[8], -5, gk, ss[93]); // __s93 = __v8 >> 5
    info.eval->rotate_rows(vs[8], -134, gk, ss[94]); // __s94 = __v8 >> 134
    info.eval->rotate_rows(vs[8], -22, gk, ss[95]); // __s95 = __v8 >> 22
    
    // __t17 = blend(__s94@0000000000100000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s93@0000000000000000000000000000000000001000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000, __v8@0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s95@0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010)
    {
    ctxt t17_1, t17_2, t17_3, t17_4;
    info.eval->multiply_plain(ss[94], bits["0000000000100000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t17_1);
    info.eval->multiply_plain(ss[93], bits["0000000000000000000000000000000000001000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"], t17_2);
    info.eval->multiply_plain(vs[8], bits["0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t17_3);
    info.eval->multiply_plain(ss[95], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010"], t17_4);
    info.eval->add_many({t17_1, t17_2, t17_3, t17_4}, ts[17]);
    }
    
    
    // __t18 = blend(__s23@0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s2@0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s15@0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s8@0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s10@0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __s14@0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, __v0@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000, __s13@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000, __s4@0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010)
    {
    ctxt t18_1, t18_2, t18_3, t18_4, t18_5, t18_6, t18_7, t18_8, t18_9;
    info.eval->multiply_plain(ss[23], bits["0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t18_1);
    info.eval->multiply_plain(ss[2], bits["0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t18_2);
    info.eval->multiply_plain(ss[15], bits["0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t18_3);
    info.eval->multiply_plain(ss[8], bits["0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t18_4);
    info.eval->multiply_plain(ss[10], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t18_5);
    info.eval->multiply_plain(ss[14], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"], t18_6);
    info.eval->multiply_plain(vs[0], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"], t18_7);
    info.eval->multiply_plain(ss[13], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"], t18_8);
    info.eval->multiply_plain(ss[4], bits["0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010"], t18_9);
    info.eval->add_many({t18_1, t18_2, t18_3, t18_4, t18_5, t18_6, t18_7, t18_8, t18_9}, ts[18]);
    }
    
    info.eval->add(ts[17], ts[18], vs[9]); // __v9 = __t17 + __t18
    return vs[9];
}
    